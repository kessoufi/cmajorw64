<library>
    <name>System.Net.Sockets</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Net.Sockets">
            <name>System.Net.Sockets</name>
            <classes>
                <class id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
                    <name>NetworkByteStream</name>
                    <groupName>NetworkByteStream</groupName>
                    <syntax> public class NetworkByteStream;</syntax>
                    <baseClass ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
                    <constructors>
                        <constructor id="constructor_NetworkByteStream_2E13D177DCE7D8E604AF0C8D3719BAB44964410B">
                            <name>NetworkByteStream(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow NetworkByteStream(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.8715676"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_ContainedSocket_NetworkByteStream_5877A5C36FA838A6D795E0621A0ED39CD4011345">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.8715312"/>
                        </function>
                        <function id="member_function_Read_NetworkByteStream_7CC717A683FCA2CF92D52842966C478342D6429E">
                            <name>Read(byte* buf, long count)</name>
                            <syntax>public override long Read(byte* buf, long count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buf</name>
                                    <type ref="type.8699087"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.8699072"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.8699072"/>
                        </function>
                        <function id="member_function_ReadByte_NetworkByteStream_21122C7CF1FB603091462AA31771B04FFD0B82A4">
                            <name>ReadByte()</name>
                            <syntax>public override int ReadByte();</syntax>
                            <returnType ref="type.8699070"/>
                        </function>
                        <function id="function_group_Write_D92DC91823912B36C766F4E43DF7446D8B47D7F7">
                            <name>Write</name>
                            <overloads>
                                <overload id="member_function_Write_NetworkByteStream_317EB6B6F26CFDE3359732B5FB8227E41DE45730">
                                    <name>Write(byte x)</name>
                                    <syntax>public override void Write(byte x);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>x</name>
                                            <type ref="type.8699067"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Write_NetworkByteStream_7712BF37C41B5F0EEB5FD7F82F08573FC4842CEB">
                                    <name>Write(byte* buf, long count)</name>
                                    <syntax>public override void Write(byte* buf, long count);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>buf</name>
                                            <type ref="type.8699087"/>
                                        </parameter>
                                        <parameter>
                                            <name>count</name>
                                            <type ref="type.8699072"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
                    <name>SocketException</name>
                    <groupName>SocketException</groupName>
                    <syntax> public class SocketException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_SocketException_A20CCB041CE705F46AB685C2FDBCFF1B63159B6D">
                            <name>SocketException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow SocketException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
                    <name>TcpClient</name>
                    <groupName>TcpClient</groupName>
                    <syntax> public class TcpClient;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpClient_8C44A0279E08277AD05366824C3F4B0E901E372F">
                            <name>TcpClient()</name>
                            <syntax>public TcpClient();</syntax>
                        </constructor>
                        <constructor id="constructor_TcpClient_A745E50B35C28493221AF81EACFC790B1289D467">
                            <name>TcpClient(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow TcpClient(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.8715676"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpClient_CEDE44377139A1E0E9242C8C55079D69BE011D5B">
                            <name>TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                            <syntax>public TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpClient_A8BE7F4CFE6BDF07E631FC2139ECF641AD0BE6EC">
                            <name>TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                            <syntax>public TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>options</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Close_TcpClient_A5241C8188EE9D31C6C889FC5FA04770D1DC7EBE">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="function_group_Connect_57A24B4486AB83D538AEBA46F28767A53F52B749">
                            <name>Connect</name>
                            <overloads>
                                <overload id="member_function_Connect_TcpClient_0345B5EDB721F16CE4A7ABC5B84CFF40CE12E9FE">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Connect_TcpClient_72B2452588C17D23E40409A9CF801BEE04D05E96">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>options</name>
                                            <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_ContainedSocket_TcpClient_B4451D8C6330B68DFD93B9AD53736838B80CF8F8">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.8715312"/>
                        </function>
                        <function id="member_function_GetStream_TcpClient_5A362E2433095459F0AA981DB991674626704B54">
                            <name>GetStream()</name>
                            <syntax>public SharedPtr&lt;System.IO.ByteStream> GetStream();</syntax>
                            <returnType ref="type.8700168"/>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
                    <name>TcpListener</name>
                    <groupName>TcpListener</groupName>
                    <syntax> public class TcpListener;</syntax>
                    <constructors>
                        <constructor id="constructor_TcpListener_2441D30CCA331496F7C02618D052A4632F7D4EEC">
                            <name>TcpListener(int port_)</name>
                            <syntax>public TcpListener(int port_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port_</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AcceptSocket_TcpListener_75DD432353A70AC1F00CD6CC2408479CF260107A">
                            <name>AcceptSocket()</name>
                            <syntax>public TcpSocket AcceptSocket();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_ContainedSocket_TcpListener_734377D88421D21612E8F3272ACD0716D18F60FF">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.8715312"/>
                        </function>
                        <function id="function_group_Start_61ED0A94DE977C24F5BE6BE2AABED3854506ACA6">
                            <name>Start</name>
                            <overloads>
                                <overload id="member_function_Start_TcpListener_A2710F7D5FA98DB2901A70E2DC25B36CB98C8B04">
                                    <name>Start()</name>
                                    <syntax>public void Start();</syntax>
                                </overload>
                                <overload id="member_function_Start_TcpListener_682B527365ED6BA1D82C9A9B18F9B1808E83062B">
                                    <name>Start(int backLog)</name>
                                    <syntax>public void Start(int backLog);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>backLog</name>
                                            <type ref="type.8699070"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_Stop_TcpListener_99BD7511123E42FF4DFE470336DAB03BB2686A21">
                            <name>Stop()</name>
                            <syntax>public void Stop();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
                    <name>TcpSocket</name>
                    <groupName>TcpSocket</groupName>
                    <syntax> public class TcpSocket;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpSocket_DF0BF2449F6877B95CE9E69809317066EB448DAA">
                            <name>TcpSocket()</name>
                            <syntax>public TcpSocket();</syntax>
                        </constructor>
                        <constructor id="move_constructor_TcpSocket_73CB2E14A5A9CF0FBECB692AB25B8AF11878E7B8">
                            <name>TcpSocket(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow TcpSocket(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.8715676"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_7BBFC3A9B038C80807E11493B6F2A0A616197612">
                            <name>TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_)</name>
                            <syntax>public TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node_</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>service_</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_784B753AF6C6B3A5E20534951CF76ABF0259E42F">
                            <name>TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_, ConnectOptions options_)</name>
                            <syntax>public TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_, ConnectOptions options_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node_</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>service_</name>
                                    <type ref="type.8700211"/>
                                </parameter>
                                <parameter>
                                    <name>options_</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_8CB39B9347232ADA2199CC5ED512FE585829D910">
                            <name>TcpSocket(int handle_)</name>
                            <syntax>public nothrow TcpSocket(int handle_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>handle_</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TcpSocket_E44B032EBA8AB74EC03D6CC523F03D122E0FF56A">
                            <name>Accept()</name>
                            <syntax>public TcpSocket Accept();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_Bind_TcpSocket_FBDC712A6CC5C445C552105D5E99732B48D73BAA">
                            <name>Bind(int port)</name>
                            <syntax>public void Bind(int port);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Close_TcpSocket_69E540F836E0AAFD92BF79138546DFF1F0A7E53C">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="function_group_Connect_9403149A4D7734CB4C5204282218EBEF34B2ABCB">
                            <name>Connect</name>
                            <overloads>
                                <overload id="member_function_Connect_TcpSocket_0345649B29FF0D9518358ECCC8B66371476D2F18">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Connect_TcpSocket_6DE6A7362C6DCF68153D0BDA206B1B51C886B35D">
                                    <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options)</name>
                                    <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service, ConnectOptions options);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>node</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>service</name>
                                            <type ref="type.8700211"/>
                                        </parameter>
                                        <parameter>
                                            <name>options</name>
                                            <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_Listen_TcpSocket_F97D9BDA68320368D265C419C8667590AD5D8753">
                            <name>Listen(int backLog)</name>
                            <syntax>public void Listen(int backLog);</syntax>
                            <parameters>
                                <parameter>
                                    <name>backLog</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Receive_TcpSocket_BF6688890E0F5D9770156E7AFD1E509E7A234B3E">
                            <name>Receive(byte* buffer, int count)</name>
                            <syntax>public int Receive(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.8699087"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.8699070"/>
                        </function>
                        <function id="member_function_Send_TcpSocket_82B1153B1DEE898B2D2BD09C86750B1AC48EF7C5">
                            <name>Send(byte* buffer, int count)</name>
                            <syntax>public int Send(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.8699087"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.8699070"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.8699070"/>
                        </function>
                        <function id="member_function_Shutdown_TcpSocket_FC6438556D00862C65FC8B4AAB63D968AF038E11">
                            <name>Shutdown(ShutdownMode mode)</name>
                            <syntax>public void Shutdown(ShutdownMode mode);</syntax>
                            <parameters>
                                <parameter>
                                    <name>mode</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="move_assignment_op_assign_TcpSocket_D024850CAE212AEC23252608B5A3C6F6990775DD">
                            <name>operator=(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow void operator=(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.8715676"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_group_op_eq_9CE2B2304FAE2EF5B1ED179DC1C4B95113E4C483">
                    <name>operator==</name>
                    <overloads>
                        <overload id="function_op_eq_208CA0919E7D8CE2A8C451288F52CBF7EBB9E803">
                            <name>operator==(ConnectOptions left, ConnectOptions right)</name>
                            <syntax>public bool operator==(ConnectOptions left, ConnectOptions right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.8699065"/>
                        </overload>
                        <overload id="function_op_eq_D5C40EB1DD54445372C885F4ECAF489D1944D169">
                            <name>operator==(ShutdownMode left, ShutdownMode right)</name>
                            <syntax>public bool operator==(ShutdownMode left, ShutdownMode right);</syntax>
                            <parameters>
                                <parameter>
                                    <name>left</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                                <parameter>
                                    <name>right</name>
                                    <type ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.8699065"/>
                        </overload>
                    </overloads>
                </function>
            </functions>
            <enumerations>
                <enumeration id="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1">
                    <name>ConnectOptions</name>
                    <syntax>public enum ConnectOptions;</syntax>
                    <underlyingType ref="type.8699070"/>
                    <enumConstant>
                        <name>none</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>useTls</name>
                        <value>1</value>
                    </enumConstant>
                </enumeration>
                <enumeration id="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D">
                    <name>ShutdownMode</name>
                    <syntax>public enum ShutdownMode;</syntax>
                    <underlyingType ref="type.8699070"/>
                    <enumConstant>
                        <name>receive</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>send</name>
                        <value>1</value>
                    </enumConstant>
                    <enumConstant>
                        <name>both</name>
                        <value>2</value>
                    </enumConstant>
                </enumeration>
            </enumerations>
        </namespace>
    </namespaces>
    <types>
        <type id="type.8700973" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.1525">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.8700973"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="8699702"/>
            </content>
        </type>
        <type derived="true" id="type.1533">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="8699723"/>
            </content>
        </type>
        <type derived="true" id="type.1546">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1793">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1">
            <name>ConnectOptions</name>
        </type>
        <type derived="true" id="type.8715692">
            <name>ConnectOptions&amp;</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715693">
            <name>ConnectOptions&amp;&amp;</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715691">
            <name>ConnectOptions*</name>
            <content>
                <baseType ref="enumerated_type_ConnectOptions_B1107B03A462E820956983F4014CEDB5074783C1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8700180" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="8699868"/>
            </content>
        </type>
        <type derived="true" id="type.1637">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1652">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1630">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1621">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1618">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1659">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="8699871"/>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="8699611"/>
            </content>
        </type>
        <type derived="true" id="type.1483">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="8699607"/>
                <argumentType ref="8699608"/>
                <argumentType ref="8699609"/>
            </content>
        </type>
        <type derived="true" id="type.1480">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1479">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="8699613"/>
                <argumentType ref="type.8700542"/>
                <argumentType ref="type.8700544"/>
            </content>
        </type>
        <type derived="true" id="type.1487">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1482">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1485">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="8699613"/>
                <argumentType ref="type.8700527"/>
                <argumentType ref="type.8700528"/>
            </content>
        </type>
        <type derived="true" id="type.1486">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1484">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1481">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="8699693"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="8699695"/>
                <argumentType ref="8699696"/>
            </content>
        </type>
        <type derived="true" id="type.1521">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="8699722"/>
                <argumentType ref="8699723"/>
                <argumentType ref="8699724"/>
                <argumentType ref="8699725"/>
                <argumentType ref="8699726"/>
            </content>
        </type>
        <type derived="true" id="type.1541">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="8699702"/>
                <argumentType ref="8699702"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="8699703"/>
                <argumentType ref="8699704"/>
            </content>
        </type>
        <type derived="true" id="type.1529">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="8699732"/>
            </content>
        </type>
        <type derived="true" id="type.1549">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1550">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700992" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8700974"/>
            </content>
        </type>
        <type derived="true" id="type.1524">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700992"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701145" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8701128"/>
            </content>
        </type>
        <type derived="true" id="type.1532">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701145"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701330" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.8701311"/>
            </content>
        </type>
        <type derived="true" id="type.1545">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701330"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8702695" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.1677">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702695"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="8699873"/>
            </content>
        </type>
        <type derived="true" id="type.1553">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1671">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1589">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="8699768"/>
            </content>
        </type>
        <type derived="true" id="type.1577">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705037" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.1764">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705037"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1574">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="8699768"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
            <name>NetworkByteStream</name>
        </type>
        <type derived="true" id="type.8715298">
            <name>NetworkByteStream&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1805">
            <name>NetworkByteStream&amp;&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715297">
            <name>NetworkByteStream*</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="8699779"/>
                <argumentType ref="8699780"/>
            </content>
        </type>
        <type id="type.8703878" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699988"/>
                <argumentType ref="type.8703721"/>
                <argumentType ref="type.8703877"/>
            </content>
        </type>
        <type derived="true" id="type.1721">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703878"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704918" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700059"/>
                <argumentType ref="type.8704761"/>
                <argumentType ref="type.8704917"/>
            </content>
        </type>
        <type derived="true" id="type.1746">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704918"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704502" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700033"/>
                <argumentType ref="type.8704345"/>
                <argumentType ref="type.8704501"/>
            </content>
        </type>
        <type derived="true" id="type.1736">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704502"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704710" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700046"/>
                <argumentType ref="type.8704553"/>
                <argumentType ref="type.8704709"/>
            </content>
        </type>
        <type derived="true" id="type.1741">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704710"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703241" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699958"/>
                <argumentType ref="type.8703070"/>
                <argumentType ref="type.8703240"/>
            </content>
        </type>
        <type derived="true" id="type.1706">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703241"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703459" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699968"/>
                <argumentType ref="type.8703302"/>
                <argumentType ref="type.8703458"/>
            </content>
        </type>
        <type derived="true" id="type.1711">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703459"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701087" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701053"/>
                <argumentType ref="type.8701085"/>
                <argumentType ref="type.8701086"/>
            </content>
        </type>
        <type id="type.8701009" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700974"/>
                <argumentType ref="type.8701007"/>
                <argumentType ref="type.8701008"/>
            </content>
        </type>
        <type derived="true" id="type.1523">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1528">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701087"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701000" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700974"/>
                <argumentType ref="type.8700998"/>
                <argumentType ref="type.8700999"/>
            </content>
        </type>
        <type id="type.8701078" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701053"/>
                <argumentType ref="type.8701076"/>
                <argumentType ref="type.8701077"/>
            </content>
        </type>
        <type derived="true" id="type.1522">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701000"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1527">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701078"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703855" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703821"/>
                <argumentType ref="type.8703853"/>
                <argumentType ref="type.8703854"/>
            </content>
        </type>
        <type derived="true" id="type.1720">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703855"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703846" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703821"/>
                <argumentType ref="type.8703844"/>
                <argumentType ref="type.8703845"/>
            </content>
        </type>
        <type derived="true" id="type.1719">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703846"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704895" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704861"/>
                <argumentType ref="type.8704893"/>
                <argumentType ref="type.8704894"/>
            </content>
        </type>
        <type derived="true" id="type.1745">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704895"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704886" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704861"/>
                <argumentType ref="type.8704884"/>
                <argumentType ref="type.8704885"/>
            </content>
        </type>
        <type derived="true" id="type.1744">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704886"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704479" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704445"/>
                <argumentType ref="type.8704477"/>
                <argumentType ref="type.8704478"/>
            </content>
        </type>
        <type derived="true" id="type.1735">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704479"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704470" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704445"/>
                <argumentType ref="type.8704468"/>
                <argumentType ref="type.8704469"/>
            </content>
        </type>
        <type derived="true" id="type.1734">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704470"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704687" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704653"/>
                <argumentType ref="type.8704685"/>
                <argumentType ref="type.8704686"/>
            </content>
        </type>
        <type derived="true" id="type.1740">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704687"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704678" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704653"/>
                <argumentType ref="type.8704676"/>
                <argumentType ref="type.8704677"/>
            </content>
        </type>
        <type derived="true" id="type.1739">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704678"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703225" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703191"/>
                <argumentType ref="type.8703223"/>
                <argumentType ref="type.8703224"/>
            </content>
        </type>
        <type derived="true" id="type.1705">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703225"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703216" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703191"/>
                <argumentType ref="type.8703214"/>
                <argumentType ref="type.8703215"/>
            </content>
        </type>
        <type derived="true" id="type.1704">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703216"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703436" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703402"/>
                <argumentType ref="type.8703434"/>
                <argumentType ref="type.8703435"/>
            </content>
        </type>
        <type derived="true" id="type.1710">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703436"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703427" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703402"/>
                <argumentType ref="type.8703425"/>
                <argumentType ref="type.8703426"/>
            </content>
        </type>
        <type derived="true" id="type.1709">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703427"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703647" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703613"/>
                <argumentType ref="type.8703645"/>
                <argumentType ref="type.8703646"/>
            </content>
        </type>
        <type derived="true" id="type.1715">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703647"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703638" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703613"/>
                <argumentType ref="type.8703636"/>
                <argumentType ref="type.8703637"/>
            </content>
        </type>
        <type derived="true" id="type.1714">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703638"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704271" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704237"/>
                <argumentType ref="type.8704269"/>
                <argumentType ref="type.8704270"/>
            </content>
        </type>
        <type derived="true" id="type.1730">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704271"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704262" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704237"/>
                <argumentType ref="type.8704260"/>
                <argumentType ref="type.8704261"/>
            </content>
        </type>
        <type derived="true" id="type.1729">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704262"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704063" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704029"/>
                <argumentType ref="type.8704061"/>
                <argumentType ref="type.8704062"/>
            </content>
        </type>
        <type derived="true" id="type.1725">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704063"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704054" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704029"/>
                <argumentType ref="type.8704052"/>
                <argumentType ref="type.8704053"/>
            </content>
        </type>
        <type derived="true" id="type.1724">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704054"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703779" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703745"/>
                <argumentType ref="type.8703777"/>
                <argumentType ref="type.8703778"/>
            </content>
        </type>
        <type derived="true" id="type.1718">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703779"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703770" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703745"/>
                <argumentType ref="type.8703768"/>
                <argumentType ref="type.8703769"/>
            </content>
        </type>
        <type derived="true" id="type.1717">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703770"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704819" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704785"/>
                <argumentType ref="type.8704817"/>
                <argumentType ref="type.8704818"/>
            </content>
        </type>
        <type derived="true" id="type.1743">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704819"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704810" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704785"/>
                <argumentType ref="type.8704808"/>
                <argumentType ref="type.8704809"/>
            </content>
        </type>
        <type derived="true" id="type.1742">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704810"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704403" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704369"/>
                <argumentType ref="type.8704401"/>
                <argumentType ref="type.8704402"/>
            </content>
        </type>
        <type derived="true" id="type.1733">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704403"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704394" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704369"/>
                <argumentType ref="type.8704392"/>
                <argumentType ref="type.8704393"/>
            </content>
        </type>
        <type derived="true" id="type.1732">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704394"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704611" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704577"/>
                <argumentType ref="type.8704609"/>
                <argumentType ref="type.8704610"/>
            </content>
        </type>
        <type derived="true" id="type.1738">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704611"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704602" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704577"/>
                <argumentType ref="type.8704600"/>
                <argumentType ref="type.8704601"/>
            </content>
        </type>
        <type derived="true" id="type.1737">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704602"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703128" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703094"/>
                <argumentType ref="type.8703126"/>
                <argumentType ref="type.8703127"/>
            </content>
        </type>
        <type derived="true" id="type.1703">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703128"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703119" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703094"/>
                <argumentType ref="type.8703117"/>
                <argumentType ref="type.8703118"/>
            </content>
        </type>
        <type derived="true" id="type.1702">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703119"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703360" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703326"/>
                <argumentType ref="type.8703358"/>
                <argumentType ref="type.8703359"/>
            </content>
        </type>
        <type derived="true" id="type.1708">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703360"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703351" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703326"/>
                <argumentType ref="type.8703349"/>
                <argumentType ref="type.8703350"/>
            </content>
        </type>
        <type derived="true" id="type.1707">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703351"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703571" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703537"/>
                <argumentType ref="type.8703569"/>
                <argumentType ref="type.8703570"/>
            </content>
        </type>
        <type derived="true" id="type.1713">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703571"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703562" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703537"/>
                <argumentType ref="type.8703560"/>
                <argumentType ref="type.8703561"/>
            </content>
        </type>
        <type derived="true" id="type.1712">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703562"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704195" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704161"/>
                <argumentType ref="type.8704193"/>
                <argumentType ref="type.8704194"/>
            </content>
        </type>
        <type derived="true" id="type.1728">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704195"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704186" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704161"/>
                <argumentType ref="type.8704184"/>
                <argumentType ref="type.8704185"/>
            </content>
        </type>
        <type derived="true" id="type.1727">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704186"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703987" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703953"/>
                <argumentType ref="type.8703985"/>
                <argumentType ref="type.8703986"/>
            </content>
        </type>
        <type derived="true" id="type.1723">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703987"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703978" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8703953"/>
                <argumentType ref="type.8703976"/>
                <argumentType ref="type.8703977"/>
            </content>
        </type>
        <type derived="true" id="type.1722">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703978"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701162" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701128"/>
                <argumentType ref="type.8701160"/>
                <argumentType ref="type.8701161"/>
            </content>
        </type>
        <type id="type.8701236" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701202"/>
                <argumentType ref="type.8701234"/>
                <argumentType ref="type.8701235"/>
            </content>
        </type>
        <type id="type.8701162" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701128"/>
                <argumentType ref="type.8701160"/>
                <argumentType ref="type.8701161"/>
            </content>
        </type>
        <type derived="true" id="type.1531">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701162"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1535">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701236"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701153" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701128"/>
                <argumentType ref="type.8701151"/>
                <argumentType ref="type.8701152"/>
            </content>
        </type>
        <type id="type.8701227" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701202"/>
                <argumentType ref="type.8701225"/>
                <argumentType ref="type.8701226"/>
            </content>
        </type>
        <type derived="true" id="type.1530">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701153"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1534">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701227"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701347" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701311"/>
                <argumentType ref="type.8701345"/>
                <argumentType ref="type.8701346"/>
            </content>
        </type>
        <type derived="true" id="type.1544">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701347"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701338" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8701311"/>
                <argumentType ref="type.8701336"/>
                <argumentType ref="type.8701337"/>
            </content>
        </type>
        <type derived="true" id="type.1543">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701338"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699899"/>
                <argumentType ref="type.8702826"/>
                <argumentType ref="type.8702827"/>
            </content>
        </type>
        <type derived="true" id="type.1691">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1687">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1683">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1695">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1673">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1679">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1699">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699899"/>
                <argumentType ref="type.8702816"/>
                <argumentType ref="type.8702817"/>
            </content>
        </type>
        <type derived="true" id="type.1698">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1672">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1686">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1694">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1682">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1678">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1690">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8703670" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699978"/>
                <argumentType ref="type.8703513"/>
                <argumentType ref="type.8703669"/>
            </content>
        </type>
        <type derived="true" id="type.1716">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8703670"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704287" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700020"/>
                <argumentType ref="type.8704137"/>
                <argumentType ref="type.8704286"/>
            </content>
        </type>
        <type derived="true" id="type.1731">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704287"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704086" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700001"/>
                <argumentType ref="type.8703929"/>
                <argumentType ref="type.8704085"/>
            </content>
        </type>
        <type derived="true" id="type.1726">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704086"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8702943" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702909"/>
                <argumentType ref="type.8702908"/>
            </content>
        </type>
        <type id="type.8702990" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702953"/>
                <argumentType ref="type.8702952"/>
            </content>
        </type>
        <type id="type.8702708" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702671"/>
                <argumentType ref="type.8702670"/>
            </content>
        </type>
        <type id="type.8702802" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702765"/>
                <argumentType ref="type.8702764"/>
            </content>
        </type>
        <type id="type.8702896" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702859"/>
                <argumentType ref="type.8702858"/>
            </content>
        </type>
        <type id="type.8702755" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702718"/>
                <argumentType ref="type.8702717"/>
            </content>
        </type>
        <type id="type.8702849" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702812"/>
                <argumentType ref="type.8702811"/>
            </content>
        </type>
        <type derived="true" id="type.1701">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1693">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702896"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1689">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702849"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1685">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702802"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1676">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702708"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1697">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702943"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1681">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702755"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8702936" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702912"/>
                <argumentType ref="type.8702911"/>
            </content>
        </type>
        <type id="type.8702983" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702956"/>
                <argumentType ref="type.8702955"/>
            </content>
        </type>
        <type id="type.8702842" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702815"/>
                <argumentType ref="type.8702814"/>
            </content>
        </type>
        <type id="type.8702889" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702862"/>
                <argumentType ref="type.8702861"/>
            </content>
        </type>
        <type id="type.8702701" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702674"/>
                <argumentType ref="type.8702673"/>
            </content>
        </type>
        <type id="type.8702748" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702721"/>
                <argumentType ref="type.8702720"/>
            </content>
        </type>
        <type id="type.8702795" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.8702768"/>
                <argumentType ref="type.8702767"/>
            </content>
        </type>
        <type derived="true" id="type.1696">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702936"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1692">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702889"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1688">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702842"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1700">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702983"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1684">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702795"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1675">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702701"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1680">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8702748"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700241" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700206"/>
                <argumentType ref="type.8700208"/>
                <argumentType ref="type.8700207"/>
            </content>
        </type>
        <type derived="true" id="type.1445">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700241"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700234" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700206"/>
                <argumentType ref="type.8700211"/>
                <argumentType ref="type.8700210"/>
            </content>
        </type>
        <type derived="true" id="type.1444">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700234"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700331" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700294"/>
                <argumentType ref="type.8700296"/>
                <argumentType ref="type.8700295"/>
            </content>
        </type>
        <type derived="true" id="type.1464">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700331"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700324" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700294"/>
                <argumentType ref="type.8700299"/>
                <argumentType ref="type.8700298"/>
            </content>
        </type>
        <type derived="true" id="type.1463">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700324"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700286" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700249"/>
                <argumentType ref="type.8700251"/>
                <argumentType ref="type.8700250"/>
            </content>
        </type>
        <type derived="true" id="type.1454">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700286"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700279" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8700249"/>
                <argumentType ref="type.8700254"/>
                <argumentType ref="type.8700253"/>
            </content>
        </type>
        <type derived="true" id="type.1453">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700279"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704948" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.8700072"/>
                <argumentType ref="type.8700071"/>
            </content>
        </type>
        <type derived="true" id="type.1748">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704941" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.8700075"/>
                <argumentType ref="type.8700074"/>
            </content>
        </type>
        <type derived="true" id="type.1747">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704941"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699797"/>
                <argumentType ref="8699798"/>
                <argumentType ref="8699799"/>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699806"/>
                <argumentType ref="8699807"/>
                <argumentType ref="8699808"/>
            </content>
        </type>
        <type derived="true" id="type.1592">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1591">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1593">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1596">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1595">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1594">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1590">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699743"/>
                <argumentType ref="type.8701542"/>
                <argumentType ref="type.8701543"/>
            </content>
        </type>
        <type derived="true" id="type.1670">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1588">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1558">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1552">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1556">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="8699743"/>
                <argumentType ref="type.8701532"/>
                <argumentType ref="type.8701533"/>
            </content>
        </type>
        <type derived="true" id="type.1669">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1555">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1557">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1587">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1551">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704977" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704957"/>
                <argumentType ref="type.8704959"/>
                <argumentType ref="type.8704958"/>
            </content>
        </type>
        <type derived="true" id="type.1750">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704977"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704970" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704957"/>
                <argumentType ref="type.8704962"/>
                <argumentType ref="type.8704961"/>
            </content>
        </type>
        <type derived="true" id="type.1749">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704970"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705073" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8705053"/>
                <argumentType ref="type.8705055"/>
                <argumentType ref="type.8705054"/>
            </content>
        </type>
        <type derived="true" id="type.1766">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705073"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705066" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8705053"/>
                <argumentType ref="type.8705058"/>
                <argumentType ref="type.8705057"/>
            </content>
        </type>
        <type derived="true" id="type.1765">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705066"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705005" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704985"/>
                <argumentType ref="type.8704987"/>
                <argumentType ref="type.8704986"/>
            </content>
        </type>
        <type derived="true" id="type.1752">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705005"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8704998" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8704985"/>
                <argumentType ref="type.8704990"/>
                <argumentType ref="type.8704989"/>
            </content>
        </type>
        <type derived="true" id="type.1751">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8704998"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705108" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8705088"/>
                <argumentType ref="type.8705090"/>
                <argumentType ref="type.8705089"/>
            </content>
        </type>
        <type derived="true" id="type.1768">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705108"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705101" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8705088"/>
                <argumentType ref="type.8705093"/>
                <argumentType ref="type.8705092"/>
            </content>
        </type>
        <type derived="true" id="type.1767">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705101"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8715444" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699067"/>
                <argumentType ref="type.8699088"/>
                <argumentType ref="type.8699087"/>
            </content>
        </type>
        <type id="type.1566" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699067"/>
                <argumentType ref="type.8699088"/>
                <argumentType ref="type.8699087"/>
            </content>
        </type>
        <type id="type.8715444" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699067"/>
                <argumentType ref="type.8699088"/>
                <argumentType ref="type.8699087"/>
            </content>
        </type>
        <type id="type.8701696" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699067"/>
                <argumentType ref="type.8699088"/>
                <argumentType ref="type.8699087"/>
            </content>
        </type>
        <type derived="true" id="type.8715446">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.8715444"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1568">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.1566"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715446">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.8715444"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1775">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715444"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1573">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1572">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1566"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715445">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.8715444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1567">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.1566"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715445">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.8715444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8715315" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699076"/>
                <argumentType ref="type.8699115"/>
                <argumentType ref="type.8699114"/>
            </content>
        </type>
        <type id="type.1437" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699076"/>
                <argumentType ref="type.8699115"/>
                <argumentType ref="type.8699114"/>
            </content>
        </type>
        <type derived="true" id="type.8715317">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.8715315"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1439">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.1437"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1443">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1437"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1771">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715315"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1438">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.1437"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715316">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.8715315"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8715334" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699078"/>
                <argumentType ref="type.8699121"/>
                <argumentType ref="type.8699120"/>
            </content>
        </type>
        <type id="type.8700310" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699078"/>
                <argumentType ref="type.8699121"/>
                <argumentType ref="type.8699120"/>
            </content>
        </type>
        <type id="type.8715334" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699078"/>
                <argumentType ref="type.8699121"/>
                <argumentType ref="type.8699120"/>
            </content>
        </type>
        <type id="type.1456" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699078"/>
                <argumentType ref="type.8699121"/>
                <argumentType ref="type.8699120"/>
            </content>
        </type>
        <type derived="true" id="type.8715336">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.8715334"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1458">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.1456"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1465">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700310"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1773">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715334"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1462">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1456"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715335">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.8715334"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1457">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.1456"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715335">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.8715334"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8705022" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699071"/>
                <argumentType ref="type.8705019"/>
                <argumentType ref="type.8705020"/>
            </content>
        </type>
        <type derived="true" id="type.1753">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705022"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8715633" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699071"/>
                <argumentType ref="type.8699100"/>
                <argumentType ref="type.8699099"/>
            </content>
        </type>
        <type id="type.8705029" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699071"/>
                <argumentType ref="type.8699100"/>
                <argumentType ref="type.8699099"/>
            </content>
        </type>
        <type id="type.1754" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699071"/>
                <argumentType ref="type.8699100"/>
                <argumentType ref="type.8699099"/>
            </content>
        </type>
        <type id="type.8715633" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699071"/>
                <argumentType ref="type.8699100"/>
                <argumentType ref="type.8699099"/>
            </content>
        </type>
        <type derived="true" id="type.8715635">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.8715633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1756">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.1754"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1776">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715633"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1761">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705029"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1760">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1754"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715634">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.8715633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1755">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.1754"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715634">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.8715633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8700353" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699073"/>
                <argumentType ref="type.8700350"/>
                <argumentType ref="type.8700351"/>
            </content>
        </type>
        <type derived="true" id="type.1466">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8715345" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699073"/>
                <argumentType ref="type.8699106"/>
                <argumentType ref="type.8699105"/>
            </content>
        </type>
        <type id="type.8700360" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699073"/>
                <argumentType ref="type.8699106"/>
                <argumentType ref="type.8699105"/>
            </content>
        </type>
        <type id="type.8715345" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699073"/>
                <argumentType ref="type.8699106"/>
                <argumentType ref="type.8699105"/>
            </content>
        </type>
        <type id="type.1467" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699073"/>
                <argumentType ref="type.8699106"/>
                <argumentType ref="type.8699105"/>
            </content>
        </type>
        <type derived="true" id="type.1469">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.1467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715347">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.8715345"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1474">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700360"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1774">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715345"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1473">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1468">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.1467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715346">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.8715345"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8700265" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699077"/>
                <argumentType ref="type.8699118"/>
                <argumentType ref="type.8699117"/>
            </content>
        </type>
        <type id="type.8715324" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699077"/>
                <argumentType ref="type.8699118"/>
                <argumentType ref="type.8699117"/>
            </content>
        </type>
        <type id="type.1446" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.8699077"/>
                <argumentType ref="type.8699118"/>
                <argumentType ref="type.8699117"/>
            </content>
        </type>
        <type derived="true" id="type.8715326">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.8715324"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1448">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.1446"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1772">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8715324"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1452">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1446"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1455">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700265"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715325">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.8715324"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1447">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.1446"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="8699750"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="8699752"/>
            </content>
        </type>
        <type derived="true" id="type.1563">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="8699829"/>
                <argumentType ref="8699830"/>
                <argumentType ref="8699831"/>
                <argumentType ref="8699832"/>
            </content>
        </type>
        <type derived="true" id="type.1605">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="8699835"/>
                <argumentType ref="8699835"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="8699836"/>
            </content>
        </type>
        <type derived="true" id="type.1610">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1434">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715260">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1792">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715259">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1433">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8701660" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.8701621"/>
                <argumentType ref="type.8701620"/>
            </content>
        </type>
        <type derived="true" id="type.1562">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701660"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701642" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.8701631"/>
                <argumentType ref="type.8701640"/>
            </content>
        </type>
        <type derived="true" id="type.1561">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701642"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="8699825"/>
                <argumentType ref="8699826"/>
                <argumentType ref="8699827"/>
            </content>
        </type>
        <type derived="true" id="type.1601">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1602">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="8699839"/>
                <argumentType ref="type.8702086"/>
                <argumentType ref="type.8702088"/>
            </content>
        </type>
        <type derived="true" id="type.1609">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1615">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1613">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="8699837"/>
                <argumentType ref="type.8702006"/>
                <argumentType ref="type.8702015"/>
            </content>
        </type>
        <type derived="true" id="type.1614">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1612">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1608">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="8699830"/>
                <argumentType ref="type.8701913"/>
                <argumentType ref="type.8701915"/>
            </content>
        </type>
        <type derived="true" id="type.1604">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="8699830"/>
                <argumentType ref="type.8701898"/>
                <argumentType ref="type.8701899"/>
            </content>
        </type>
        <type derived="true" id="type.1603">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="8699868"/>
            </content>
        </type>
        <type derived="true" id="type.1638">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1622">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1654">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1660">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1632">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700168" specialization="true">
            <name>SharedPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="8699866"/>
            </content>
        </type>
        <type derived="true" id="type.1662">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1655">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1640">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D">
            <name>ShutdownMode</name>
        </type>
        <type derived="true" id="type.8715689">
            <name>ShutdownMode&amp;</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715690">
            <name>ShutdownMode&amp;&amp;</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715688">
            <name>ShutdownMode*</name>
            <content>
                <baseType ref="enumerated_type_ShutdownMode_F52114B05CC436E0AC5DDC4F8D31571053B1D29D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
            <name>SocketException</name>
        </type>
        <type derived="true" id="type.8715309">
            <name>SocketException&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715696">
            <name>SocketException&amp;&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715308">
            <name>SocketException*</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1779">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="8699896"/>
            </content>
        </type>
        <type derived="true" id="type.1674">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1548">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699730"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1476">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1526">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699694"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1478">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699604"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1540">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699713"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1600">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699822"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1598">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699820"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1538">
            <name>T&amp;</name>
            <content>
                <baseType ref="8699711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1668">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="8699873"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1586">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="8699789"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1554">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="8699743"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
            <name>TcpClient</name>
        </type>
        <type derived="true" id="type.8715301">
            <name>TcpClient&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1808">
            <name>TcpClient&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715300">
            <name>TcpClient*</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
            <name>TcpListener</name>
        </type>
        <type derived="true" id="type.8715304">
            <name>TcpListener&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1811">
            <name>TcpListener&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715303">
            <name>TcpListener*</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
            <name>TcpSocket</name>
        </type>
        <type derived="true" id="type.8715312">
            <name>TcpSocket&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715676">
            <name>TcpSocket&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715311">
            <name>TcpSocket*</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.8701671" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.8701648"/>
            </content>
        </type>
        <type derived="true" id="type.1564">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701671"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701986" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.1611">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701986"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8701928" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.1607">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.8701928"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8705182" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.1770">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.8705182"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="8700104"/>
            </content>
        </type>
        <type derived="true" id="type.1769">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1565">
            <name>Value&amp;</name>
            <content>
                <baseType ref="8699751"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="8699868"/>
            </content>
        </type>
        <type derived="true" id="type.1631">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1623">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1639">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1661">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1653">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.8700196" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.1436">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.8700196"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="8699866"/>
            </content>
        </type>
        <type derived="true" id="type.1641">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1663">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1656">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1645">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1666">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1647">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1643">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="8699863"/>
            </content>
        </type>
        <type derived="true" id="type.1649">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699065">
            <name>bool</name>
        </type>
        <type basic="true" id="type.8699067">
            <name>byte</name>
        </type>
        <type derived="true" id="type.8699088">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.8699067"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699087">
            <name>byte*</name>
            <content>
                <baseType ref="type.8699067"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699076">
            <name>char</name>
        </type>
        <type derived="true" id="type.8699115">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.8699076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699114">
            <name>char*</name>
            <content>
                <baseType ref="type.8699076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1780">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.1781">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1782">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.1783">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1784">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.1785">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.1794">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.1799">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.1800">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1435">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8700180"/>
            </content>
        </type>
        <type derived="true" id="type.1628">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1644">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1626">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1650">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1642">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1646">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1635">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1657">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1624">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1619">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1634">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1616">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1664">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1633">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1625">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1665">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1629">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1620">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1617">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1651">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1636">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1658">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1648">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1627">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1667">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1786">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.1787">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1788">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.1789">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1519">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699693"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1559">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1542">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699722"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1606">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699829"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1575">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.1576">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1762">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8705037"/>
            </content>
        </type>
        <type derived="true" id="type.1763">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8705037"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1795">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.1803">
            <name>const NetworkByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
            </content>
        </type>
        <type derived="true" id="type.1804">
            <name>const NetworkByteStream&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1790">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.1585">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1582">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715447">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715444"/>
            </content>
        </type>
        <type derived="true" id="type.1569">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1566"/>
            </content>
        </type>
        <type derived="true" id="type.8715449">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715444"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1571">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1566"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715448">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1570">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1566"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715448">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715318">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715315"/>
            </content>
        </type>
        <type derived="true" id="type.1440">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1437"/>
            </content>
        </type>
        <type derived="true" id="type.8715320">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715315"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1442">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1437"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715319">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715315"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1441">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1437"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715337">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715334"/>
            </content>
        </type>
        <type derived="true" id="type.1459">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1456"/>
            </content>
        </type>
        <type derived="true" id="type.8715339">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715334"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1461">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1456"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715338">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715334"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1460">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1456"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715636">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715633"/>
            </content>
        </type>
        <type derived="true" id="type.1757">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1754"/>
            </content>
        </type>
        <type derived="true" id="type.8715638">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1759">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1754"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715637">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1758">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1754"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715637">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715348">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715345"/>
            </content>
        </type>
        <type derived="true" id="type.1470">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1467"/>
            </content>
        </type>
        <type derived="true" id="type.8715348">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715345"/>
            </content>
        </type>
        <type derived="true" id="type.8715350">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715345"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1472">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715349">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715345"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1471">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1449">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1446"/>
            </content>
        </type>
        <type derived="true" id="type.8715327">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715324"/>
            </content>
        </type>
        <type derived="true" id="type.8715329">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715324"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1451">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1446"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715329">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715324"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715328">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715324"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1450">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1446"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8715328">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8715324"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1796">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.1812">
            <name>const SocketException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
            </content>
        </type>
        <type derived="true" id="type.1813">
            <name>const SocketException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1777">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.1778">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1791">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.8700211">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.8700206"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1599">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699822"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1597">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699820"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1493">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699634"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1494">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1495">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699645"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1496">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699647"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1477">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699604"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1498">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699650"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1499">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699652"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1501">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699655"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1502">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699657"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1504">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699660"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1505">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699662"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1507">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699665"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1508">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699667"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1510">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1490">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699627"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1511">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699672"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1513">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699681"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1491">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699629"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1514">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699683"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1515">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699685"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1516">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699687"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1517">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699689"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1518">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699691"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1520">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699694"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1536">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699709"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1537">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1539">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699713"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1547">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699730"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1578">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699770"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1580">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699779"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1492">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699632"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1488">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699622"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1583">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699782"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1489">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699625"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1475">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1806">
            <name>const TcpClient</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
            </content>
        </type>
        <type derived="true" id="type.1807">
            <name>const TcpClient&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1809">
            <name>const TcpListener</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
            </content>
        </type>
        <type derived="true" id="type.1810">
            <name>const TcpListener&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1814">
            <name>const TcpSocket</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
            </content>
        </type>
        <type derived="true" id="type.8715681">
            <name>const TcpSocket&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1797">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.1798">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1584">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699783"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1512">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699673"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1579">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699771"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1581">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699780"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1497">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699648"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1500">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699653"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1503">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699658"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1506">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699663"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1509">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699668"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1801">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.1802">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1560">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="8699751"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699070">
            <name>int</name>
        </type>
        <type basic="true" id="type.8699072">
            <name>long</name>
        </type>
        <type basic="true" id="type.8699078">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.8699121">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.8699078"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699120">
            <name>uchar*</name>
            <content>
                <baseType ref="type.8699078"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699071">
            <name>uint</name>
        </type>
        <type derived="true" id="type.8699100">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.8699071"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699099">
            <name>uint*</name>
            <content>
                <baseType ref="type.8699071"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699073">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.8699106">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.8699073"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699105">
            <name>ulong*</name>
            <content>
                <baseType ref="type.8699073"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.8699077">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.8699118">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.8699077"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.8699117">
            <name>wchar*</name>
            <content>
                <baseType ref="type.8699077"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
