<library>
    <name>System.Net.Sockets</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Net.Sockets">
            <name>System.Net.Sockets</name>
            <classes>
                <class id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
                    <name>NetworkByteStream</name>
                    <groupName>NetworkByteStream</groupName>
                    <syntax> public class NetworkByteStream;</syntax>
                    <baseClass ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
                    <constructors>
                        <constructor id="constructor_NetworkByteStream_2E13D177DCE7D8E604AF0C8D3719BAB44964410B">
                            <name>NetworkByteStream(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow NetworkByteStream(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.5462277"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_ContainedSocket_NetworkByteStream_5877A5C36FA838A6D795E0621A0ED39CD4011345">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.5461911"/>
                        </function>
                        <function id="member_function_Read_NetworkByteStream_7CC717A683FCA2CF92D52842966C478342D6429E">
                            <name>Read(byte* buf, long count)</name>
                            <syntax>public override long Read(byte* buf, long count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buf</name>
                                    <type ref="type.5445710"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.5445695"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.5445695"/>
                        </function>
                        <function id="member_function_ReadByte_NetworkByteStream_21122C7CF1FB603091462AA31771B04FFD0B82A4">
                            <name>ReadByte()</name>
                            <syntax>public override int ReadByte();</syntax>
                            <returnType ref="type.5445693"/>
                        </function>
                        <function id="function_group_Write_D92DC91823912B36C766F4E43DF7446D8B47D7F7">
                            <name>Write</name>
                            <overloads>
                                <overload id="member_function_Write_NetworkByteStream_317EB6B6F26CFDE3359732B5FB8227E41DE45730">
                                    <name>Write(byte x)</name>
                                    <syntax>public override void Write(byte x);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>x</name>
                                            <type ref="type.5445690"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_Write_NetworkByteStream_7712BF37C41B5F0EEB5FD7F82F08573FC4842CEB">
                                    <name>Write(byte* buf, long count)</name>
                                    <syntax>public override void Write(byte* buf, long count);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>buf</name>
                                            <type ref="type.5445710"/>
                                        </parameter>
                                        <parameter>
                                            <name>count</name>
                                            <type ref="type.5445695"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                    </functions>
                </class>
                <class id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
                    <name>SocketException</name>
                    <groupName>SocketException</groupName>
                    <syntax> public class SocketException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_SocketException_A20CCB041CE705F46AB685C2FDBCFF1B63159B6D">
                            <name>SocketException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow SocketException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
                    <name>TcpClient</name>
                    <groupName>TcpClient</groupName>
                    <syntax> public class TcpClient;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpClient_8C44A0279E08277AD05366824C3F4B0E901E372F">
                            <name>TcpClient()</name>
                            <syntax>public TcpClient();</syntax>
                        </constructor>
                        <constructor id="constructor_TcpClient_A745E50B35C28493221AF81EACFC790B1289D467">
                            <name>TcpClient(TcpSocket&amp;&amp; socket_)</name>
                            <syntax>public nothrow TcpClient(TcpSocket&amp;&amp; socket_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>socket_</name>
                                    <type ref="type.5462277"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpClient_CEDE44377139A1E0E9242C8C55079D69BE011D5B">
                            <name>TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                            <syntax>public TcpClient(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Close_TcpClient_A5241C8188EE9D31C6C889FC5FA04770D1DC7EBE">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="member_function_Connect_TcpClient_0345B5EDB721F16CE4A7ABC5B84CFF40CE12E9FE">
                            <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                            <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ContainedSocket_TcpClient_B4451D8C6330B68DFD93B9AD53736838B80CF8F8">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.5461911"/>
                        </function>
                        <function id="member_function_GetStream_TcpClient_5A362E2433095459F0AA981DB991674626704B54">
                            <name>GetStream()</name>
                            <syntax>public SharedPtr&lt;System.IO.ByteStream> GetStream();</syntax>
                            <returnType ref="type.5446775"/>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
                    <name>TcpListener</name>
                    <groupName>TcpListener</groupName>
                    <syntax> public class TcpListener;</syntax>
                    <constructors>
                        <constructor id="constructor_TcpListener_2441D30CCA331496F7C02618D052A4632F7D4EEC">
                            <name>TcpListener(int port_)</name>
                            <syntax>public TcpListener(int port_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port_</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AcceptSocket_TcpListener_75DD432353A70AC1F00CD6CC2408479CF260107A">
                            <name>AcceptSocket()</name>
                            <syntax>public TcpSocket AcceptSocket();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_ContainedSocket_TcpListener_734377D88421D21612E8F3272ACD0716D18F60FF">
                            <name>ContainedSocket()</name>
                            <syntax>public TcpSocket&amp; ContainedSocket();</syntax>
                            <returnType ref="type.5461911"/>
                        </function>
                        <function id="function_group_Start_61ED0A94DE977C24F5BE6BE2AABED3854506ACA6">
                            <name>Start</name>
                            <overloads>
                                <overload id="member_function_Start_TcpListener_A2710F7D5FA98DB2901A70E2DC25B36CB98C8B04">
                                    <name>Start()</name>
                                    <syntax>public void Start();</syntax>
                                </overload>
                                <overload id="member_function_Start_TcpListener_682B527365ED6BA1D82C9A9B18F9B1808E83062B">
                                    <name>Start(int backLog)</name>
                                    <syntax>public void Start(int backLog);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>backLog</name>
                                            <type ref="type.5445693"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_Stop_TcpListener_99BD7511123E42FF4DFE470336DAB03BB2686A21">
                            <name>Stop()</name>
                            <syntax>public void Stop();</syntax>
                        </function>
                    </functions>
                </class>
                <class id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
                    <name>TcpSocket</name>
                    <groupName>TcpSocket</groupName>
                    <syntax> public class TcpSocket;</syntax>
                    <constructors>
                        <constructor id="default_constructor_TcpSocket_DF0BF2449F6877B95CE9E69809317066EB448DAA">
                            <name>TcpSocket()</name>
                            <syntax>public TcpSocket();</syntax>
                        </constructor>
                        <constructor id="move_constructor_TcpSocket_73CB2E14A5A9CF0FBECB692AB25B8AF11878E7B8">
                            <name>TcpSocket(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow TcpSocket(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.5462277"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_7BBFC3A9B038C80807E11493B6F2A0A616197612">
                            <name>TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_)</name>
                            <syntax>public TcpSocket(const String&lt;char>&amp; node_, const String&lt;char>&amp; service_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node_</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                                <parameter>
                                    <name>service_</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                            </parameters>
                        </constructor>
                        <constructor id="constructor_TcpSocket_8CB39B9347232ADA2199CC5ED512FE585829D910">
                            <name>TcpSocket(int handle_)</name>
                            <syntax>public nothrow TcpSocket(int handle_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>handle_</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Accept_TcpSocket_E44B032EBA8AB74EC03D6CC523F03D122E0FF56A">
                            <name>Accept()</name>
                            <syntax>public TcpSocket Accept();</syntax>
                            <returnType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                        </function>
                        <function id="member_function_Bind_TcpSocket_FBDC712A6CC5C445C552105D5E99732B48D73BAA">
                            <name>Bind(int port)</name>
                            <syntax>public void Bind(int port);</syntax>
                            <parameters>
                                <parameter>
                                    <name>port</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Close_TcpSocket_69E540F836E0AAFD92BF79138546DFF1F0A7E53C">
                            <name>Close()</name>
                            <syntax>public void Close();</syntax>
                        </function>
                        <function id="member_function_Connect_TcpSocket_0345649B29FF0D9518358ECCC8B66371476D2F18">
                            <name>Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service)</name>
                            <syntax>public void Connect(const String&lt;char>&amp; node, const String&lt;char>&amp; service);</syntax>
                            <parameters>
                                <parameter>
                                    <name>node</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                                <parameter>
                                    <name>service</name>
                                    <type ref="type.5446818"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Listen_TcpSocket_F97D9BDA68320368D265C419C8667590AD5D8753">
                            <name>Listen(int backLog)</name>
                            <syntax>public void Listen(int backLog);</syntax>
                            <parameters>
                                <parameter>
                                    <name>backLog</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Receive_TcpSocket_BF6688890E0F5D9770156E7AFD1E509E7A234B3E">
                            <name>Receive(byte* buffer, int count)</name>
                            <syntax>public int Receive(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.5445710"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.5445693"/>
                        </function>
                        <function id="member_function_Send_TcpSocket_82B1153B1DEE898B2D2BD09C86750B1AC48EF7C5">
                            <name>Send(byte* buffer, int count)</name>
                            <syntax>public int Send(byte* buffer, int count);</syntax>
                            <parameters>
                                <parameter>
                                    <name>buffer</name>
                                    <type ref="type.5445710"/>
                                </parameter>
                                <parameter>
                                    <name>count</name>
                                    <type ref="type.5445693"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.5445693"/>
                        </function>
                        <function id="member_function_Shutdown_TcpSocket_FC6438556D00862C65FC8B4AAB63D968AF038E11">
                            <name>Shutdown(ShutdownMode mode)</name>
                            <syntax>public void Shutdown(ShutdownMode mode);</syntax>
                            <parameters>
                                <parameter>
                                    <name>mode</name>
                                    <type ref="5461905"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="move_assignment_op_assign_TcpSocket_D024850CAE212AEC23252608B5A3C6F6990775DD">
                            <name>operator=(TcpSocket&amp;&amp; that)</name>
                            <syntax>public nothrow void operator=(TcpSocket&amp;&amp; that);</syntax>
                            <parameters>
                                <parameter>
                                    <name>that</name>
                                    <type ref="type.5462277"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_op_eq_D5C40EB1DD54445372C885F4ECAF489D1944D169">
                    <name>operator==(ShutdownMode left, ShutdownMode right)</name>
                    <syntax>public bool operator==(ShutdownMode left, ShutdownMode right);</syntax>
                    <parameters>
                        <parameter>
                            <name>left</name>
                            <type ref="5461905"/>
                        </parameter>
                        <parameter>
                            <name>right</name>
                            <type ref="5461905"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.5445688"/>
                </function>
            </functions>
            <enumerations>
                <enumeration id="5461905">
                    <name>ShutdownMode</name>
                    <syntax>public enum ShutdownMode;</syntax>
                    <underlyingType ref="type.5445693"/>
                    <enumConstant>
                        <name>receive</name>
                        <value>0</value>
                    </enumConstant>
                    <enumConstant>
                        <name>send</name>
                        <value>1</value>
                    </enumConstant>
                    <enumConstant>
                        <name>both</name>
                        <value>2</value>
                    </enumConstant>
                </enumeration>
            </enumerations>
        </namespace>
    </namespaces>
    <types>
        <type id="type.5447577" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.1531">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.5447577"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="5446325"/>
            </content>
        </type>
        <type derived="true" id="type.1539">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="5446346"/>
            </content>
        </type>
        <type derived="true" id="type.1552">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1801">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446787" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="5446474"/>
            </content>
        </type>
        <type derived="true" id="type.1636">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1624">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1658">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1665">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1627">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1643">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="5446494"/>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="5446234"/>
            </content>
        </type>
        <type derived="true" id="type.1489">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="5446230"/>
                <argumentType ref="5446231"/>
                <argumentType ref="5446232"/>
            </content>
        </type>
        <type derived="true" id="type.1485">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1486">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="5446236"/>
                <argumentType ref="type.5447146"/>
                <argumentType ref="type.5447148"/>
            </content>
        </type>
        <type derived="true" id="type.1493">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1488">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1491">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="5446236"/>
                <argumentType ref="type.5447131"/>
                <argumentType ref="type.5447132"/>
            </content>
        </type>
        <type derived="true" id="type.1487">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1490">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1492">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="5446316"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="5446318"/>
                <argumentType ref="5446319"/>
            </content>
        </type>
        <type derived="true" id="type.1527">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="5446345"/>
                <argumentType ref="5446346"/>
                <argumentType ref="5446347"/>
                <argumentType ref="5446348"/>
                <argumentType ref="5446349"/>
            </content>
        </type>
        <type derived="true" id="type.1547">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="5446325"/>
                <argumentType ref="5446325"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="5446326"/>
                <argumentType ref="5446327"/>
            </content>
        </type>
        <type derived="true" id="type.1535">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="5446362"/>
            </content>
        </type>
        <type derived="true" id="type.1556">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1555">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447596" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.5447578"/>
            </content>
        </type>
        <type derived="true" id="type.1530">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447596"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447749" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.5447732"/>
            </content>
        </type>
        <type derived="true" id="type.1538">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447749"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447934" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.5447915"/>
            </content>
        </type>
        <type derived="true" id="type.1551">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447934"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449304" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.1683">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449304"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="5446366"/>
            </content>
        </type>
        <type derived="true" id="type.1559">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1677">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1595">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="5446391"/>
            </content>
        </type>
        <type derived="true" id="type.1583">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451642" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.1770">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451642"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1580">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="5446391"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D">
            <name>NetworkByteStream</name>
        </type>
        <type derived="true" id="type.5461898">
            <name>NetworkByteStream&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1813">
            <name>NetworkByteStream&amp;&amp;</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461897">
            <name>NetworkByteStream*</name>
            <content>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="5446405"/>
                <argumentType ref="5446406"/>
            </content>
        </type>
        <type id="type.5450483" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446595"/>
                <argumentType ref="type.5450326"/>
                <argumentType ref="type.5450482"/>
            </content>
        </type>
        <type derived="true" id="type.1727">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450483"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451523" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446666"/>
                <argumentType ref="type.5451366"/>
                <argumentType ref="type.5451522"/>
            </content>
        </type>
        <type derived="true" id="type.1752">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451523"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451107" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446640"/>
                <argumentType ref="type.5450950"/>
                <argumentType ref="type.5451106"/>
            </content>
        </type>
        <type derived="true" id="type.1742">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451107"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451315" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446653"/>
                <argumentType ref="type.5451158"/>
                <argumentType ref="type.5451314"/>
            </content>
        </type>
        <type derived="true" id="type.1747">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451315"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449846" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446565"/>
                <argumentType ref="type.5449675"/>
                <argumentType ref="type.5449845"/>
            </content>
        </type>
        <type derived="true" id="type.1712">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449846"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450064" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446575"/>
                <argumentType ref="type.5449907"/>
                <argumentType ref="type.5450063"/>
            </content>
        </type>
        <type derived="true" id="type.1717">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450064"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447613" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447578"/>
                <argumentType ref="type.5447611"/>
                <argumentType ref="type.5447612"/>
            </content>
        </type>
        <type id="type.5447691" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447657"/>
                <argumentType ref="type.5447689"/>
                <argumentType ref="type.5447690"/>
            </content>
        </type>
        <type id="type.5447613" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447578"/>
                <argumentType ref="type.5447611"/>
                <argumentType ref="type.5447612"/>
            </content>
        </type>
        <type derived="true" id="type.1529">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447613"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1534">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447691"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447682" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447657"/>
                <argumentType ref="type.5447680"/>
                <argumentType ref="type.5447681"/>
            </content>
        </type>
        <type id="type.5447604" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447578"/>
                <argumentType ref="type.5447602"/>
                <argumentType ref="type.5447603"/>
            </content>
        </type>
        <type id="type.5447682" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447657"/>
                <argumentType ref="type.5447680"/>
                <argumentType ref="type.5447681"/>
            </content>
        </type>
        <type derived="true" id="type.1528">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447604"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1533">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447682"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450460" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450426"/>
                <argumentType ref="type.5450458"/>
                <argumentType ref="type.5450459"/>
            </content>
        </type>
        <type derived="true" id="type.1726">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450460"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450451" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450426"/>
                <argumentType ref="type.5450449"/>
                <argumentType ref="type.5450450"/>
            </content>
        </type>
        <type derived="true" id="type.1725">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450451"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451500" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451466"/>
                <argumentType ref="type.5451498"/>
                <argumentType ref="type.5451499"/>
            </content>
        </type>
        <type derived="true" id="type.1751">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451500"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451491" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451466"/>
                <argumentType ref="type.5451489"/>
                <argumentType ref="type.5451490"/>
            </content>
        </type>
        <type derived="true" id="type.1750">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451491"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451084" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451050"/>
                <argumentType ref="type.5451082"/>
                <argumentType ref="type.5451083"/>
            </content>
        </type>
        <type derived="true" id="type.1741">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451084"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451075" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451050"/>
                <argumentType ref="type.5451073"/>
                <argumentType ref="type.5451074"/>
            </content>
        </type>
        <type derived="true" id="type.1740">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451075"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451292" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451258"/>
                <argumentType ref="type.5451290"/>
                <argumentType ref="type.5451291"/>
            </content>
        </type>
        <type derived="true" id="type.1746">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451292"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451283" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451258"/>
                <argumentType ref="type.5451281"/>
                <argumentType ref="type.5451282"/>
            </content>
        </type>
        <type derived="true" id="type.1745">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451283"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449830" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449796"/>
                <argumentType ref="type.5449828"/>
                <argumentType ref="type.5449829"/>
            </content>
        </type>
        <type derived="true" id="type.1711">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449830"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449821" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449796"/>
                <argumentType ref="type.5449819"/>
                <argumentType ref="type.5449820"/>
            </content>
        </type>
        <type derived="true" id="type.1710">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449821"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450041" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450007"/>
                <argumentType ref="type.5450039"/>
                <argumentType ref="type.5450040"/>
            </content>
        </type>
        <type derived="true" id="type.1716">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450041"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450032" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450007"/>
                <argumentType ref="type.5450030"/>
                <argumentType ref="type.5450031"/>
            </content>
        </type>
        <type derived="true" id="type.1715">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450032"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450252" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450218"/>
                <argumentType ref="type.5450250"/>
                <argumentType ref="type.5450251"/>
            </content>
        </type>
        <type derived="true" id="type.1721">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450252"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450243" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450218"/>
                <argumentType ref="type.5450241"/>
                <argumentType ref="type.5450242"/>
            </content>
        </type>
        <type derived="true" id="type.1720">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450243"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450876" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450842"/>
                <argumentType ref="type.5450874"/>
                <argumentType ref="type.5450875"/>
            </content>
        </type>
        <type derived="true" id="type.1736">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450876"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450867" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450842"/>
                <argumentType ref="type.5450865"/>
                <argumentType ref="type.5450866"/>
            </content>
        </type>
        <type derived="true" id="type.1735">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450867"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450668" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450634"/>
                <argumentType ref="type.5450666"/>
                <argumentType ref="type.5450667"/>
            </content>
        </type>
        <type derived="true" id="type.1731">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450668"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450659" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450634"/>
                <argumentType ref="type.5450657"/>
                <argumentType ref="type.5450658"/>
            </content>
        </type>
        <type derived="true" id="type.1730">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450659"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450384" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450350"/>
                <argumentType ref="type.5450382"/>
                <argumentType ref="type.5450383"/>
            </content>
        </type>
        <type derived="true" id="type.1724">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450384"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450375" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450350"/>
                <argumentType ref="type.5450373"/>
                <argumentType ref="type.5450374"/>
            </content>
        </type>
        <type derived="true" id="type.1723">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450375"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451424" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451390"/>
                <argumentType ref="type.5451422"/>
                <argumentType ref="type.5451423"/>
            </content>
        </type>
        <type derived="true" id="type.1749">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451424"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451415" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451390"/>
                <argumentType ref="type.5451413"/>
                <argumentType ref="type.5451414"/>
            </content>
        </type>
        <type derived="true" id="type.1748">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451415"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451008" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450974"/>
                <argumentType ref="type.5451006"/>
                <argumentType ref="type.5451007"/>
            </content>
        </type>
        <type derived="true" id="type.1739">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451008"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450999" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450974"/>
                <argumentType ref="type.5450997"/>
                <argumentType ref="type.5450998"/>
            </content>
        </type>
        <type derived="true" id="type.1738">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450999"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451216" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451182"/>
                <argumentType ref="type.5451214"/>
                <argumentType ref="type.5451215"/>
            </content>
        </type>
        <type derived="true" id="type.1744">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451216"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451207" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451182"/>
                <argumentType ref="type.5451205"/>
                <argumentType ref="type.5451206"/>
            </content>
        </type>
        <type derived="true" id="type.1743">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451207"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449733" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449699"/>
                <argumentType ref="type.5449731"/>
                <argumentType ref="type.5449732"/>
            </content>
        </type>
        <type derived="true" id="type.1709">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449733"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449724" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449699"/>
                <argumentType ref="type.5449722"/>
                <argumentType ref="type.5449723"/>
            </content>
        </type>
        <type derived="true" id="type.1708">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449724"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449965" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449931"/>
                <argumentType ref="type.5449963"/>
                <argumentType ref="type.5449964"/>
            </content>
        </type>
        <type derived="true" id="type.1714">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449965"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449956" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5449931"/>
                <argumentType ref="type.5449954"/>
                <argumentType ref="type.5449955"/>
            </content>
        </type>
        <type derived="true" id="type.1713">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449956"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450176" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450142"/>
                <argumentType ref="type.5450174"/>
                <argumentType ref="type.5450175"/>
            </content>
        </type>
        <type derived="true" id="type.1719">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450176"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450167" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450142"/>
                <argumentType ref="type.5450165"/>
                <argumentType ref="type.5450166"/>
            </content>
        </type>
        <type derived="true" id="type.1718">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450167"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450800" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450766"/>
                <argumentType ref="type.5450798"/>
                <argumentType ref="type.5450799"/>
            </content>
        </type>
        <type derived="true" id="type.1734">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450800"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450791" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450766"/>
                <argumentType ref="type.5450789"/>
                <argumentType ref="type.5450790"/>
            </content>
        </type>
        <type derived="true" id="type.1733">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450791"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450592" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450558"/>
                <argumentType ref="type.5450590"/>
                <argumentType ref="type.5450591"/>
            </content>
        </type>
        <type derived="true" id="type.1729">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450592"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450583" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5450558"/>
                <argumentType ref="type.5450581"/>
                <argumentType ref="type.5450582"/>
            </content>
        </type>
        <type derived="true" id="type.1728">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450583"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447840" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447806"/>
                <argumentType ref="type.5447838"/>
                <argumentType ref="type.5447839"/>
            </content>
        </type>
        <type id="type.5447766" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447732"/>
                <argumentType ref="type.5447764"/>
                <argumentType ref="type.5447765"/>
            </content>
        </type>
        <type derived="true" id="type.1541">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447840"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1537">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447766"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447757" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447732"/>
                <argumentType ref="type.5447755"/>
                <argumentType ref="type.5447756"/>
            </content>
        </type>
        <type id="type.5447831" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447806"/>
                <argumentType ref="type.5447829"/>
                <argumentType ref="type.5447830"/>
            </content>
        </type>
        <type derived="true" id="type.1536">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447757"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1540">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447831"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447951" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447915"/>
                <argumentType ref="type.5447949"/>
                <argumentType ref="type.5447950"/>
            </content>
        </type>
        <type derived="true" id="type.1550">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447951"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5447942" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5447915"/>
                <argumentType ref="type.5447940"/>
                <argumentType ref="type.5447941"/>
            </content>
        </type>
        <type derived="true" id="type.1549">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5447942"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="5446518"/>
                <argumentType ref="type.5449388"/>
                <argumentType ref="type.5449389"/>
            </content>
        </type>
        <type derived="true" id="type.1679">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1693">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1705">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1689">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1701">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1685">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1697">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="5446519"/>
                <argumentType ref="type.5449425"/>
                <argumentType ref="type.5449426"/>
            </content>
        </type>
        <type derived="true" id="type.1678">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1700">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1704">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1688">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1692">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1696">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1684">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450275" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446585"/>
                <argumentType ref="type.5450118"/>
                <argumentType ref="type.5450274"/>
            </content>
        </type>
        <type derived="true" id="type.1722">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450275"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450892" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446627"/>
                <argumentType ref="type.5450742"/>
                <argumentType ref="type.5450891"/>
            </content>
        </type>
        <type derived="true" id="type.1737">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5450691" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446608"/>
                <argumentType ref="type.5450534"/>
                <argumentType ref="type.5450690"/>
            </content>
        </type>
        <type derived="true" id="type.1732">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.5450691"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449458" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449421"/>
                <argumentType ref="type.5449420"/>
            </content>
        </type>
        <type id="type.5449364" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449327"/>
                <argumentType ref="type.5449326"/>
            </content>
        </type>
        <type id="type.5449317" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449280"/>
                <argumentType ref="type.5449279"/>
            </content>
        </type>
        <type id="type.5449411" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449374"/>
                <argumentType ref="type.5449373"/>
            </content>
        </type>
        <type id="type.5449599" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449562"/>
                <argumentType ref="type.5449561"/>
            </content>
        </type>
        <type id="type.5449552" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449518"/>
                <argumentType ref="type.5449517"/>
            </content>
        </type>
        <type id="type.5449505" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449468"/>
                <argumentType ref="type.5449467"/>
            </content>
        </type>
        <type derived="true" id="type.1691">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449411"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1699">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449505"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1695">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449458"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1703">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449552"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1707">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449599"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1682">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449317"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1687">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449364"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5449545" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449521"/>
                <argumentType ref="type.5449520"/>
            </content>
        </type>
        <type id="type.5449592" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449565"/>
                <argumentType ref="type.5449564"/>
            </content>
        </type>
        <type id="type.5449404" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449377"/>
                <argumentType ref="type.5449376"/>
            </content>
        </type>
        <type id="type.5449498" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449471"/>
                <argumentType ref="type.5449470"/>
            </content>
        </type>
        <type id="type.5449451" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449424"/>
                <argumentType ref="type.5449423"/>
            </content>
        </type>
        <type id="type.5449310" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449283"/>
                <argumentType ref="type.5449282"/>
            </content>
        </type>
        <type id="type.5449498" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449471"/>
                <argumentType ref="type.5449470"/>
            </content>
        </type>
        <type id="type.5449357" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.5449330"/>
                <argumentType ref="type.5449329"/>
            </content>
        </type>
        <type derived="true" id="type.1690">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449404"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1702">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449545"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1698">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449498"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1686">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449357"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1681">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449310"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1706">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449592"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1694">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5449451"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446848" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446813"/>
                <argumentType ref="type.5446815"/>
                <argumentType ref="type.5446814"/>
            </content>
        </type>
        <type derived="true" id="type.1451">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446848"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446841" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446813"/>
                <argumentType ref="type.5446818"/>
                <argumentType ref="type.5446817"/>
            </content>
        </type>
        <type derived="true" id="type.1450">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446841"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446938" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446901"/>
                <argumentType ref="type.5446903"/>
                <argumentType ref="type.5446902"/>
            </content>
        </type>
        <type derived="true" id="type.1470">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446938"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446931" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446901"/>
                <argumentType ref="type.5446906"/>
                <argumentType ref="type.5446905"/>
            </content>
        </type>
        <type derived="true" id="type.1469">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446931"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446893" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446856"/>
                <argumentType ref="type.5446858"/>
                <argumentType ref="type.5446857"/>
            </content>
        </type>
        <type derived="true" id="type.1460">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446893"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446886" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5446856"/>
                <argumentType ref="type.5446861"/>
                <argumentType ref="type.5446860"/>
            </content>
        </type>
        <type derived="true" id="type.1459">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446886"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451553" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.5446679"/>
                <argumentType ref="type.5446678"/>
            </content>
        </type>
        <type derived="true" id="type.1754">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451553"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451546" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.5446682"/>
                <argumentType ref="type.5446681"/>
            </content>
        </type>
        <type derived="true" id="type.1753">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451546"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="5446426"/>
                <argumentType ref="5446427"/>
                <argumentType ref="5446428"/>
            </content>
        </type>
        <type derived="true" id="type.1598">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1599">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1597">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1596">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1602">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1600">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1601">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="5446366"/>
                <argumentType ref="type.5448146"/>
                <argumentType ref="type.5448147"/>
            </content>
        </type>
        <type derived="true" id="type.1594">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1558">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1562">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1564">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1676">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="5446367"/>
                <argumentType ref="type.5448163"/>
                <argumentType ref="type.5448164"/>
            </content>
        </type>
        <type derived="true" id="type.1563">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1557">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1561">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1675">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1593">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451582" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451562"/>
                <argumentType ref="type.5451564"/>
                <argumentType ref="type.5451563"/>
            </content>
        </type>
        <type derived="true" id="type.1756">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451575" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451562"/>
                <argumentType ref="type.5451567"/>
                <argumentType ref="type.5451566"/>
            </content>
        </type>
        <type derived="true" id="type.1755">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451575"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451678" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451658"/>
                <argumentType ref="type.5451660"/>
                <argumentType ref="type.5451659"/>
            </content>
        </type>
        <type derived="true" id="type.1772">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451678"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451671" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451658"/>
                <argumentType ref="type.5451663"/>
                <argumentType ref="type.5451662"/>
            </content>
        </type>
        <type derived="true" id="type.1771">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451671"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451610" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451590"/>
                <argumentType ref="type.5451592"/>
                <argumentType ref="type.5451591"/>
            </content>
        </type>
        <type derived="true" id="type.1758">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451610"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451603" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451590"/>
                <argumentType ref="type.5451595"/>
                <argumentType ref="type.5451594"/>
            </content>
        </type>
        <type derived="true" id="type.1757">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451713" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451693"/>
                <argumentType ref="type.5451695"/>
                <argumentType ref="type.5451694"/>
            </content>
        </type>
        <type derived="true" id="type.1774">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451713"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451706" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5451693"/>
                <argumentType ref="type.5451698"/>
                <argumentType ref="type.5451697"/>
            </content>
        </type>
        <type derived="true" id="type.1773">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451706"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5462043" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445690"/>
                <argumentType ref="type.5445711"/>
                <argumentType ref="type.5445710"/>
            </content>
        </type>
        <type id="type.1572" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445690"/>
                <argumentType ref="type.5445711"/>
                <argumentType ref="type.5445710"/>
            </content>
        </type>
        <type id="type.5448300" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445690"/>
                <argumentType ref="type.5445711"/>
                <argumentType ref="type.5445710"/>
            </content>
        </type>
        <type derived="true" id="type.1574">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.1572"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462045">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.5462043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1781">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5462043"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1578">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1572"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1579">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448300"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462044">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.5462043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1573">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.1572"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462044">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.5462043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5461914" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445699"/>
                <argumentType ref="type.5445738"/>
                <argumentType ref="type.5445737"/>
            </content>
        </type>
        <type id="type.1443" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445699"/>
                <argumentType ref="type.5445738"/>
                <argumentType ref="type.5445737"/>
            </content>
        </type>
        <type derived="true" id="type.5461916">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.5461914"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1445">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.1443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1449">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1443"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1777">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5461914"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461915">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.5461914"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1444">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.1443"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5461933" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445701"/>
                <argumentType ref="type.5445744"/>
                <argumentType ref="type.5445743"/>
            </content>
        </type>
        <type id="type.5446917" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445701"/>
                <argumentType ref="type.5445744"/>
                <argumentType ref="type.5445743"/>
            </content>
        </type>
        <type id="type.5461933" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445701"/>
                <argumentType ref="type.5445744"/>
                <argumentType ref="type.5445743"/>
            </content>
        </type>
        <type id="type.1462" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445701"/>
                <argumentType ref="type.5445744"/>
                <argumentType ref="type.5445743"/>
            </content>
        </type>
        <type derived="true" id="type.1464">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.1462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461935">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.5461933"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1468">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1462"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1779">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5461933"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1471">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446917"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461934">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.5461933"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1463">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.1462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5451627" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445694"/>
                <argumentType ref="type.5451624"/>
                <argumentType ref="type.5451625"/>
            </content>
        </type>
        <type derived="true" id="type.1759">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451627"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5462232" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445694"/>
                <argumentType ref="type.5445723"/>
                <argumentType ref="type.5445722"/>
            </content>
        </type>
        <type id="type.5451634" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445694"/>
                <argumentType ref="type.5445723"/>
                <argumentType ref="type.5445722"/>
            </content>
        </type>
        <type id="type.1760" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445694"/>
                <argumentType ref="type.5445723"/>
                <argumentType ref="type.5445722"/>
            </content>
        </type>
        <type derived="true" id="type.5462234">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.5462232"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1762">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.1760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1767">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451634"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1766">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1760"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1782">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5462232"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462233">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.5462232"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1761">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.1760"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5446960" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445696"/>
                <argumentType ref="type.5446957"/>
                <argumentType ref="type.5446958"/>
            </content>
        </type>
        <type derived="true" id="type.1472">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446960"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.1473" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445696"/>
                <argumentType ref="type.5445729"/>
                <argumentType ref="type.5445728"/>
            </content>
        </type>
        <type id="type.5461944" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445696"/>
                <argumentType ref="type.5445729"/>
                <argumentType ref="type.5445728"/>
            </content>
        </type>
        <type id="type.5446967" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445696"/>
                <argumentType ref="type.5445729"/>
                <argumentType ref="type.5445728"/>
            </content>
        </type>
        <type id="type.5461944" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445696"/>
                <argumentType ref="type.5445729"/>
                <argumentType ref="type.5445728"/>
            </content>
        </type>
        <type derived="true" id="type.5461946">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.5461944"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1475">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.1473"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1780">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5461944"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1479">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1473"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1480">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446967"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461945">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.5461944"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1474">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.1473"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5461923" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445700"/>
                <argumentType ref="type.5445741"/>
                <argumentType ref="type.5445740"/>
            </content>
        </type>
        <type id="type.1452" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445700"/>
                <argumentType ref="type.5445741"/>
                <argumentType ref="type.5445740"/>
            </content>
        </type>
        <type id="type.5461923" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445700"/>
                <argumentType ref="type.5445741"/>
                <argumentType ref="type.5445740"/>
            </content>
        </type>
        <type id="type.5446872" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.5445700"/>
                <argumentType ref="type.5445741"/>
                <argumentType ref="type.5445740"/>
            </content>
        </type>
        <type derived="true" id="type.5461925">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.5461923"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1454">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.1452"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1778">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5461923"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1461">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446872"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1458">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.1452"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461924">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.5461923"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1453">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.1452"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="5446373"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="5446375"/>
            </content>
        </type>
        <type derived="true" id="type.1569">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="5446452"/>
                <argumentType ref="5446453"/>
                <argumentType ref="5446454"/>
                <argumentType ref="5446455"/>
            </content>
        </type>
        <type derived="true" id="type.1611">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="5446458"/>
                <argumentType ref="5446458"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="5446459"/>
            </content>
        </type>
        <type derived="true" id="type.1616">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1440">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461860">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1800">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1439">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461859">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5448264" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.5448225"/>
                <argumentType ref="type.5448224"/>
            </content>
        </type>
        <type derived="true" id="type.1568">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448264"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5448246" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.5448235"/>
                <argumentType ref="type.5448244"/>
            </content>
        </type>
        <type derived="true" id="type.1567">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448246"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="5446445"/>
                <argumentType ref="5446446"/>
                <argumentType ref="5446447"/>
            </content>
        </type>
        <type derived="true" id="type.1607">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1608">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="5446458"/>
                <argumentType ref="type.5448576"/>
                <argumentType ref="type.5448578"/>
            </content>
        </type>
        <type derived="true" id="type.1615">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1621">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1619">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="5446460"/>
                <argumentType ref="type.5448610"/>
                <argumentType ref="type.5448619"/>
            </content>
        </type>
        <type derived="true" id="type.1614">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1620">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1618">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="5446453"/>
                <argumentType ref="type.5448517"/>
                <argumentType ref="type.5448519"/>
            </content>
        </type>
        <type derived="true" id="type.1610">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="5446453"/>
                <argumentType ref="type.5448502"/>
                <argumentType ref="type.5448503"/>
            </content>
        </type>
        <type derived="true" id="type.1609">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="5446483"/>
            </content>
        </type>
        <type derived="true" id="type.1638">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1644">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1628">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1660">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1666">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446775" specialization="true">
            <name>SharedPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="5446491"/>
            </content>
        </type>
        <type derived="true" id="type.1668">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1646">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1661">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="5461905">
            <name>ShutdownMode</name>
        </type>
        <type derived="true" id="type.5462288">
            <name>ShutdownMode&amp;</name>
            <content>
                <baseType ref="5461905"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462289">
            <name>ShutdownMode&amp;&amp;</name>
            <content>
                <baseType ref="5461905"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462287">
            <name>ShutdownMode*</name>
            <content>
                <baseType ref="5461905"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB">
            <name>SocketException</name>
        </type>
        <type derived="true" id="type.5461908">
            <name>SocketException&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462292">
            <name>SocketException&amp;&amp;</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461907">
            <name>SocketException*</name>
            <content>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1785">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="5446516"/>
            </content>
        </type>
        <type derived="true" id="type.1680">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1532">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446317"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1606">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446445"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1544">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446334"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1546">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1482">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446225"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1604">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1554">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1484">
            <name>T&amp;</name>
            <content>
                <baseType ref="5446227"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1560">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="5446366"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1674">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="5446496"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1592">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="5446412"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21">
            <name>TcpClient</name>
        </type>
        <type derived="true" id="type.5461901">
            <name>TcpClient&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1816">
            <name>TcpClient&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461900">
            <name>TcpClient*</name>
            <content>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
            <name>TcpListener</name>
        </type>
        <type derived="true" id="type.5461904">
            <name>TcpListener&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1819">
            <name>TcpListener&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461903">
            <name>TcpListener*</name>
            <content>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
            <name>TcpSocket</name>
        </type>
        <type derived="true" id="type.5461911">
            <name>TcpSocket&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462277">
            <name>TcpSocket&amp;&amp;</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461910">
            <name>TcpSocket*</name>
            <content>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.5448275" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.5448252"/>
            </content>
        </type>
        <type derived="true" id="type.1570">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448275"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5448590" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.1617">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448590"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5448532" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.1613">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.5448532"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5451787" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.1776">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.5451787"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="5446711"/>
            </content>
        </type>
        <type derived="true" id="type.1775">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1571">
            <name>Value&amp;</name>
            <content>
                <baseType ref="5446374"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="5446491"/>
            </content>
        </type>
        <type derived="true" id="type.1637">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1629">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1659">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1667">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1645">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.5446803" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.1442">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.5446803"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="5446493"/>
            </content>
        </type>
        <type derived="true" id="type.1662">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1669">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1653">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1649">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1672">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1647">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1651">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="5446486"/>
            </content>
        </type>
        <type derived="true" id="type.1655">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445688">
            <name>bool</name>
        </type>
        <type basic="true" id="type.5445690">
            <name>byte</name>
        </type>
        <type derived="true" id="type.5445711">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.5445690"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445710">
            <name>byte*</name>
            <content>
                <baseType ref="type.5445690"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445699">
            <name>char</name>
        </type>
        <type derived="true" id="type.5445738">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.5445699"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445737">
            <name>char*</name>
            <content>
                <baseType ref="type.5445699"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1786">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.1787">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1788">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.1789">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1790">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.1791">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.1802">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.1807">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.1808">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1441">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5446787"/>
            </content>
        </type>
        <type derived="true" id="type.1671">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1641">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1640">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1639">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1622">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1625">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1652">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1630">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1631">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1632">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1670">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1663">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1656">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1650">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1648">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1634">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.1657">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1642">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1623">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1626">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1664">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1635">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1654">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1673">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1633">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.1792">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.1793">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1794">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.1795">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1525">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446316"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1565">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446373"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1548">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446345"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1612">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446452"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1581">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.1582">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1768">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5451642"/>
            </content>
        </type>
        <type derived="true" id="type.1769">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5451642"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1803">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.1811">
            <name>const NetworkByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
            </content>
        </type>
        <type derived="true" id="type.1812">
            <name>const NetworkByteStream&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_NetworkByteStream_5A7A9D75DF6B7A874E386D849EB0B8F0D28C226D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1796">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.1591">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1588">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462046">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
            </content>
        </type>
        <type derived="true" id="type.1575">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1572"/>
            </content>
        </type>
        <type derived="true" id="type.5462046">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
            </content>
        </type>
        <type derived="true" id="type.5462048">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1577">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1572"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462048">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462047">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1576">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1572"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462047">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461917">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461914"/>
            </content>
        </type>
        <type derived="true" id="type.1446">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1443"/>
            </content>
        </type>
        <type derived="true" id="type.5461917">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461914"/>
            </content>
        </type>
        <type derived="true" id="type.5461919">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461914"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1448">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461919">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461914"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1447">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1443"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461918">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461914"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1465">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1462"/>
            </content>
        </type>
        <type derived="true" id="type.5461936">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461933"/>
            </content>
        </type>
        <type derived="true" id="type.5461938">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461933"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1467">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461937">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461933"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1466">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1763">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1760"/>
            </content>
        </type>
        <type derived="true" id="type.5462235">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462232"/>
            </content>
        </type>
        <type derived="true" id="type.5462237">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462232"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1765">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1764">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1760"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5462236">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5462232"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461947">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461944"/>
            </content>
        </type>
        <type derived="true" id="type.1476">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1473"/>
            </content>
        </type>
        <type derived="true" id="type.5461949">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461944"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1478">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1473"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461949">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461944"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461948">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461944"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1477">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1473"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461926">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461923"/>
            </content>
        </type>
        <type derived="true" id="type.1455">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1452"/>
            </content>
        </type>
        <type derived="true" id="type.5461926">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461923"/>
            </content>
        </type>
        <type derived="true" id="type.5461928">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461923"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1457">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1452"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461927">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461923"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1456">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.1452"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5461927">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5461923"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1804">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.1820">
            <name>const SocketException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
            </content>
        </type>
        <type derived="true" id="type.1821">
            <name>const SocketException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SocketException_543E6533D1008D044BED00CE9B250109F27F18FB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1783">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.1784">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1797">
            <name>const StreamReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamReader_8A8267CD81BA8B198AF295474A8CB0B2DFBB7B57"/>
            </content>
        </type>
        <type derived="true" id="type.1798">
            <name>const StreamReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamReader_8A8267CD81BA8B198AF295474A8CB0B2DFBB7B57"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1799">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.5446818">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.5446813"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1497">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446252"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1498">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446255"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1500">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446266"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1501">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446268"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1502">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446270"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1504">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446273"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1505">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446275"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1507">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446278"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1508">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446280"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1510">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446283"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1511">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446285"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1513">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446288"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1514">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446290"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1499">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446257"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1516">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446293"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1517">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446295"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1519">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446304"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1520">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446306"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1521">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446308"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1522">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446310"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1523">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446312"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1524">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446314"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1526">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446317"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1542">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446332"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1543">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446334"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1545">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1553">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446353"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1584">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446393"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1586">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446402"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1589">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446405"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1603">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446443"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1605">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446445"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1481">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446225"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1483">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446227"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1494">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446245"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1495">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446248"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1496">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446250"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1814">
            <name>const TcpClient</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
            </content>
        </type>
        <type derived="true" id="type.1815">
            <name>const TcpClient&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpClient_BEAB95A1A35E77E97DFDF4C9915EEDD66CFDEF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1817">
            <name>const TcpListener</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
            </content>
        </type>
        <type derived="true" id="type.1818">
            <name>const TcpListener&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1822">
            <name>const TcpSocket</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
            </content>
        </type>
        <type derived="true" id="type.5462294">
            <name>const TcpSocket&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1805">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.1806">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1512">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446286"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1515">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446291"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1509">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446281"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1503">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446271"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1506">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446276"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1590">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446406"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1585">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446394"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1518">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446296"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1587">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446403"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1809">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.1810">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.1566">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="5446374"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445693">
            <name>int</name>
        </type>
        <type basic="true" id="type.5445695">
            <name>long</name>
        </type>
        <type basic="true" id="type.5445701">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.5445744">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.5445701"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445743">
            <name>uchar*</name>
            <content>
                <baseType ref="type.5445701"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445694">
            <name>uint</name>
        </type>
        <type derived="true" id="type.5445723">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.5445694"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445722">
            <name>uint*</name>
            <content>
                <baseType ref="type.5445694"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445696">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.5445729">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.5445696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445728">
            <name>ulong*</name>
            <content>
                <baseType ref="type.5445696"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.5445700">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.5445741">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.5445700"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.5445740">
            <name>wchar*</name>
            <content>
                <baseType ref="type.5445700"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
