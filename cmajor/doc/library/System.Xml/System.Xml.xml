<library>
    <name>System.Xml</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Xml">
            <name>System.Xml</name>
            <classes>
                <class id="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6">
                    <name>Attribute</name>
                    <groupName>Attribute</groupName>
                    <syntax> public class Attribute;</syntax>
                    <constructors>
                        <constructor id="constructor_Attribute_6E674821A04E05F248948C9C72159E88D17A8BEC">
                            <name>Attribute(const String&lt;uchar>&amp; namespaceUri_, const String&lt;uchar>&amp; localName_, const String&lt;uchar>&amp; qualifiedName_, const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow Attribute(const String&lt;uchar>&amp; namespaceUri_, const String&lt;uchar>&amp; localName_, const String&lt;uchar>&amp; qualifiedName_, const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>localName_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_LocalName_Attribute_8DA38D06BB5C227721DE8317A5B2522D405F299C">
                            <name>LocalName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; LocalName() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                        <function id="member_function_NamespaceUri_Attribute_FCD8632734EA214456AF20D10BE355F504B8A51E">
                            <name>NamespaceUri() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; NamespaceUri() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                        <function id="member_function_QualifiedName_Attribute_83715DE77B3DA658C671DA547E81296492AC58E7">
                            <name>QualifiedName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; QualifiedName() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                        <function id="member_function_Value_Attribute_DB447045C9877CB1AAEB1A7F9430152D8944D124">
                            <name>Value() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Value() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A">
                    <name>Attributes</name>
                    <groupName>Attributes</groupName>
                    <syntax> public class Attributes;</syntax>
                    <functions>
                        <function id="member_function_Add_Attributes_542213B4F0B9B717828A2EFD3D57A0A6E1C01853">
                            <name>Add(const Attribute&amp; attribute)</name>
                            <syntax>public void Add(const Attribute&amp; attribute);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attribute</name>
                                    <type ref="type.9339857"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="function_group_Begin_E7806F1E087C8FBC4AAC7CA03BDA4E3F0EBAAEBF">
                            <name>Begin</name>
                            <overloads>
                                <overload id="member_function_Begin_Attributes_E0FE2B1D836D9A509546ACCA17C436728633AA02">
                                    <name>Begin()</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> Begin();</syntax>
                                    <returnType ref="type.9340749"/>
                                </overload>
                                <overload id="member_function_Begin_Attributes_9CBF93B2C57B61C120E6E24178E227328AF17E50">
                                    <name>Begin() const</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> Begin() const;</syntax>
                                    <returnType ref="type.9340742"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_CBegin_Attributes_7946E7AA681A002E6AF02D5B650DBD8E454AB29A">
                            <name>CBegin() const</name>
                            <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> CBegin() const;</syntax>
                            <returnType ref="type.9340742"/>
                        </function>
                        <function id="member_function_CEnd_Attributes_648180E438D133BE44CA40B30849FD9141D1025A">
                            <name>CEnd() const</name>
                            <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> CEnd() const;</syntax>
                            <returnType ref="type.9340742"/>
                        </function>
                        <function id="member_function_Clear_Attributes_7ED47594415AB1D01A5DBCB7A1EDA41506FA1D35">
                            <name>Clear()</name>
                            <syntax>public void Clear();</syntax>
                        </function>
                        <function id="member_function_Count_Attributes_E7B100936A03E120FDBAB70199CA8461DD505BBF">
                            <name>Count() const</name>
                            <syntax>public nothrow inline long Count() const;</syntax>
                            <returnType ref="type.9329184"/>
                        </function>
                        <function id="function_group_End_9D1EAC94D978500B592402C930F99A362D6FFC82">
                            <name>End</name>
                            <overloads>
                                <overload id="member_function_End_Attributes_41BA323D2A593CC9352AD6A14BAC4EBC3DC56AEF">
                                    <name>End()</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> End();</syntax>
                                    <returnType ref="type.9340749"/>
                                </overload>
                                <overload id="member_function_End_Attributes_46818949DF6DAE4F91795CF04515C87E88F03DC6">
                                    <name>End() const</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> End() const;</syntax>
                                    <returnType ref="type.9340742"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_GetAttributeValue_62950307D780AA579B0C38E5DA5D62C6791B28D6">
                            <name>GetAttributeValue</name>
                            <overloads>
                                <overload id="member_function_GetAttributeValue_Attributes_886569FD6DA4BE2891400E8EF9BA55ABA1FDB16A">
                                    <name>GetAttributeValue(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName) const</name>
                                    <syntax>public const String&lt;uchar>* GetAttributeValue(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>namespaceUri</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                        <parameter>
                                            <name>localName</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9330410"/>
                                </overload>
                                <overload id="member_function_GetAttributeValue_Attributes_28371BD0813B3405B8EADA92DE1A93558ECCC562">
                                    <name>GetAttributeValue(const String&lt;uchar>&amp; qualifiedName) const</name>
                                    <syntax>public const String&lt;uchar>* GetAttributeValue(const String&lt;uchar>&amp; qualifiedName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>qualifiedName</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9330410"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_IsEmpty_Attributes_BF31A606D8C56A503522EA6421C3BABC9188FDAD">
                            <name>IsEmpty() const</name>
                            <syntax>public nothrow inline bool IsEmpty() const;</syntax>
                            <returnType ref="type.9329177"/>
                        </function>
                        <function id="member_function_op_index_Attributes_2A5F48EA47F062D2FAE0A0D890D5689FB275F75C">
                            <name>operator[](long index) const</name>
                            <syntax>public nothrow const Attribute&amp; operator[](long index) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>index</name>
                                    <type ref="type.9329184"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9339857"/>
                        </function>
                    </functions>
                    <typedefs>
                        <typedef id="typedef_ConstIterator_50480D5EC488FF9C4EE4C168500045C6E79E8AEA">
                            <name>ConstIterator</name>
                            <syntax>public typedef RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> ConstIterator;</syntax>
                            <type ref="type.9340742"/>
                        </typedef>
                        <typedef id="typedef_Iterator_2FAF61197BC8F7C1F7DD1B984B01D1A35D1560D7">
                            <name>Iterator</name>
                            <syntax>public typedef RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> Iterator;</syntax>
                            <type ref="type.9340749"/>
                        </typedef>
                    </typedefs>
                </class>
                <class id="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF">
                    <name>Entity</name>
                    <groupName>Entity</groupName>
                    <syntax> public class Entity;</syntax>
                </class>
                <class id="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD">
                    <name>InternalEntity</name>
                    <groupName>InternalEntity</groupName>
                    <syntax> public class InternalEntity;</syntax>
                    <baseClass ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                    <constructors>
                        <constructor id="constructor_InternalEntity_FB4BCBFA064F55118FDC16E64EE555A84C7F5D21">
                            <name>InternalEntity(const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow InternalEntity(const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Value_InternalEntity_18B6A5ADC7446325164AA90A56FBF4ED8E292261">
                            <name>Value() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Value() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715">
                    <name>XmlContentHandler</name>
                    <groupName>XmlContentHandler</groupName>
                    <syntax> public class XmlContentHandler;</syntax>
                    <functions>
                        <function id="member_function_CDataSection_XmlContentHandler_D018B18320ADEFE2AC1162C77EBA4398DD8872A1">
                            <name>CDataSection(const String&lt;uchar>&amp; cdata)</name>
                            <syntax>public virtual void CDataSection(const String&lt;uchar>&amp; cdata);</syntax>
                            <parameters>
                                <parameter>
                                    <name>cdata</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Comment_XmlContentHandler_014A7E971B49FF0D6E7BE0EDEA9F8B6FAD3DBA8F">
                            <name>Comment(const String&lt;uchar>&amp; comment)</name>
                            <syntax>public virtual void Comment(const String&lt;uchar>&amp; comment);</syntax>
                            <parameters>
                                <parameter>
                                    <name>comment</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Encoding_XmlContentHandler_266660E9185F44B4970CEB3CA3BA30DBFCFF5D5C">
                            <name>Encoding(const String&lt;uchar>&amp; encoding)</name>
                            <syntax>public virtual void Encoding(const String&lt;uchar>&amp; encoding);</syntax>
                            <parameters>
                                <parameter>
                                    <name>encoding</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndDocument_XmlContentHandler_A96D1644E91C6C7756E2E7A9A895D277A32821D1">
                            <name>EndDocument()</name>
                            <syntax>public virtual void EndDocument();</syntax>
                        </function>
                        <function id="member_function_EndElement_XmlContentHandler_DB31A1841E92806E37311297520AFE995E684AAA">
                            <name>EndElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName)</name>
                            <syntax>public virtual void EndElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>localName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_PI_XmlContentHandler_FB6237A18BED749622AFF6DFFCBC4BC465648455">
                            <name>PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data)</name>
                            <syntax>public virtual void PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data);</syntax>
                            <parameters>
                                <parameter>
                                    <name>target</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>data</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SkippedEntity_XmlContentHandler_1916387999FBA54A53DA8F7937AFF73F68D85ACF">
                            <name>SkippedEntity(const String&lt;uchar>&amp; entityName)</name>
                            <syntax>public virtual void SkippedEntity(const String&lt;uchar>&amp; entityName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>entityName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Standalone_XmlContentHandler_6D4842B294165585F04E66CB472297204EB6BB78">
                            <name>Standalone(bool standalone)</name>
                            <syntax>public virtual void Standalone(bool standalone);</syntax>
                            <parameters>
                                <parameter>
                                    <name>standalone</name>
                                    <type ref="type.9329177"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_StartDocument_XmlContentHandler_5F5B9BE7E73C83F4FAA638790CB6E43570819AAC">
                            <name>StartDocument()</name>
                            <syntax>public virtual void StartDocument();</syntax>
                        </function>
                        <function id="member_function_StartElement_XmlContentHandler_24BBE7CA7EEDCCC18A07D8B57DCAF1F6C8AB0E40">
                            <name>StartElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName, const Attributes&amp; attributes)</name>
                            <syntax>public virtual void StartElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName, const Attributes&amp; attributes);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>localName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>attributes</name>
                                    <type ref="type.9339861"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Text_XmlContentHandler_839EDB413B6A036C9BD28CC96F077BFD09115252">
                            <name>Text(const String&lt;uchar>&amp; text)</name>
                            <syntax>public virtual void Text(const String&lt;uchar>&amp; text);</syntax>
                            <parameters>
                                <parameter>
                                    <name>text</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Version_XmlContentHandler_832F4430AA33DEAD28DE25FD0875A11DFD797834">
                            <name>Version(const String&lt;uchar>&amp; version)</name>
                            <syntax>public virtual void Version(const String&lt;uchar>&amp; version);</syntax>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94">
                    <name>XmlGrammar</name>
                    <groupName>XmlGrammar</groupName>
                    <syntax> public class XmlGrammar;</syntax>
                    <baseClass ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                    <constructors>
                        <constructor id="default_constructor_XmlGrammar_FEFE6DB27A066908881918FEC4211F42795CF231">
                            <name>XmlGrammar()</name>
                            <syntax>public XmlGrammar();</syntax>
                        </constructor>
                        <constructor id="constructor_XmlGrammar_DF8E2E1AEF0716E2DEC12AC6CB7CC9E04B6788EC">
                            <name>XmlGrammar(ParsingDomain* parsingDomain)</name>
                            <syntax>public XmlGrammar(ParsingDomain* parsingDomain);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingDomain</name>
                                    <type ref="type.9337419"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_CreateRules_XmlGrammar_4FECDDDBB435013E7E00B8C9FA523C4DBB2EC40C">
                            <name>CreateRules()</name>
                            <syntax>public override void CreateRules();</syntax>
                        </function>
                        <function id="member_function_GetReferencedGrammars_XmlGrammar_0EBFCF5CA54A504BE427075F58A48D26575D80B3">
                            <name>GetReferencedGrammars()</name>
                            <syntax>public override void GetReferencedGrammars();</syntax>
                        </function>
                        <function id="member_function_Parse_XmlGrammar_4C1C12CA48F9C75D5C640AB5CE7642DE9E1F2D17">
                            <name>Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, XmlProcessor* processor)</name>
                            <syntax>public void Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, XmlProcessor* processor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>start</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>end</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>fileIndex</name>
                                    <type ref="type.9329182"/>
                                </parameter>
                                <parameter>
                                    <name>fileName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>processor</name>
                                    <type ref="type.9340174"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83">
                    <name>XmlParser</name>
                    <groupName>XmlParser</groupName>
                    <syntax> public class XmlParser;</syntax>
                    <functions>
                        <function id="member_function_Parse_XmlParser_210093CFB2FE60223FBC497BD623FAB6EF894B19">
                            <name>Parse(const uchar* contentStart, const uchar* contentEnd, const String&lt;char>&amp; systemId, XmlProcessor* processor)</name>
                            <syntax>public void Parse(const uchar* contentStart, const uchar* contentEnd, const String&lt;char>&amp; systemId, XmlProcessor* processor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>contentStart</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>contentEnd</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>processor</name>
                                    <type ref="type.9340174"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_XmlParser_EBE8AA52E4F55503BE22716978C368C130634AD1">
                            <name>Instance()</name>
                            <syntax>public static XmlParser&amp; Instance();</syntax>
                            <returnType ref="type.9340160"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5">
                    <name>XmlProcessingException</name>
                    <groupName>XmlProcessingException</groupName>
                    <syntax> public class XmlProcessingException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_XmlProcessingException_56FBF06B79156A07F9AE215EFAE8DBD71BD4F72F">
                            <name>XmlProcessingException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow XmlProcessingException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319">
                    <name>XmlProcessor</name>
                    <groupName>XmlProcessor</groupName>
                    <syntax> public class XmlProcessor;</syntax>
                    <constructors>
                        <constructor id="constructor_XmlProcessor_C02EE75CFE5D00DD758011532F69F2CE3E1B1318">
                            <name>XmlProcessor(const uchar* contentStart_, const uchar* contentEnd_, XmlContentHandler* contentHandler_)</name>
                            <syntax>public XmlProcessor(const uchar* contentStart_, const uchar* contentEnd_, XmlContentHandler* contentHandler_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>contentStart_</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>contentEnd_</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler_</name>
                                    <type ref="type.9339865"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AddAttribute_XmlProcessor_B85BF222226807756B469DF30B7CAA9A6C6A945E">
                            <name>AddAttribute(const String&lt;uchar>&amp; attName, const String&lt;uchar>&amp; attValue, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void AddAttribute(const String&lt;uchar>&amp; attName, const String&lt;uchar>&amp; attValue, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>attValue</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.9337642"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_BeginAttributeValue_XmlProcessor_6C33FE61C54678133957A757C3EE6CC1C706E09D">
                            <name>BeginAttributeValue(const String&lt;uchar>* attValue_)</name>
                            <syntax>public void BeginAttributeValue(const String&lt;uchar>* attValue_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attValue_</name>
                                    <type ref="type.9330410"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_BeginStartTag_XmlProcessor_B305A423BA47D206C6FCB0CBCAC0860BA005CDC6">
                            <name>BeginStartTag(const String&lt;uchar>&amp; tagName)</name>
                            <syntax>public void BeginStartTag(const String&lt;uchar>&amp; tagName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>tagName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_CDataSection_XmlProcessor_8A12DA61F5A4B1B8D7E56A9F143C46EF5CED7570">
                            <name>CDataSection(const String&lt;uchar>&amp; cdata)</name>
                            <syntax>public void CDataSection(const String&lt;uchar>&amp; cdata);</syntax>
                            <parameters>
                                <parameter>
                                    <name>cdata</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Comment_XmlProcessor_B0536F49A87DC644629C90D4441890B5A6752FDC">
                            <name>Comment(const String&lt;uchar>&amp; comment)</name>
                            <syntax>public void Comment(const String&lt;uchar>&amp; comment);</syntax>
                            <parameters>
                                <parameter>
                                    <name>comment</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Encoding_XmlProcessor_3A087FAAC77AE462D0669BF856D3564F3008DF49">
                            <name>Encoding(const String&lt;uchar>&amp; encoding)</name>
                            <syntax>public void Encoding(const String&lt;uchar>&amp; encoding);</syntax>
                            <parameters>
                                <parameter>
                                    <name>encoding</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndAttributeValue_XmlProcessor_A806EC0063DCF6E55506E06CC53E1B40717E26BE">
                            <name>EndAttributeValue()</name>
                            <syntax>public void EndAttributeValue();</syntax>
                        </function>
                        <function id="member_function_EndDocument_XmlProcessor_C05AD6A737A64C6A72BCCD95B47FAE58DD7A2C75">
                            <name>EndDocument()</name>
                            <syntax>public void EndDocument();</syntax>
                        </function>
                        <function id="member_function_EndStartTag_XmlProcessor_F5EE361D6C999C30B54E771618CB194040F07242">
                            <name>EndStartTag(const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EndStartTag(const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.9337642"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndTag_XmlProcessor_C3D89FE1C64EE102929C172682041C659376BAAA">
                            <name>EndTag(const String&lt;uchar>&amp; tagName, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EndTag(const String&lt;uchar>&amp; tagName, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>tagName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.9337642"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EntityRef_XmlProcessor_7D3D5323F4C53D3EFD9892E05C2375342498B610">
                            <name>EntityRef(const String&lt;uchar>&amp; entityName, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EntityRef(const String&lt;uchar>&amp; entityName, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>entityName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.9337642"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_PI_XmlProcessor_5BE43DD96122369309DD30EEDA28BC4C36145051">
                            <name>PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data)</name>
                            <syntax>public void PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data);</syntax>
                            <parameters>
                                <parameter>
                                    <name>target</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>data</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Standalone_XmlProcessor_7A57ADC89AF9E2083890E4F8BFD90DA7395E2840">
                            <name>Standalone(bool standalone)</name>
                            <syntax>public void Standalone(bool standalone);</syntax>
                            <parameters>
                                <parameter>
                                    <name>standalone</name>
                                    <type ref="type.9329177"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_StartDocument_XmlProcessor_4D2FFEA3E614DD5374BEB96022D27434A713E891">
                            <name>StartDocument()</name>
                            <syntax>public void StartDocument();</syntax>
                        </function>
                        <function id="member_function_Text_XmlProcessor_EBE8A0CC4BDF6B07F929951ECBC9A8D5FF15B4C0">
                            <name>Text(const String&lt;uchar>&amp; text)</name>
                            <syntax>public void Text(const String&lt;uchar>&amp; text);</syntax>
                            <parameters>
                                <parameter>
                                    <name>text</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Version_XmlProcessor_3D2C6CD0C7133E029041383226E9041AE1BFF9B3">
                            <name>Version(const String&lt;uchar>&amp; version)</name>
                            <syntax>public void Version(const String&lt;uchar>&amp; version);</syntax>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_group_ParseXmlContent_A5F5274E3892415DFA80BEA4DB3D023DA61F8F4E">
                    <name>ParseXmlContent</name>
                    <overloads>
                        <overload id="function_ParseXmlContent_FB317CA5307F6138BFBA2CA2A43B5744FE92B917">
                            <name>ParseXmlContent(const String&lt;char>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;char>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.9339865"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_ParseXmlContent_61335068D4F75C1370C9C52E1DDE3F3C6797D054">
                            <name>ParseXmlContent(const String&lt;uchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;uchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.9339865"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_ParseXmlContent_02CBE0E791587725441F53556A92648D169B81B9">
                            <name>ParseXmlContent(const String&lt;wchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;wchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.9339865"/>
                                </parameter>
                            </parameters>
                        </overload>
                    </overloads>
                </function>
                <function id="function_ParseXmlFile_7ED565F7B87DFEA8BE61A14E6C0BDB5D473022BC">
                    <name>ParseXmlFile(const String&lt;char>&amp; xmlFileName, XmlContentHandler* contentHandler)</name>
                    <syntax>public void ParseXmlFile(const String&lt;char>&amp; xmlFileName, XmlContentHandler* contentHandler);</syntax>
                    <parameters>
                        <parameter>
                            <name>xmlFileName</name>
                            <type ref="type.9330323"/>
                        </parameter>
                        <parameter>
                            <name>contentHandler</name>
                            <type ref="type.9339865"/>
                        </parameter>
                    </parameters>
                </function>
            </functions>
        </namespace>
    </namespaces>
    <types>
        <type derived="true" id="type.3632">
            <name>AddressOf&amp;&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3704">
            <name>AssertStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA">
            <name>AttDefRule</name>
        </type>
        <type derived="true" id="type.9340046">
            <name>AttDefRule&amp;</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340045">
            <name>AttDefRule*</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341102">
            <name>AttDefRule*&amp;</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341101">
            <name>AttDefRule**</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1">
            <name>AttValueRule</name>
        </type>
        <type derived="true" id="type.9339890">
            <name>AttValueRule&amp;</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339889">
            <name>AttValueRule*</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340972">
            <name>AttValueRule*&amp;</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340971">
            <name>AttValueRule**</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633">
            <name>AttlistDeclRule</name>
        </type>
        <type derived="true" id="type.9340040">
            <name>AttlistDeclRule&amp;</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340039">
            <name>AttlistDeclRule*</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341097">
            <name>AttlistDeclRule*&amp;</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341096">
            <name>AttlistDeclRule**</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6">
            <name>Attribute</name>
        </type>
        <type derived="true" id="type.9339854">
            <name>Attribute&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340757">
            <name>Attribute&amp;&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339853">
            <name>Attribute*</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340923">
            <name>Attribute*&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340922">
            <name>Attribute**</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4">
            <name>AttributeRule</name>
        </type>
        <type derived="true" id="type.9340016">
            <name>AttributeRule&amp;</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340015">
            <name>AttributeRule*</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341077">
            <name>AttributeRule*&amp;</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341076">
            <name>AttributeRule**</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A">
            <name>Attributes</name>
        </type>
        <type derived="true" id="type.9339863">
            <name>Attributes&amp;</name>
            <content>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339862">
            <name>Attributes*</name>
            <content>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9331085" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.3233">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9331085"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340807" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.9340781"/>
            </content>
        </type>
        <type derived="true" id="type.9340809">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>&amp;</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340808">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340840">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340850">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340841">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341224">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**&amp;</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341225">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341223">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>***</name>
            <content>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="9329814"/>
            </content>
        </type>
        <type derived="true" id="type.3241">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="9329835"/>
            </content>
        </type>
        <type derived="true" id="type.3254">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545">
            <name>CDSectRule</name>
        </type>
        <type derived="true" id="type.9339932">
            <name>CDSectRule&amp;</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339931">
            <name>CDSectRule*</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341007">
            <name>CDSectRule*&amp;</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341006">
            <name>CDSectRule**</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7">
            <name>CDataRule</name>
        </type>
        <type derived="true" id="type.9339938">
            <name>CDataRule&amp;</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339937">
            <name>CDataRule*</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341012">
            <name>CDataRule*&amp;</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341011">
            <name>CDataRule**</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30">
            <name>CharDataRule</name>
        </type>
        <type derived="true" id="type.9339908">
            <name>CharDataRule&amp;</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339907">
            <name>CharDataRule*</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340987">
            <name>CharDataRule*&amp;</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340986">
            <name>CharDataRule**</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3728">
            <name>CharParser&amp;&amp;</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F">
            <name>CharRefRule</name>
        </type>
        <type derived="true" id="type.9340070">
            <name>CharRefRule&amp;</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340069">
            <name>CharRefRule*</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341122">
            <name>CharRefRule*&amp;</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341121">
            <name>CharRefRule**</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3711">
            <name>CodeExpandingVisitor&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3610">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0">
            <name>CommentRule</name>
        </type>
        <type derived="true" id="type.9339914">
            <name>CommentRule&amp;</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339913">
            <name>CommentRule*</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340992">
            <name>CommentRule*&amp;</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340991">
            <name>CommentRule**</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3647">
            <name>Complement&amp;&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339812">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3138">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339811">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3137">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339811">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F">
            <name>ConditionalSectRule</name>
        </type>
        <type derived="true" id="type.9340058">
            <name>ConditionalSectRule&amp;</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340057">
            <name>ConditionalSectRule*</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341112">
            <name>ConditionalSectRule*&amp;</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341111">
            <name>ConditionalSectRule**</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3705">
            <name>Const&amp;&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3665">
            <name>Construct&amp;&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF">
            <name>ContentRule</name>
        </type>
        <type derived="true" id="type.9340028">
            <name>ContentRule&amp;</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340027">
            <name>ContentRule*</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341087">
            <name>ContentRule*&amp;</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341086">
            <name>ContentRule**</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539">
            <name>Context</name>
        </type>
        <type id="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0">
            <name>Context</name>
        </type>
        <type id="class_Context_12735A043A5F853D886712F850F8D76536927E81">
            <name>Context</name>
        </type>
        <type id="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F">
            <name>Context</name>
        </type>
        <type id="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF">
            <name>Context</name>
        </type>
        <type id="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87">
            <name>Context</name>
        </type>
        <type id="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451">
            <name>Context</name>
        </type>
        <type id="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30">
            <name>Context</name>
        </type>
        <type id="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132">
            <name>Context</name>
        </type>
        <type id="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039">
            <name>Context</name>
        </type>
        <type id="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80">
            <name>Context</name>
        </type>
        <type id="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA">
            <name>Context</name>
        </type>
        <type id="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680">
            <name>Context</name>
        </type>
        <type id="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E">
            <name>Context</name>
        </type>
        <type id="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2">
            <name>Context</name>
        </type>
        <type id="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24">
            <name>Context</name>
        </type>
        <type id="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6">
            <name>Context</name>
        </type>
        <type id="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB">
            <name>Context</name>
        </type>
        <type id="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327">
            <name>Context</name>
        </type>
        <type id="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0">
            <name>Context</name>
        </type>
        <type id="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9">
            <name>Context</name>
        </type>
        <type id="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A">
            <name>Context</name>
        </type>
        <type id="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F">
            <name>Context</name>
        </type>
        <type id="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769">
            <name>Context</name>
        </type>
        <type id="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C">
            <name>Context</name>
        </type>
        <type id="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0">
            <name>Context</name>
        </type>
        <type id="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50">
            <name>Context</name>
        </type>
        <type id="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21">
            <name>Context</name>
        </type>
        <type id="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C">
            <name>Context</name>
        </type>
        <type id="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743">
            <name>Context</name>
        </type>
        <type id="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D">
            <name>Context</name>
        </type>
        <type id="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9">
            <name>Context</name>
        </type>
        <type id="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553">
            <name>Context</name>
        </type>
        <type id="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9">
            <name>Context</name>
        </type>
        <type id="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A">
            <name>Context</name>
        </type>
        <type id="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C">
            <name>Context</name>
        </type>
        <type id="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20">
            <name>Context</name>
        </type>
        <type id="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74">
            <name>Context</name>
        </type>
        <type id="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A">
            <name>Context</name>
        </type>
        <type id="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0">
            <name>Context</name>
        </type>
        <type id="class_Context_62FD01506832B2455CA068BF7108FE638E455449">
            <name>Context</name>
        </type>
        <type id="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D">
            <name>Context</name>
        </type>
        <type id="class_Context_6848C0399039250818165D3DA29F62669489F8DF">
            <name>Context</name>
        </type>
        <type id="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6">
            <name>Context</name>
        </type>
        <type id="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410">
            <name>Context</name>
        </type>
        <type id="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3">
            <name>Context</name>
        </type>
        <type id="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49">
            <name>Context</name>
        </type>
        <type id="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970">
            <name>Context</name>
        </type>
        <type derived="true" id="type.9339887">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339953">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339947">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340145">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339941">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340151">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339875">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340157">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339935">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339929">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339881">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340079">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339923">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340085">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339917">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340091">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339989">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340097">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339911">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340103">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339983">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340109">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339977">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339995">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340001">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340007">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340013">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340115">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339905">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340019">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340025">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339899">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340121">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340031">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340037">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339893">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340127">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340043">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339971">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340133">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340049">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340055">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339965">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340157">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340061">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340067">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340139">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339959">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340073">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340156">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339880">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339946">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340150">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339940">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339886">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340144">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339952">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339958">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340138">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340000">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339964">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340006">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340132">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340012">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339970">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340126">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339892">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340018">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340120">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340024">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339976">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339898">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339904">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340030">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340114">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340036">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339982">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340108">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339910">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340042">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339928">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340102">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339916">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340048">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340096">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340054">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339988">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340090">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340156">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340060">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339922">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340066">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340084">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339994">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339934">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340072">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339874">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340078">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341164">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341169">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341189">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341174">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341179">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341184">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341189">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341044">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341049">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341034">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341054">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341029">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341024">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341019">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341014">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341059">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341009">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341004">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340999">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340994">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341064">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341069">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340989">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340984">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341074">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340979">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340974">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341079">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340969">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341084">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341089">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340964">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341094">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340959">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340954">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341099">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341104">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341109">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341114">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341119">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341124">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341129">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341134">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341139">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341144">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341149">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341154">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341039">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341159">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341073">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341138">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341188">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341143">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340978">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340983">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340973">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341078">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341148">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340968">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341083">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340988">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341068">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341088">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340993">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340998">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341153">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341033">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341038">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341058">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341063">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341113">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341043">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341003">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341183">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341158">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341163">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341008">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341103">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341098">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341093">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341133">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341173">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340953">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341013">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341018">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340963">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341178">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341128">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341123">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341118">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341168">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341028">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341188">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341053">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341023">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340958">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341048">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341108">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330292" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="9329966"/>
            </content>
        </type>
        <type derived="true" id="type.3367">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3360">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3345">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3326">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3329">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3338">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="9329965"/>
            </content>
        </type>
        <type id="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972">
            <name>DeclSepRule</name>
        </type>
        <type derived="true" id="type.9339974">
            <name>DeclSepRule&amp;</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339973">
            <name>DeclSepRule*</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341042">
            <name>DeclSepRule*&amp;</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341041">
            <name>DeclSepRule**</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85">
            <name>DefaultDeclRule</name>
        </type>
        <type derived="true" id="type.9340052">
            <name>DefaultDeclRule&amp;</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340051">
            <name>DefaultDeclRule*</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341107">
            <name>DefaultDeclRule*&amp;</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341106">
            <name>DefaultDeclRule**</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3683">
            <name>DeleteStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3629">
            <name>Deref&amp;&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3686">
            <name>DestroyStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9">
            <name>DocTypeDeclRule</name>
        </type>
        <type derived="true" id="type.9339968">
            <name>DocTypeDeclRule&amp;</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339967">
            <name>DocTypeDeclRule*</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341037">
            <name>DocTypeDeclRule*&amp;</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341036">
            <name>DocTypeDeclRule**</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D">
            <name>DocumentRule</name>
        </type>
        <type derived="true" id="type.9339872">
            <name>DocumentRule&amp;</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339871">
            <name>DocumentRule*</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340957">
            <name>DocumentRule*&amp;</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340956">
            <name>DocumentRule**</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339810">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3136">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339810">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3623">
            <name>DomObject&amp;&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3135">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339809">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917">
            <name>ETagRule</name>
        </type>
        <type derived="true" id="type.9340022">
            <name>ETagRule&amp;</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340021">
            <name>ETagRule*</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341082">
            <name>ETagRule*&amp;</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341081">
            <name>ETagRule**</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346">
            <name>ElementDeclRule</name>
        </type>
        <type derived="true" id="type.9340034">
            <name>ElementDeclRule&amp;</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340033">
            <name>ElementDeclRule*</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341092">
            <name>ElementDeclRule*&amp;</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341091">
            <name>ElementDeclRule**</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE">
            <name>ElementRule</name>
        </type>
        <type derived="true" id="type.9340010">
            <name>ElementRule&amp;</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340009">
            <name>ElementRule*</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341072">
            <name>ElementRule*&amp;</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341071">
            <name>ElementRule**</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB">
            <name>EncNameRule</name>
        </type>
        <type derived="true" id="type.9340148">
            <name>EncNameRule&amp;</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340147">
            <name>EncNameRule*</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341187">
            <name>EncNameRule*&amp;</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341186">
            <name>EncNameRule**</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567">
            <name>EncodingDeclRule</name>
        </type>
        <type derived="true" id="type.9340142">
            <name>EncodingDeclRule&amp;</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340141">
            <name>EncodingDeclRule*</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341182">
            <name>EncodingDeclRule*&amp;</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341181">
            <name>EncodingDeclRule**</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF">
            <name>Entity</name>
        </type>
        <type derived="true" id="type.9340166">
            <name>Entity&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340165">
            <name>Entity*</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340851">
            <name>Entity*&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341212">
            <name>Entity*&amp;&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341211">
            <name>Entity**</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88">
            <name>EntityDeclRule</name>
        </type>
        <type derived="true" id="type.9340094">
            <name>EntityDeclRule&amp;</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340093">
            <name>EntityDeclRule*</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341142">
            <name>EntityDeclRule*&amp;</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341141">
            <name>EntityDeclRule**</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB">
            <name>EntityDefRule</name>
        </type>
        <type derived="true" id="type.9340112">
            <name>EntityDefRule&amp;</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340111">
            <name>EntityDefRule*</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341157">
            <name>EntityDefRule*&amp;</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341156">
            <name>EntityDefRule**</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F">
            <name>EntityRefRule</name>
        </type>
        <type derived="true" id="type.9340082">
            <name>EntityRefRule&amp;</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340081">
            <name>EntityRefRule*</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341132">
            <name>EntityRefRule*&amp;</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341131">
            <name>EntityRefRule**</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189">
            <name>EntityValueRule</name>
        </type>
        <type derived="true" id="type.9339884">
            <name>EntityValueRule&amp;</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339883">
            <name>EntityValueRule*</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340967">
            <name>EntityValueRule*&amp;</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340966">
            <name>EntityValueRule**</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338354" specialization="true">
            <name>EqualTo&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_EqualTo_T_483B326DC1355EE905B9A0F4E9331F702788D28E"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.3723">
            <name>ExpectationParser&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3689">
            <name>ExpressionStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561">
            <name>ExtParsedEntRule</name>
        </type>
        <type derived="true" id="type.9340136">
            <name>ExtParsedEntRule&amp;</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340135">
            <name>ExtParsedEntRule*</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341177">
            <name>ExtParsedEntRule*&amp;</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341176">
            <name>ExtParsedEntRule**</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5">
            <name>ExtSubsetDeclRule</name>
        </type>
        <type derived="true" id="type.9339998">
            <name>ExtSubsetDeclRule&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339997">
            <name>ExtSubsetDeclRule*</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341062">
            <name>ExtSubsetDeclRule*&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341061">
            <name>ExtSubsetDeclRule**</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8">
            <name>ExtSubsetRule</name>
        </type>
        <type derived="true" id="type.9339992">
            <name>ExtSubsetRule&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339991">
            <name>ExtSubsetRule*</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341057">
            <name>ExtSubsetRule*&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341056">
            <name>ExtSubsetRule**</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="9329723"/>
            </content>
        </type>
        <type derived="true" id="type.3191">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329719"/>
                <argumentType ref="9329720"/>
                <argumentType ref="9329721"/>
            </content>
        </type>
        <type derived="true" id="type.3188">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3187">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329723"/>
                <argumentType ref="type.9330590"/>
                <argumentType ref="type.9330592"/>
            </content>
        </type>
        <type derived="true" id="type.3190">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3195">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3193">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329724"/>
                <argumentType ref="type.9330607"/>
                <argumentType ref="type.9330608"/>
            </content>
        </type>
        <type derived="true" id="type.3192">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3194">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3189">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D">
            <name>GEDeclRule</name>
        </type>
        <type derived="true" id="type.9340100">
            <name>GEDeclRule&amp;</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340099">
            <name>GEDeclRule*</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341147">
            <name>GEDeclRule*&amp;</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341146">
            <name>GEDeclRule**</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3695">
            <name>GotoCaseStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3680">
            <name>GotoStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340775" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9340165"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type derived="true" id="type.9340777">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9340775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340776">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9340775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341244">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.9340775"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341243">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.9340775"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338348" specialization="true">
            <name>Hasher&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Hasher_T_9E06FCD9B56B8B3B7E7F8286BE8179D3B1CB8325"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9329805"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="9329807"/>
                <argumentType ref="9329808"/>
            </content>
        </type>
        <type derived="true" id="type.3229">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9329834"/>
                <argumentType ref="9329835"/>
                <argumentType ref="9329836"/>
                <argumentType ref="9329837"/>
                <argumentType ref="9329838"/>
            </content>
        </type>
        <type derived="true" id="type.3249">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340795" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9340781"/>
                <argumentType ref="type.9340785"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type derived="true" id="type.9340797">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340821">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340796">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341234">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341235">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341233">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.9340795"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338662" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9338653"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9329814"/>
                <argumentType ref="9329814"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="9329815"/>
                <argumentType ref="9329816"/>
            </content>
        </type>
        <type derived="true" id="type.3237">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340801" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9340781"/>
                <argumentType ref="type.9340783"/>
                <argumentType ref="type.9340782"/>
                <argumentType ref="type.9340795"/>
            </content>
        </type>
        <type derived="true" id="type.9340803">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9340801"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341236">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340801"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340802">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9340801"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340815" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9340781"/>
                <argumentType ref="type.9340792"/>
                <argumentType ref="type.9340813"/>
                <argumentType ref="type.9340795"/>
            </content>
        </type>
        <type derived="true" id="type.9340817">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9340815"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341249">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340815"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340816">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9340815"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.3505" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.9340542" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type derived="true" id="type.9340544">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9340542"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3507">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.3505"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340543">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9340542"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3506">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.3505"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340543">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9340542"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340548" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.3511" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.9340548" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type derived="true" id="type.3513">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.3511"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340550">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9340548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3512">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.3511"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340549">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9340548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3669">
            <name>Identifier&amp;&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374">
            <name>IncludeSectRule</name>
        </type>
        <type derived="true" id="type.9340064">
            <name>IncludeSectRule&amp;</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340063">
            <name>IncludeSectRule*</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341117">
            <name>IncludeSectRule*&amp;</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341116">
            <name>IncludeSectRule**</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C">
            <name>IntSubsetRule</name>
        </type>
        <type derived="true" id="type.9339980">
            <name>IntSubsetRule&amp;</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339979">
            <name>IntSubsetRule*</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341047">
            <name>IntSubsetRule*&amp;</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341046">
            <name>IntSubsetRule**</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD">
            <name>InternalEntity</name>
        </type>
        <type derived="true" id="type.9340169">
            <name>InternalEntity&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3737">
            <name>InternalEntity&amp;&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340168">
            <name>InternalEntity*</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341252">
            <name>InternalEntity*&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341251">
            <name>InternalEntity**</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3650">
            <name>Invoke&amp;&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3720">
            <name>KleeneStarParser&amp;&amp;</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="9329844"/>
            </content>
        </type>
        <type derived="true" id="type.3258">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3257">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331104" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331086"/>
            </content>
        </type>
        <type derived="true" id="type.3232">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331104"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340825" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9340808"/>
            </content>
        </type>
        <type derived="true" id="type.9340827">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;</name>
            <content>
                <baseType ref="type.9340825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340849">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340825"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340826">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>*</name>
            <content>
                <baseType ref="type.9340825"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9331257" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331240"/>
            </content>
        </type>
        <type derived="true" id="type.3240">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331257"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331442" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331423"/>
            </content>
        </type>
        <type derived="true" id="type.3253">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331442"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332807" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.3385">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332807"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340865" specialization="true">
            <name>List&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9330407"/>
            </content>
        </type>
        <type id="type.3569" specialization="true">
            <name>List&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9330407"/>
            </content>
        </type>
        <type derived="true" id="type.9340867">
            <name>List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.9340865"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3571">
            <name>List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.3569"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3589">
            <name>List&lt;String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3569"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340885">
            <name>List&lt;String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340865"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340866">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.9340865"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3570">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.3569"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340866">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.9340865"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340736" specialization="true">
            <name>List&lt;System.Xml.Attribute></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
            </content>
        </type>
        <type derived="true" id="type.9340738">
            <name>List&lt;System.Xml.Attribute>&amp;</name>
            <content>
                <baseType ref="type.9340736"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340756">
            <name>List&lt;System.Xml.Attribute>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340736"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340737">
            <name>List&lt;System.Xml.Attribute>*</name>
            <content>
                <baseType ref="type.9340736"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="9329855"/>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="9329985"/>
            </content>
        </type>
        <type derived="true" id="type.3297">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3261">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3379">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340896" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9340886"/>
            </content>
        </type>
        <type derived="true" id="type.9340898">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;</name>
            <content>
                <baseType ref="type.9340896"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340916">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340896"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340897">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>*</name>
            <content>
                <baseType ref="type.9340896"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3673">
            <name>Literal&amp;&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="9329880"/>
            </content>
        </type>
        <type derived="true" id="type.3285">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335149" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.3472">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335149"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3706">
            <name>LvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B">
            <name>MarkupDeclRule</name>
        </type>
        <type derived="true" id="type.9339986">
            <name>MarkupDeclRule&amp;</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339985">
            <name>MarkupDeclRule*</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341052">
            <name>MarkupDeclRule*&amp;</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341051">
            <name>MarkupDeclRule**</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA">
            <name>MiscRule</name>
        </type>
        <type derived="true" id="type.9339962">
            <name>MiscRule&amp;</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339961">
            <name>MiscRule*</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341032">
            <name>MiscRule*&amp;</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341031">
            <name>MiscRule**</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3282">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="9329880"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F">
            <name>NDataDeclRule</name>
        </type>
        <type derived="true" id="type.9340124">
            <name>NDataDeclRule&amp;</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340123">
            <name>NDataDeclRule*</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341167">
            <name>NDataDeclRule*&amp;</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341166">
            <name>NDataDeclRule**</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116">
            <name>NameRule</name>
        </type>
        <type derived="true" id="type.9339878">
            <name>NameRule&amp;</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339877">
            <name>NameRule*</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340962">
            <name>NameRule*&amp;</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340961">
            <name>NameRule**</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3668">
            <name>New&amp;&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3626">
            <name>Not&amp;&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627">
            <name>NotationDeclRule</name>
        </type>
        <type derived="true" id="type.9340154">
            <name>NotationDeclRule&amp;</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340153">
            <name>NotationDeclRule*</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341192">
            <name>NotationDeclRule*&amp;</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341191">
            <name>NotationDeclRule**</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3714">
            <name>OptionalParser&amp;&amp;</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8">
            <name>PEDeclRule</name>
        </type>
        <type derived="true" id="type.9340106">
            <name>PEDeclRule&amp;</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340105">
            <name>PEDeclRule*</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341152">
            <name>PEDeclRule*&amp;</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341151">
            <name>PEDeclRule**</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3">
            <name>PEDefRule</name>
        </type>
        <type derived="true" id="type.9340118">
            <name>PEDefRule&amp;</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340117">
            <name>PEDefRule*</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341162">
            <name>PEDefRule*&amp;</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341161">
            <name>PEDefRule**</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B">
            <name>PEReferenceRule</name>
        </type>
        <type derived="true" id="type.9340088">
            <name>PEReferenceRule&amp;</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340087">
            <name>PEReferenceRule*</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341137">
            <name>PEReferenceRule*&amp;</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341136">
            <name>PEReferenceRule**</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C">
            <name>PIRule</name>
        </type>
        <type derived="true" id="type.9339920">
            <name>PIRule&amp;</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339919">
            <name>PIRule*</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340997">
            <name>PIRule*&amp;</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340996">
            <name>PIRule**</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF">
            <name>PITargetRule</name>
        </type>
        <type derived="true" id="type.9339926">
            <name>PITargetRule&amp;</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339925">
            <name>PITargetRule*</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341002">
            <name>PITargetRule*&amp;</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341001">
            <name>PITargetRule**</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340822" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9340801"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9340824">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9340822"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341239">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340822"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340823">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9340822"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340554" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9340542"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.3517" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.3505"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9340554" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9340542"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9340556">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9340554"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3519">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.3517"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340555">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9340554"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3518">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.3517"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340555">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9340554"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340781" specialization="true">
            <name>Pair&lt;String&lt;uchar>, Entity*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9340165"/>
            </content>
        </type>
        <type derived="true" id="type.9340783">
            <name>Pair&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <baseType ref="type.9340781"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341210">
            <name>Pair&lt;String&lt;uchar>, Entity*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340781"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340782">
            <name>Pair&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <baseType ref="type.9340781"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="9329894"/>
                <argumentType ref="9329895"/>
            </content>
        </type>
        <type derived="true" id="type.3140">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339814">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3139">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339813">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3727">
            <name>ParsingData&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3142">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339816">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339815">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3141">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339815">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9337419">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3708">
            <name>Pointer&amp;&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3717">
            <name>PositiveParser&amp;&amp;</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3656">
            <name>PostfixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3653">
            <name>PostfixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3638">
            <name>PrefixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3635">
            <name>PrefixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB">
            <name>PrologRule</name>
        </type>
        <type derived="true" id="type.9339944">
            <name>PrologRule&amp;</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339943">
            <name>PrologRule*</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341017">
            <name>PrologRule*&amp;</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341016">
            <name>PrologRule**</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336">
            <name>PubidLiteralRule</name>
        </type>
        <type derived="true" id="type.9339902">
            <name>PubidLiteralRule&amp;</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339901">
            <name>PubidLiteralRule*</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340982">
            <name>PubidLiteralRule*&amp;</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340981">
            <name>PubidLiteralRule**</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9339081" specialization="true">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337276"/>
                <argumentType ref="type.9339079"/>
                <argumentType ref="type.9339080"/>
            </content>
        </type>
        <type derived="true" id="type.3537">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339081"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333990" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330100"/>
                <argumentType ref="type.9333833"/>
                <argumentType ref="type.9333989"/>
            </content>
        </type>
        <type derived="true" id="type.3429">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335030" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330171"/>
                <argumentType ref="type.9334873"/>
                <argumentType ref="type.9335029"/>
            </content>
        </type>
        <type derived="true" id="type.3454">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335030"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334614" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330145"/>
                <argumentType ref="type.9334457"/>
                <argumentType ref="type.9334613"/>
            </content>
        </type>
        <type derived="true" id="type.3444">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334614"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334822" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330158"/>
                <argumentType ref="type.9334665"/>
                <argumentType ref="type.9334821"/>
            </content>
        </type>
        <type derived="true" id="type.3449">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334822"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333353" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330070"/>
                <argumentType ref="type.9333182"/>
                <argumentType ref="type.9333352"/>
            </content>
        </type>
        <type derived="true" id="type.3414">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333571" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330080"/>
                <argumentType ref="type.9333414"/>
                <argumentType ref="type.9333570"/>
            </content>
        </type>
        <type derived="true" id="type.3419">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333571"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338623" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338590"/>
                <argumentType ref="type.9338621"/>
                <argumentType ref="type.9338622"/>
            </content>
        </type>
        <type derived="true" id="type.3504">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338623"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338614" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338590"/>
                <argumentType ref="type.9338612"/>
                <argumentType ref="type.9338613"/>
            </content>
        </type>
        <type derived="true" id="type.3503">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338614"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331199" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331165"/>
                <argumentType ref="type.9331197"/>
                <argumentType ref="type.9331198"/>
            </content>
        </type>
        <type id="type.9331121" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331086"/>
                <argumentType ref="type.9331119"/>
                <argumentType ref="type.9331120"/>
            </content>
        </type>
        <type id="type.9331199" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331165"/>
                <argumentType ref="type.9331197"/>
                <argumentType ref="type.9331198"/>
            </content>
        </type>
        <type derived="true" id="type.3236">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331199"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3231">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331121"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331190" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331165"/>
                <argumentType ref="type.9331188"/>
                <argumentType ref="type.9331189"/>
            </content>
        </type>
        <type id="type.9331112" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331086"/>
                <argumentType ref="type.9331110"/>
                <argumentType ref="type.9331111"/>
            </content>
        </type>
        <type derived="true" id="type.3230">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331112"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3235">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331190"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333967" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333933"/>
                <argumentType ref="type.9333965"/>
                <argumentType ref="type.9333966"/>
            </content>
        </type>
        <type derived="true" id="type.3428">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333967"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333958" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333933"/>
                <argumentType ref="type.9333956"/>
                <argumentType ref="type.9333957"/>
            </content>
        </type>
        <type derived="true" id="type.3427">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333958"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335007" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334973"/>
                <argumentType ref="type.9335005"/>
                <argumentType ref="type.9335006"/>
            </content>
        </type>
        <type derived="true" id="type.3453">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335007"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334998" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334973"/>
                <argumentType ref="type.9334996"/>
                <argumentType ref="type.9334997"/>
            </content>
        </type>
        <type derived="true" id="type.3452">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334998"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334591" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334557"/>
                <argumentType ref="type.9334589"/>
                <argumentType ref="type.9334590"/>
            </content>
        </type>
        <type derived="true" id="type.3443">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334591"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334582" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334557"/>
                <argumentType ref="type.9334580"/>
                <argumentType ref="type.9334581"/>
            </content>
        </type>
        <type derived="true" id="type.3442">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334799" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334765"/>
                <argumentType ref="type.9334797"/>
                <argumentType ref="type.9334798"/>
            </content>
        </type>
        <type derived="true" id="type.3448">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334799"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334790" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334765"/>
                <argumentType ref="type.9334788"/>
                <argumentType ref="type.9334789"/>
            </content>
        </type>
        <type derived="true" id="type.3447">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334790"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333337" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333303"/>
                <argumentType ref="type.9333335"/>
                <argumentType ref="type.9333336"/>
            </content>
        </type>
        <type derived="true" id="type.3413">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333337"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333328" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333303"/>
                <argumentType ref="type.9333326"/>
                <argumentType ref="type.9333327"/>
            </content>
        </type>
        <type derived="true" id="type.3412">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333328"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333548" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333514"/>
                <argumentType ref="type.9333546"/>
                <argumentType ref="type.9333547"/>
            </content>
        </type>
        <type derived="true" id="type.3418">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333548"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333539" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333514"/>
                <argumentType ref="type.9333537"/>
                <argumentType ref="type.9333538"/>
            </content>
        </type>
        <type derived="true" id="type.3417">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333539"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333759" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333725"/>
                <argumentType ref="type.9333757"/>
                <argumentType ref="type.9333758"/>
            </content>
        </type>
        <type derived="true" id="type.3423">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333759"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333750" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333725"/>
                <argumentType ref="type.9333748"/>
                <argumentType ref="type.9333749"/>
            </content>
        </type>
        <type derived="true" id="type.3422">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334383" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334349"/>
                <argumentType ref="type.9334381"/>
                <argumentType ref="type.9334382"/>
            </content>
        </type>
        <type derived="true" id="type.3438">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334383"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334374" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334349"/>
                <argumentType ref="type.9334372"/>
                <argumentType ref="type.9334373"/>
            </content>
        </type>
        <type derived="true" id="type.3437">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334374"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334175" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334141"/>
                <argumentType ref="type.9334173"/>
                <argumentType ref="type.9334174"/>
            </content>
        </type>
        <type derived="true" id="type.3433">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334175"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334166" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334141"/>
                <argumentType ref="type.9334164"/>
                <argumentType ref="type.9334165"/>
            </content>
        </type>
        <type derived="true" id="type.3432">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334166"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340842" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9340808"/>
                <argumentType ref="type.9340840"/>
                <argumentType ref="type.9340841"/>
            </content>
        </type>
        <type derived="true" id="type.9340844">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <baseType ref="type.9340842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3568">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340842"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340843">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <baseType ref="type.9340842"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340833" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9340808"/>
                <argumentType ref="type.9340831"/>
                <argumentType ref="type.9340832"/>
            </content>
        </type>
        <type derived="true" id="type.9340835">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <baseType ref="type.9340833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3567">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340833"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340834">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <baseType ref="type.9340833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338869" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338835"/>
                <argumentType ref="type.9338867"/>
                <argumentType ref="type.9338868"/>
            </content>
        </type>
        <type derived="true" id="type.3528">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338869"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338860" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338835"/>
                <argumentType ref="type.9338858"/>
                <argumentType ref="type.9338859"/>
            </content>
        </type>
        <type derived="true" id="type.3527">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338860"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338945" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338911"/>
                <argumentType ref="type.9338943"/>
                <argumentType ref="type.9338944"/>
            </content>
        </type>
        <type derived="true" id="type.3530">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338945"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338936" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338911"/>
                <argumentType ref="type.9338934"/>
                <argumentType ref="type.9338935"/>
            </content>
        </type>
        <type derived="true" id="type.3529">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338936"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339192" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9339158"/>
                <argumentType ref="type.9339190"/>
                <argumentType ref="type.9339191"/>
            </content>
        </type>
        <type derived="true" id="type.3540">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339192"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339183" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9339158"/>
                <argumentType ref="type.9339181"/>
                <argumentType ref="type.9339182"/>
            </content>
        </type>
        <type derived="true" id="type.3539">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339183"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338435" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338401"/>
                <argumentType ref="type.9338433"/>
                <argumentType ref="type.9338434"/>
            </content>
        </type>
        <type derived="true" id="type.3499">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338435"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338426" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338401"/>
                <argumentType ref="type.9338424"/>
                <argumentType ref="type.9338425"/>
            </content>
        </type>
        <type derived="true" id="type.3498">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338426"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333891" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333857"/>
                <argumentType ref="type.9333889"/>
                <argumentType ref="type.9333890"/>
            </content>
        </type>
        <type derived="true" id="type.3426">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333891"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333882" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333857"/>
                <argumentType ref="type.9333880"/>
                <argumentType ref="type.9333881"/>
            </content>
        </type>
        <type derived="true" id="type.3425">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333882"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334931" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334897"/>
                <argumentType ref="type.9334929"/>
                <argumentType ref="type.9334930"/>
            </content>
        </type>
        <type derived="true" id="type.3451">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334931"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334922" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334897"/>
                <argumentType ref="type.9334920"/>
                <argumentType ref="type.9334921"/>
            </content>
        </type>
        <type derived="true" id="type.3450">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334922"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334515" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334481"/>
                <argumentType ref="type.9334513"/>
                <argumentType ref="type.9334514"/>
            </content>
        </type>
        <type derived="true" id="type.3441">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334515"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334506" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334481"/>
                <argumentType ref="type.9334504"/>
                <argumentType ref="type.9334505"/>
            </content>
        </type>
        <type derived="true" id="type.3440">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334506"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334723" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334689"/>
                <argumentType ref="type.9334721"/>
                <argumentType ref="type.9334722"/>
            </content>
        </type>
        <type derived="true" id="type.3446">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334723"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334714" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334689"/>
                <argumentType ref="type.9334712"/>
                <argumentType ref="type.9334713"/>
            </content>
        </type>
        <type derived="true" id="type.3445">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334714"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333240" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333206"/>
                <argumentType ref="type.9333238"/>
                <argumentType ref="type.9333239"/>
            </content>
        </type>
        <type derived="true" id="type.3411">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333240"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333231" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333206"/>
                <argumentType ref="type.9333229"/>
                <argumentType ref="type.9333230"/>
            </content>
        </type>
        <type derived="true" id="type.3410">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333231"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333472" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333438"/>
                <argumentType ref="type.9333470"/>
                <argumentType ref="type.9333471"/>
            </content>
        </type>
        <type derived="true" id="type.3416">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333463" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333438"/>
                <argumentType ref="type.9333461"/>
                <argumentType ref="type.9333462"/>
            </content>
        </type>
        <type derived="true" id="type.3415">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333463"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333683" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333649"/>
                <argumentType ref="type.9333681"/>
                <argumentType ref="type.9333682"/>
            </content>
        </type>
        <type derived="true" id="type.3421">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333683"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333674" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333649"/>
                <argumentType ref="type.9333672"/>
                <argumentType ref="type.9333673"/>
            </content>
        </type>
        <type derived="true" id="type.3420">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333674"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334307" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334273"/>
                <argumentType ref="type.9334305"/>
                <argumentType ref="type.9334306"/>
            </content>
        </type>
        <type derived="true" id="type.3436">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334307"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334298" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334273"/>
                <argumentType ref="type.9334296"/>
                <argumentType ref="type.9334297"/>
            </content>
        </type>
        <type derived="true" id="type.3435">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334298"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334099" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334065"/>
                <argumentType ref="type.9334097"/>
                <argumentType ref="type.9334098"/>
            </content>
        </type>
        <type derived="true" id="type.3431">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334099"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334090" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334065"/>
                <argumentType ref="type.9334088"/>
                <argumentType ref="type.9334089"/>
            </content>
        </type>
        <type derived="true" id="type.3430">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334090"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338707" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338675"/>
                <argumentType ref="type.9338705"/>
                <argumentType ref="type.9338706"/>
            </content>
        </type>
        <type derived="true" id="type.3521">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338707"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338698" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338675"/>
                <argumentType ref="type.9338696"/>
                <argumentType ref="type.9338697"/>
            </content>
        </type>
        <type derived="true" id="type.3520">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338698"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331348" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331314"/>
                <argumentType ref="type.9331346"/>
                <argumentType ref="type.9331347"/>
            </content>
        </type>
        <type id="type.9331274" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331240"/>
                <argumentType ref="type.9331272"/>
                <argumentType ref="type.9331273"/>
            </content>
        </type>
        <type derived="true" id="type.3239">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331274"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3243">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331348"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331265" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331240"/>
                <argumentType ref="type.9331263"/>
                <argumentType ref="type.9331264"/>
            </content>
        </type>
        <type id="type.9331339" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331314"/>
                <argumentType ref="type.9331337"/>
                <argumentType ref="type.9331338"/>
            </content>
        </type>
        <type derived="true" id="type.3238">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331265"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3242">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331339"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331459" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331423"/>
                <argumentType ref="type.9331457"/>
                <argumentType ref="type.9331458"/>
            </content>
        </type>
        <type derived="true" id="type.3252">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331459"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331450" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331423"/>
                <argumentType ref="type.9331448"/>
                <argumentType ref="type.9331449"/>
            </content>
        </type>
        <type derived="true" id="type.3251">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331450"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9330011"/>
                <argumentType ref="type.9332938"/>
                <argumentType ref="type.9332939"/>
            </content>
        </type>
        <type derived="true" id="type.3381">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3395">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3399">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3403">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3387">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3407">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3391">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9330008"/>
                <argumentType ref="type.9332787"/>
                <argumentType ref="type.9332788"/>
            </content>
        </type>
        <type derived="true" id="type.3380">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3406">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3386">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3398">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3402">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3390">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3394">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333782" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330090"/>
                <argumentType ref="type.9333625"/>
                <argumentType ref="type.9333781"/>
            </content>
        </type>
        <type derived="true" id="type.3424">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333782"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338972" specialization="true">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337381"/>
                <argumentType ref="type.9338887"/>
                <argumentType ref="type.9338968"/>
            </content>
        </type>
        <type derived="true" id="type.3531">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338972"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339107" specialization="true">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337389"/>
                <argumentType ref="type.9339105"/>
                <argumentType ref="type.9339106"/>
            </content>
        </type>
        <type derived="true" id="type.3538">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339107"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334399" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330132"/>
                <argumentType ref="type.9334249"/>
                <argumentType ref="type.9334398"/>
            </content>
        </type>
        <type derived="true" id="type.3439">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334399"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338520" specialization="true">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337620"/>
                <argumentType ref="type.9338518"/>
                <argumentType ref="type.9338519"/>
            </content>
        </type>
        <type derived="true" id="type.3502">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338520"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334198" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330113"/>
                <argumentType ref="type.9334041"/>
                <argumentType ref="type.9334197"/>
            </content>
        </type>
        <type derived="true" id="type.3434">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334198"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333102" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333065"/>
                <argumentType ref="type.9333064"/>
            </content>
        </type>
        <type id="type.9332867" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332830"/>
                <argumentType ref="type.9332829"/>
            </content>
        </type>
        <type id="type.9332820" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332783"/>
                <argumentType ref="type.9332782"/>
            </content>
        </type>
        <type id="type.9333008" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332971"/>
                <argumentType ref="type.9332970"/>
            </content>
        </type>
        <type id="type.9333055" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333021"/>
                <argumentType ref="type.9333020"/>
            </content>
        </type>
        <type id="type.9332961" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332924"/>
                <argumentType ref="type.9332923"/>
            </content>
        </type>
        <type id="type.9332914" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332877"/>
                <argumentType ref="type.9332876"/>
            </content>
        </type>
        <type id="type.9332961" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332924"/>
                <argumentType ref="type.9332923"/>
            </content>
        </type>
        <type derived="true" id="type.3409">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333102"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3401">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333008"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3384">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332820"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3397">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332961"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3389">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332867"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3393">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332914"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3405">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333055"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333001" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332974"/>
                <argumentType ref="type.9332973"/>
            </content>
        </type>
        <type id="type.9332813" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332786"/>
                <argumentType ref="type.9332785"/>
            </content>
        </type>
        <type id="type.9332907" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332880"/>
                <argumentType ref="type.9332879"/>
            </content>
        </type>
        <type id="type.9332954" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332927"/>
                <argumentType ref="type.9332926"/>
            </content>
        </type>
        <type id="type.9332860" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332833"/>
                <argumentType ref="type.9332832"/>
            </content>
        </type>
        <type id="type.9333095" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333068"/>
                <argumentType ref="type.9333067"/>
            </content>
        </type>
        <type id="type.9333048" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333024"/>
                <argumentType ref="type.9333023"/>
            </content>
        </type>
        <type id="type.9332813" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332786"/>
                <argumentType ref="type.9332785"/>
            </content>
        </type>
        <type derived="true" id="type.3408">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333095"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3404">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333048"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3400">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333001"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3383">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332813"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3388">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332860"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3396">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332954"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3392">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332907"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330353" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330318"/>
                <argumentType ref="type.9330320"/>
                <argumentType ref="type.9330319"/>
            </content>
        </type>
        <type derived="true" id="type.3153">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330346" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330318"/>
                <argumentType ref="type.9330323"/>
                <argumentType ref="type.9330322"/>
            </content>
        </type>
        <type derived="true" id="type.3152">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330346"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340878" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9339264"/>
                <argumentType ref="type.9339375"/>
            </content>
        </type>
        <type id="type.3582" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9339264"/>
                <argumentType ref="type.9339375"/>
            </content>
        </type>
        <type id="type.9340878" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9339264"/>
                <argumentType ref="type.9339375"/>
            </content>
        </type>
        <type derived="true" id="type.3584">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.3582"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340880">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.9340878"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340884">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340878"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3588">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.3582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340884">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340878"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3583">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.3582"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340879">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.9340878"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340871" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9339209"/>
                <argumentType ref="type.9339373"/>
            </content>
        </type>
        <type id="type.3575" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9339209"/>
                <argumentType ref="type.9339373"/>
            </content>
        </type>
        <type derived="true" id="type.9340873">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.9340871"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3577">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.3575"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340873">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.9340871"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3590">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340871"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3581">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.3575"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340872">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.9340871"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3576">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.3575"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340872">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.9340871"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330443" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
            </content>
        </type>
        <type derived="true" id="type.3172">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330443"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330436" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
            </content>
        </type>
        <type derived="true" id="type.3171">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330436"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330398" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330361"/>
                <argumentType ref="type.9330363"/>
                <argumentType ref="type.9330362"/>
            </content>
        </type>
        <type derived="true" id="type.3162">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330398"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330391" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330361"/>
                <argumentType ref="type.9330366"/>
                <argumentType ref="type.9330365"/>
            </content>
        </type>
        <type derived="true" id="type.3161">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330391"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339057" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <argumentType ref="type.9337612"/>
                <argumentType ref="type.9337611"/>
            </content>
        </type>
        <type derived="true" id="type.3536">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339057"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339043" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.9337447"/>
                <argumentType ref="type.9337446"/>
            </content>
        </type>
        <type derived="true" id="type.3535">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339043"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339036" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.9337450"/>
                <argumentType ref="type.9337449"/>
            </content>
        </type>
        <type derived="true" id="type.3534">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339036"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338794" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.9338776"/>
                <argumentType ref="type.9338775"/>
            </content>
        </type>
        <type derived="true" id="type.3526">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338794"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338787" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.9338784"/>
                <argumentType ref="type.9338785"/>
            </content>
        </type>
        <type derived="true" id="type.3525">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338787"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335060" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.9330184"/>
                <argumentType ref="type.9330183"/>
            </content>
        </type>
        <type derived="true" id="type.3456">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335060"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335053" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.9330187"/>
                <argumentType ref="type.9330186"/>
            </content>
        </type>
        <type derived="true" id="type.3455">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335053"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340749" specialization="true">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <argumentType ref="type.9339854"/>
                <argumentType ref="type.9339853"/>
            </content>
        </type>
        <type derived="true" id="type.9340751">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;</name>
            <content>
                <baseType ref="type.9340749"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340755">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340749"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340750">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>*</name>
            <content>
                <baseType ref="type.9340749"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340742" specialization="true">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <argumentType ref="type.9339857"/>
                <argumentType ref="type.9339856"/>
            </content>
        </type>
        <type derived="true" id="type.9340744">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;</name>
            <content>
                <baseType ref="type.9340742"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340748">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340742"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340743">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>*</name>
            <content>
                <baseType ref="type.9340742"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329906"/>
                <argumentType ref="9329907"/>
                <argumentType ref="9329908"/>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329906"/>
                <argumentType ref="9329907"/>
                <argumentType ref="9329908"/>
            </content>
        </type>
        <type derived="true" id="type.3299">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3300">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3301">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3302">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3303">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3304">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3298">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329901"/>
                <argumentType ref="type.9331907"/>
                <argumentType ref="type.9331908"/>
            </content>
        </type>
        <type derived="true" id="type.3260">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3296">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3266">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3378">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3264">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329985"/>
                <argumentType ref="type.9332753"/>
                <argumentType ref="type.9332762"/>
            </content>
        </type>
        <type derived="true" id="type.3259">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3263">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3377">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3265">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3295">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9337091" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337075"/>
                <argumentType ref="type.9337080"/>
                <argumentType ref="type.9337079"/>
            </content>
        </type>
        <type derived="true" id="type.3487">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337091"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9337151" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337135"/>
                <argumentType ref="type.9337140"/>
                <argumentType ref="type.9337139"/>
            </content>
        </type>
        <type derived="true" id="type.3488">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337151"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9336990" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9336950"/>
                <argumentType ref="type.9336955"/>
                <argumentType ref="type.9336954"/>
            </content>
        </type>
        <type derived="true" id="type.3485">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9337042" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337029"/>
                <argumentType ref="type.9337034"/>
                <argumentType ref="type.9337033"/>
            </content>
        </type>
        <type derived="true" id="type.3486">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337042"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338760" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338738"/>
                <argumentType ref="type.9338743"/>
                <argumentType ref="type.9338742"/>
            </content>
        </type>
        <type derived="true" id="type.3524">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338760"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338333" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338311"/>
                <argumentType ref="type.9338316"/>
                <argumentType ref="type.9338315"/>
            </content>
        </type>
        <type derived="true" id="type.3497">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338333"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339018" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338998"/>
                <argumentType ref="type.9339000"/>
                <argumentType ref="type.9338999"/>
            </content>
        </type>
        <type derived="true" id="type.3533">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339018"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339011" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338998"/>
                <argumentType ref="type.9339003"/>
                <argumentType ref="type.9339002"/>
            </content>
        </type>
        <type derived="true" id="type.3532">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339011"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338302" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338282"/>
                <argumentType ref="type.9338284"/>
                <argumentType ref="type.9338283"/>
            </content>
        </type>
        <type derived="true" id="type.3496">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338302"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338295" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338282"/>
                <argumentType ref="type.9338287"/>
                <argumentType ref="type.9338286"/>
            </content>
        </type>
        <type derived="true" id="type.3495">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338295"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335089" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335069"/>
                <argumentType ref="type.9335071"/>
                <argumentType ref="type.9335070"/>
            </content>
        </type>
        <type derived="true" id="type.3458">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335089"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335082" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335069"/>
                <argumentType ref="type.9335074"/>
                <argumentType ref="type.9335073"/>
            </content>
        </type>
        <type derived="true" id="type.3457">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335082"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335185" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335165"/>
                <argumentType ref="type.9335167"/>
                <argumentType ref="type.9335166"/>
            </content>
        </type>
        <type derived="true" id="type.3474">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335185"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335178" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335165"/>
                <argumentType ref="type.9335170"/>
                <argumentType ref="type.9335169"/>
            </content>
        </type>
        <type derived="true" id="type.3473">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335178"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335117" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335097"/>
                <argumentType ref="type.9335099"/>
                <argumentType ref="type.9335098"/>
            </content>
        </type>
        <type derived="true" id="type.3460">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335117"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335110" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335097"/>
                <argumentType ref="type.9335102"/>
                <argumentType ref="type.9335101"/>
            </content>
        </type>
        <type derived="true" id="type.3459">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335110"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335220" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335200"/>
                <argumentType ref="type.9335202"/>
                <argumentType ref="type.9335201"/>
            </content>
        </type>
        <type derived="true" id="type.3476">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335220"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335213" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335200"/>
                <argumentType ref="type.9335205"/>
                <argumentType ref="type.9335204"/>
            </content>
        </type>
        <type derived="true" id="type.3475">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335213"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340909" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9340886"/>
                <argumentType ref="type.9340888"/>
                <argumentType ref="type.9340887"/>
            </content>
        </type>
        <type derived="true" id="type.9340911">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <baseType ref="type.9340909"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3592">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340909"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340910">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <baseType ref="type.9340909"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340902" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9340886"/>
                <argumentType ref="type.9340891"/>
                <argumentType ref="type.9340890"/>
            </content>
        </type>
        <type derived="true" id="type.9340904">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <baseType ref="type.9340902"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3591">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340902"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340903">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <baseType ref="type.9340902"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9337936" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9336711" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9340310" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.3274" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9331808" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type derived="true" id="type.9340312">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.9340310"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3276">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.3274"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3483">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336711"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3493">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337936"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3281">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331808"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3280">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3274"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3565">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340310"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3275">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.3274"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340311">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.9340310"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9337807" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.9336582" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.3145" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.9340181" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type derived="true" id="type.3147">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.3145"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340183">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.9340181"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3561">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340181"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3151">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3145"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3479">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3489">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337807"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3146">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.3145"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340182">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.9340181"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9337826" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9340200" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.3164" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9330422" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9340200" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9336601" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type derived="true" id="type.9340202">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.9340200"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3166">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.3164"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3481">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336601"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3563">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340200"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3491">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337826"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3170">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3164"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3173">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330422"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3165">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.3164"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340201">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.9340200"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9335134" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9335131"/>
                <argumentType ref="type.9335132"/>
            </content>
        </type>
        <type derived="true" id="type.3461">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335134"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335141" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.3462" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9336900" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9340499" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9338125" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type derived="true" id="type.9340501">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.9340499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3464">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.3462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340501">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.9340499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3484">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336900"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3469">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335141"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3468">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3462"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3566">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340499"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3494">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338125"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3463">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.3462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340500">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.9340499"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330465" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9330462"/>
                <argumentType ref="type.9330463"/>
            </content>
        </type>
        <type derived="true" id="type.3174">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330465"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340211" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9337837" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9336612" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9340211" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.3175" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9330472" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type derived="true" id="type.9340213">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.9340211"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3177">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.3175"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3482">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336612"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3492">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337837"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3181">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3175"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3182">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3564">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340211"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3176">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.3175"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340212">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.9340211"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340190" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9330377" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9337816" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9336591" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.3154" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type derived="true" id="type.9340192">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.9340190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3156">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.3154"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3562">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340190"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3160">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.3154"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3480">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336591"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3490">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337816"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3163">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330377"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340191">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.9340190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3155">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.3154"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329862"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="9329864"/>
            </content>
        </type>
        <type derived="true" id="type.3271">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329941"/>
                <argumentType ref="9329942"/>
                <argumentType ref="9329943"/>
                <argumentType ref="9329944"/>
            </content>
        </type>
        <type derived="true" id="type.3313">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329947"/>
                <argumentType ref="9329947"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="9329948"/>
            </content>
        </type>
        <type derived="true" id="type.3318">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3134">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339808">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3609">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339807">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3133">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339807">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9331772" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9331733"/>
                <argumentType ref="type.9331732"/>
            </content>
        </type>
        <type derived="true" id="type.3270">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331772"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331754" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9331743"/>
                <argumentType ref="type.9331752"/>
            </content>
        </type>
        <type derived="true" id="type.3269">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331754"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329937"/>
                <argumentType ref="9329938"/>
                <argumentType ref="9329939"/>
            </content>
        </type>
        <type derived="true" id="type.3310">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3309">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329949"/>
                <argumentType ref="type.9332141"/>
                <argumentType ref="type.9332143"/>
            </content>
        </type>
        <type derived="true" id="type.3317">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3321">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3323">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329951"/>
                <argumentType ref="type.9332175"/>
                <argumentType ref="type.9332184"/>
            </content>
        </type>
        <type derived="true" id="type.3316">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3320">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3322">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329942"/>
                <argumentType ref="type.9332025"/>
                <argumentType ref="type.9332027"/>
            </content>
        </type>
        <type derived="true" id="type.3312">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329942"/>
                <argumentType ref="type.9332010"/>
                <argumentType ref="type.9332011"/>
            </content>
        </type>
        <type derived="true" id="type.3311">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710">
            <name>ReferenceRule</name>
        </type>
        <type derived="true" id="type.9340076">
            <name>ReferenceRule&amp;</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340075">
            <name>ReferenceRule*</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341127">
            <name>ReferenceRule*&amp;</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341126">
            <name>ReferenceRule**</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3677">
            <name>ReturnStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3707">
            <name>RvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60">
            <name>SDDeclRule</name>
        </type>
        <type derived="true" id="type.9340004">
            <name>SDDeclRule&amp;</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340003">
            <name>SDDeclRule*</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341067">
            <name>SDDeclRule*&amp;</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341066">
            <name>SDDeclRule**</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340785" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9340165"/>
            </content>
        </type>
        <type derived="true" id="type.9340794">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <baseType ref="type.9340785"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341214">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340785"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340793">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341232">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>*&amp;</name>
            <content>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341231">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>**</name>
            <content>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="9329972"/>
            </content>
        </type>
        <type derived="true" id="type.3368">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3346">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3362">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3330">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3340">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="9329980"/>
            </content>
        </type>
        <type derived="true" id="type.3370">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3363">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3348">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3659">
            <name>SizeOf&amp;&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340858" specialization="true">
            <name>Stack&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.9330407"/>
            </content>
        </type>
        <type derived="true" id="type.9340863">
            <name>Stack&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.9340858"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340862">
            <name>Stack&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.9340858"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340852" specialization="true">
            <name>Stack&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.9340857">
            <name>Stack&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9340852"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340856">
            <name>Stack&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9340852"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3674">
            <name>Statement&amp;&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3596">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="9330008"/>
            </content>
        </type>
        <type derived="true" id="type.3382">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330406" specialization="true">
            <name>String&lt;uchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9329190"/>
            </content>
        </type>
        <type derived="true" id="type.9330408">
            <name>String&lt;uchar>&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330407">
            <name>String&lt;uchar>*</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339264">
            <name>String&lt;uchar>*&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340864">
            <name>String&lt;uchar>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339375">
            <name>String&lt;uchar>**</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341208">
            <name>String&lt;uchar>**&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341209">
            <name>String&lt;uchar>**&amp;&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341207">
            <name>String&lt;uchar>***</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3692">
            <name>SwitchStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903">
            <name>SystemLiteralRule</name>
        </type>
        <type derived="true" id="type.9339896">
            <name>SystemLiteralRule&amp;</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339895">
            <name>SystemLiteralRule*</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340977">
            <name>SystemLiteralRule*&amp;</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340976">
            <name>SystemLiteralRule**</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3186">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3184">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329714"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3308">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3306">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329932"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3246">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329823"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3256">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3234">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329806"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3248">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3376">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329985"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3294">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329901"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3262">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329855"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3670">
            <name>TemplateId&amp;&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97">
            <name>TextDeclRule</name>
        </type>
        <type derived="true" id="type.9340130">
            <name>TextDeclRule&amp;</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340129">
            <name>TextDeclRule*</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341172">
            <name>TextDeclRule*&amp;</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341171">
            <name>TextDeclRule**</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3698">
            <name>ThrowStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3726">
            <name>TokenParser&amp;&amp;</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3701">
            <name>TryStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3622">
            <name>Type&amp;&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3662">
            <name>TypeName&amp;&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340789" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.9340781"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.9340791">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9340789"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341215">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340789"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340790">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9340789"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3644">
            <name>UnaryMinus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3641">
            <name>UnaryPlus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331783" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9331760"/>
            </content>
        </type>
        <type derived="true" id="type.3272">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331783"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332098" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.3319">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332098"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332040" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.3315">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332040"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335294" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.3478">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335294"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339268" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
            </content>
        </type>
        <type derived="true" id="type.3541">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339268"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338472" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
            </content>
        </type>
        <type derived="true" id="type.3500">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339394" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
            </content>
        </type>
        <type derived="true" id="type.3542">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339394"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338479" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
            </content>
        </type>
        <type derived="true" id="type.3501">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338479"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340886" specialization="true">
            <name>UniquePtr&lt;System.Xml.Entity></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
            </content>
        </type>
        <type derived="true" id="type.9340888">
            <name>UniquePtr&lt;System.Xml.Entity>&amp;</name>
            <content>
                <baseType ref="type.9340886"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340892">
            <name>UniquePtr&lt;System.Xml.Entity>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340886"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340887">
            <name>UniquePtr&lt;System.Xml.Entity>*</name>
            <content>
                <baseType ref="type.9340886"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341227">
            <name>UniquePtr&lt;System.Xml.Entity>*&amp;</name>
            <content>
                <baseType ref="type.9340886"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341226">
            <name>UniquePtr&lt;System.Xml.Entity>**</name>
            <content>
                <baseType ref="type.9340886"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9340761" specialization="true">
            <name>UniquePtr&lt;System.Xml.XmlParser></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
            </content>
        </type>
        <type derived="true" id="type.9340763">
            <name>UniquePtr&lt;System.Xml.XmlParser>&amp;</name>
            <content>
                <baseType ref="type.9340761"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340767">
            <name>UniquePtr&lt;System.Xml.XmlParser>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340761"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340762">
            <name>UniquePtr&lt;System.Xml.XmlParser>*</name>
            <content>
                <baseType ref="type.9340761"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="9330216"/>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="9330216"/>
            </content>
        </type>
        <type derived="true" id="type.3477">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3273">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9329863"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339769" specialization="true">
            <name>ValueObject&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.3559">
            <name>ValueObject&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339769"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79" specialization="true">
            <name>ValueObject&lt;ValueType></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="9337398"/>
            </content>
        </type>
        <type derived="true" id="type.3523">
            <name>ValueObject&lt;ValueType>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9340939" specialization="true">
            <name>ValueObject&lt;XmlProcessor*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9340174"/>
            </content>
        </type>
        <type derived="true" id="type.9340941">
            <name>ValueObject&lt;XmlProcessor*>&amp;</name>
            <content>
                <baseType ref="type.9340939"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3593">
            <name>ValueObject&lt;XmlProcessor*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9340939"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340940">
            <name>ValueObject&lt;XmlProcessor*>*</name>
            <content>
                <baseType ref="type.9340939"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9339757" specialization="true">
            <name>ValueObject&lt;bool></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.3558">
            <name>ValueObject&lt;bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339757"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339594" specialization="true">
            <name>ValueObject&lt;byte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329179"/>
            </content>
        </type>
        <type derived="true" id="type.3545">
            <name>ValueObject&lt;byte>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339733" specialization="true">
            <name>ValueObject&lt;double></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329187"/>
            </content>
        </type>
        <type derived="true" id="type.3557">
            <name>ValueObject&lt;double>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339733"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339719" specialization="true">
            <name>ValueObject&lt;float></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329186"/>
            </content>
        </type>
        <type derived="true" id="type.3555">
            <name>ValueObject&lt;float>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339719"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339635" specialization="true">
            <name>ValueObject&lt;int></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329182"/>
            </content>
        </type>
        <type derived="true" id="type.3550">
            <name>ValueObject&lt;int>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339635"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339660" specialization="true">
            <name>ValueObject&lt;long></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329184"/>
            </content>
        </type>
        <type derived="true" id="type.3552">
            <name>ValueObject&lt;long>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339660"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339577" specialization="true">
            <name>ValueObject&lt;sbyte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329178"/>
            </content>
        </type>
        <type derived="true" id="type.3544">
            <name>ValueObject&lt;sbyte>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339577"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339607" specialization="true">
            <name>ValueObject&lt;short></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329180"/>
            </content>
        </type>
        <type derived="true" id="type.3547">
            <name>ValueObject&lt;short>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339607"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339786" specialization="true">
            <name>ValueObject&lt;uchar></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329190"/>
            </content>
        </type>
        <type derived="true" id="type.3560">
            <name>ValueObject&lt;uchar>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339786"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339647" specialization="true">
            <name>ValueObject&lt;uint></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329183"/>
            </content>
        </type>
        <type derived="true" id="type.3551">
            <name>ValueObject&lt;uint>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339647"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339672" specialization="true">
            <name>ValueObject&lt;ulong></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329185"/>
            </content>
        </type>
        <type derived="true" id="type.3553">
            <name>ValueObject&lt;ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339672"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339621" specialization="true">
            <name>ValueObject&lt;ushort></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329181"/>
            </content>
        </type>
        <type derived="true" id="type.3549">
            <name>ValueObject&lt;ushort>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339621"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018">
            <name>VersionInfoRule</name>
        </type>
        <type derived="true" id="type.9339956">
            <name>VersionInfoRule&amp;</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339955">
            <name>VersionInfoRule*</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341027">
            <name>VersionInfoRule*&amp;</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341026">
            <name>VersionInfoRule**</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="9329980"/>
            </content>
        </type>
        <type derived="true" id="type.3347">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3369">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3331">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3339">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3361">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330308" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.3144">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330308"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="9329982"/>
            </content>
        </type>
        <type derived="true" id="type.3351">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3349">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3355">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3374">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3353">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3371">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3364">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="9329975"/>
            </content>
        </type>
        <type derived="true" id="type.3357">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04">
            <name>XMLDeclRule</name>
        </type>
        <type derived="true" id="type.9339950">
            <name>XMLDeclRule&amp;</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339949">
            <name>XMLDeclRule*</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341022">
            <name>XMLDeclRule*&amp;</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341021">
            <name>XMLDeclRule**</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715">
            <name>XmlContentHandler</name>
        </type>
        <type derived="true" id="type.9339866">
            <name>XmlContentHandler&amp;</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339865">
            <name>XmlContentHandler*</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341205">
            <name>XmlContentHandler*&amp;</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341204">
            <name>XmlContentHandler**</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94">
            <name>XmlGrammar</name>
        </type>
        <type derived="true" id="type.9339869">
            <name>XmlGrammar&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3734">
            <name>XmlGrammar&amp;&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339868">
            <name>XmlGrammar*</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340952">
            <name>XmlGrammar*&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340951">
            <name>XmlGrammar**</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83">
            <name>XmlParser</name>
        </type>
        <type derived="true" id="type.9340160">
            <name>XmlParser&amp;</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340159">
            <name>XmlParser*</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341201">
            <name>XmlParser*&amp;</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341200">
            <name>XmlParser**</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5">
            <name>XmlProcessingException</name>
        </type>
        <type derived="true" id="type.9340163">
            <name>XmlProcessingException&amp;</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340773">
            <name>XmlProcessingException&amp;&amp;</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340162">
            <name>XmlProcessingException*</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319">
            <name>XmlProcessor</name>
        </type>
        <type derived="true" id="type.9340175">
            <name>XmlProcessor&amp;</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340174">
            <name>XmlProcessor*</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340948">
            <name>XmlProcessor*&amp;</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340947">
            <name>XmlProcessor**</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329177">
            <name>bool</name>
        </type>
        <type basic="true" id="type.9329179">
            <name>byte</name>
        </type>
        <type derived="true" id="type.9329200">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.9329179"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329199">
            <name>byte*</name>
            <content>
                <baseType ref="type.9329179"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329188">
            <name>char</name>
        </type>
        <type derived="true" id="type.9329227">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.9329188"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329226">
            <name>char*</name>
            <content>
                <baseType ref="type.9329188"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3630">
            <name>const AddressOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
            </content>
        </type>
        <type derived="true" id="type.3631">
            <name>const AddressOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3702">
            <name>const AssertStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
            </content>
        </type>
        <type derived="true" id="type.3703">
            <name>const AssertStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339855">
            <name>const Attribute</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
            </content>
        </type>
        <type derived="true" id="type.9339857">
            <name>const Attribute&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339856">
            <name>const Attribute*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340920">
            <name>const Attribute*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340921">
            <name>const Attribute*&amp;&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340919">
            <name>const Attribute**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339859">
            <name>const Attributes</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
            </content>
        </type>
        <type derived="true" id="type.9339861">
            <name>const Attributes&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339860">
            <name>const Attributes*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3597">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.3598">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3599">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.3600">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340810">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340807"/>
            </content>
        </type>
        <type derived="true" id="type.9340812">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340807"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340811">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340831">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340832">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340807"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3601">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.3602">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.3709">
            <name>const CodeExpandingVisitor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
            </content>
        </type>
        <type derived="true" id="type.3710">
            <name>const CodeExpandingVisitor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3645">
            <name>const Complement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
            </content>
        </type>
        <type derived="true" id="type.3646">
            <name>const Complement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3611">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.3663">
            <name>const Construct</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
            </content>
        </type>
        <type derived="true" id="type.3664">
            <name>const Construct&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3616">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.3617">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3143">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330292"/>
            </content>
        </type>
        <type derived="true" id="type.3373">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3334">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3336">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3342">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3365">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3343">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3327">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3350">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3332">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3324">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3352">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3354">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3333">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3358">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3372">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3341">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.3344">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3325">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3328">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3337">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3366">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3359">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3375">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.3335">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.3356">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.3681">
            <name>const DeleteStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
            </content>
        </type>
        <type derived="true" id="type.3682">
            <name>const DeleteStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3627">
            <name>const Deref</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
            </content>
        </type>
        <type derived="true" id="type.3628">
            <name>const Deref&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3684">
            <name>const DestroyStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
            </content>
        </type>
        <type derived="true" id="type.3685">
            <name>const DestroyStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340894">
            <name>const Entity</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
            </content>
        </type>
        <type derived="true" id="type.9340895">
            <name>const Entity&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340893">
            <name>const Entity*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340784">
            <name>const Entity*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3721">
            <name>const ExpectationParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
            </content>
        </type>
        <type derived="true" id="type.3722">
            <name>const ExpectationParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3687">
            <name>const ExpressionStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
            </content>
        </type>
        <type derived="true" id="type.3688">
            <name>const ExpressionStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3603">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.3604">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3693">
            <name>const GotoCaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
            </content>
        </type>
        <type derived="true" id="type.3694">
            <name>const GotoCaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3678">
            <name>const GotoStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
            </content>
        </type>
        <type derived="true" id="type.3679">
            <name>const GotoStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340778">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340775"/>
            </content>
        </type>
        <type derived="true" id="type.9340780">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340779">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340798">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340795"/>
            </content>
        </type>
        <type derived="true" id="type.9340800">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340795"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340799">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340795"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340804">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340801"/>
            </content>
        </type>
        <type derived="true" id="type.9340806">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340801"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340805">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340801"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340818">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340815"/>
            </content>
        </type>
        <type derived="true" id="type.9340820">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340815"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340819">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340815"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3508">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3505"/>
            </content>
        </type>
        <type derived="true" id="type.9340545">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340542"/>
            </content>
        </type>
        <type derived="true" id="type.9340547">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340542"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3510">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3505"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340546">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340542"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3509">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3505"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340546">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340542"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3514">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3511"/>
            </content>
        </type>
        <type derived="true" id="type.9340551">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340548"/>
            </content>
        </type>
        <type derived="true" id="type.9340553">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3516">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3511"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340553">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3515">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3511"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340552">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340170">
            <name>const InternalEntity</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
            </content>
        </type>
        <type derived="true" id="type.9340172">
            <name>const InternalEntity&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340171">
            <name>const InternalEntity*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3605">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.3606">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3648">
            <name>const Invoke</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
            </content>
        </type>
        <type derived="true" id="type.3649">
            <name>const Invoke&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3227">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329805"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3267">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329862"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3314">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3250">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329834"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3718">
            <name>const KleeneStarParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
            </content>
        </type>
        <type derived="true" id="type.3719">
            <name>const KleeneStarParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340828">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340825"/>
            </content>
        </type>
        <type derived="true" id="type.9340830">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340829">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340825"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340868">
            <name>const List&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340865"/>
            </content>
        </type>
        <type derived="true" id="type.3572">
            <name>const List&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3569"/>
            </content>
        </type>
        <type derived="true" id="type.9340868">
            <name>const List&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340865"/>
            </content>
        </type>
        <type derived="true" id="type.3574">
            <name>const List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3569"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340870">
            <name>const List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340865"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3573">
            <name>const List&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3569"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340869">
            <name>const List&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340865"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340739">
            <name>const List&lt;System.Xml.Attribute></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340736"/>
            </content>
        </type>
        <type derived="true" id="type.9340741">
            <name>const List&lt;System.Xml.Attribute>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340736"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340740">
            <name>const List&lt;System.Xml.Attribute>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340736"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340899">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340896"/>
            </content>
        </type>
        <type derived="true" id="type.9340901">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340896"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340900">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340896"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3671">
            <name>const Literal</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
            </content>
        </type>
        <type derived="true" id="type.3672">
            <name>const Literal&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3283">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.3284">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3470">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9335149"/>
            </content>
        </type>
        <type derived="true" id="type.3471">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9335149"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3612">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.3666">
            <name>const New</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
            </content>
        </type>
        <type derived="true" id="type.3667">
            <name>const New&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3624">
            <name>const Not</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
            </content>
        </type>
        <type derived="true" id="type.3625">
            <name>const Not&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3712">
            <name>const OptionalParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
            </content>
        </type>
        <type derived="true" id="type.3713">
            <name>const OptionalParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3607">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.9340814">
            <name>const Pair&lt;String&lt;uchar>, Entity*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340781"/>
            </content>
        </type>
        <type derived="true" id="type.9340792">
            <name>const Pair&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340781"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340813">
            <name>const Pair&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340781"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3293">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3290">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3715">
            <name>const PositiveParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
            </content>
        </type>
        <type derived="true" id="type.3716">
            <name>const PositiveParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3654">
            <name>const PostfixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
            </content>
        </type>
        <type derived="true" id="type.3655">
            <name>const PostfixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3651">
            <name>const PostfixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
            </content>
        </type>
        <type derived="true" id="type.3652">
            <name>const PostfixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3636">
            <name>const PrefixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
            </content>
        </type>
        <type derived="true" id="type.3637">
            <name>const PrefixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3633">
            <name>const PrefixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
            </content>
        </type>
        <type derived="true" id="type.3634">
            <name>const PrefixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340845">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340842"/>
            </content>
        </type>
        <type derived="true" id="type.9340847">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340846">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340842"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340836">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340833"/>
            </content>
        </type>
        <type derived="true" id="type.9340838">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340837">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340881">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340878"/>
            </content>
        </type>
        <type derived="true" id="type.3585">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3582"/>
            </content>
        </type>
        <type derived="true" id="type.9340881">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340878"/>
            </content>
        </type>
        <type derived="true" id="type.9340883">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340878"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3587">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3582"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340882">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340878"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3586">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3582"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340882">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340878"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3578">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3575"/>
            </content>
        </type>
        <type derived="true" id="type.9340874">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340871"/>
            </content>
        </type>
        <type derived="true" id="type.3580">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3575"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340876">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340871"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3579">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3575"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340875">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340871"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340752">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340749"/>
            </content>
        </type>
        <type derived="true" id="type.9340754">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340749"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340753">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340749"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340745">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340742"/>
            </content>
        </type>
        <type derived="true" id="type.9340747">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340742"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340746">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340742"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340912">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340909"/>
            </content>
        </type>
        <type derived="true" id="type.9340914">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340909"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340913">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340909"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340905">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340902"/>
            </content>
        </type>
        <type derived="true" id="type.9340907">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340902"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340906">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340902"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340313">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340310"/>
            </content>
        </type>
        <type derived="true" id="type.3277">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3274"/>
            </content>
        </type>
        <type derived="true" id="type.9340315">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340310"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3279">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3274"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340314">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340310"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3278">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3274"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3148">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3145"/>
            </content>
        </type>
        <type derived="true" id="type.9340184">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340181"/>
            </content>
        </type>
        <type derived="true" id="type.3150">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3145"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340186">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340181"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3149">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3145"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340185">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340181"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3167">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3164"/>
            </content>
        </type>
        <type derived="true" id="type.9340203">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340200"/>
            </content>
        </type>
        <type derived="true" id="type.3169">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3164"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340205">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340200"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3168">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3164"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340204">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340200"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340502">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340499"/>
            </content>
        </type>
        <type derived="true" id="type.3465">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3462"/>
            </content>
        </type>
        <type derived="true" id="type.9340504">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3467">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340503">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340499"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3466">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340503">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340499"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3178">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3175"/>
            </content>
        </type>
        <type derived="true" id="type.9340214">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340211"/>
            </content>
        </type>
        <type derived="true" id="type.3180">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3175"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340216">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340211"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340215">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340211"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3179">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3175"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340215">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340211"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3157">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3154"/>
            </content>
        </type>
        <type derived="true" id="type.9340193">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340190"/>
            </content>
        </type>
        <type derived="true" id="type.9340195">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3159">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3154"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3158">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.3154"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340194">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3613">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.3675">
            <name>const ReturnStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
            </content>
        </type>
        <type derived="true" id="type.3676">
            <name>const ReturnStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340786">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340785"/>
            </content>
        </type>
        <type derived="true" id="type.9340788">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340785"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340787">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341230">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341229">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340785"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3657">
            <name>const SizeOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
            </content>
        </type>
        <type derived="true" id="type.3658">
            <name>const SizeOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9337642">
            <name>const Span&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340859">
            <name>const Stack&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340858"/>
            </content>
        </type>
        <type derived="true" id="type.9340861">
            <name>const Stack&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340858"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340860">
            <name>const Stack&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340858"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340853">
            <name>const Stack&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340852"/>
            </content>
        </type>
        <type derived="true" id="type.9340855">
            <name>const Stack&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340852"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340854">
            <name>const Stack&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340852"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3594">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.3595">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3608">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.9330323">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330318"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330411">
            <name>const String&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330410">
            <name>const String&lt;uchar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339209">
            <name>const String&lt;uchar>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9339373">
            <name>const String&lt;uchar>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330366">
            <name>const String&lt;wchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330361"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3690">
            <name>const SwitchStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
            </content>
        </type>
        <type derived="true" id="type.3691">
            <name>const SwitchStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3291">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329894"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3255">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3305">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329932"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3247">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3245">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329823"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3244">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329821"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3307">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3183">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329714"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3228">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329806"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3226">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329803"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3225">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329801"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3224">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329799"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3209">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329767"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3207">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329764"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3212">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329772"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3206">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329762"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3204">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329759"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3203">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329757"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3202">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329755"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3201">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329746"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3200">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329744"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3199">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329741"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3198">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329739"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3185">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3196">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329734"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3213">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329774"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3210">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3222">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329795"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3215">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329777"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3216">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329779"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3223">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329797"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3286">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329882"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3218">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329782"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3219">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329784"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3288">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329891"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3221">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329793"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3197">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329737"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3614">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.3615">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3696">
            <name>const ThrowStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
            </content>
        </type>
        <type derived="true" id="type.3697">
            <name>const ThrowStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3724">
            <name>const TokenParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
            </content>
        </type>
        <type derived="true" id="type.3725">
            <name>const TokenParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3699">
            <name>const TryStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
            </content>
        </type>
        <type derived="true" id="type.3700">
            <name>const TryStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3620">
            <name>const Type</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
            </content>
        </type>
        <type derived="true" id="type.3621">
            <name>const Type&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3660">
            <name>const TypeName</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
            </content>
        </type>
        <type derived="true" id="type.3661">
            <name>const TypeName&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3205">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3287">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329883"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3208">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329765"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3214">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3217">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329780"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3292">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329895"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3289">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3220">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329785"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3211">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329770"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341217">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340789"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3642">
            <name>const UnaryMinus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
            </content>
        </type>
        <type derived="true" id="type.3643">
            <name>const UnaryMinus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3639">
            <name>const UnaryPlus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
            </content>
        </type>
        <type derived="true" id="type.3640">
            <name>const UnaryPlus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3618">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.3619">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340889">
            <name>const UniquePtr&lt;System.Xml.Entity></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340886"/>
            </content>
        </type>
        <type derived="true" id="type.9340891">
            <name>const UniquePtr&lt;System.Xml.Entity>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340886"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340890">
            <name>const UniquePtr&lt;System.Xml.Entity>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340886"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340764">
            <name>const UniquePtr&lt;System.Xml.XmlParser></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340761"/>
            </content>
        </type>
        <type derived="true" id="type.9340766">
            <name>const UniquePtr&lt;System.Xml.XmlParser>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340761"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340765">
            <name>const UniquePtr&lt;System.Xml.XmlParser>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340761"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3268">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329863"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340942">
            <name>const ValueObject&lt;XmlProcessor*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340939"/>
            </content>
        </type>
        <type derived="true" id="type.9340944">
            <name>const ValueObject&lt;XmlProcessor*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340939"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340943">
            <name>const ValueObject&lt;XmlProcessor*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9340939"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3522">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9337398"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3732">
            <name>const XmlGrammar</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
            </content>
        </type>
        <type derived="true" id="type.3733">
            <name>const XmlGrammar&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340769">
            <name>const XmlParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
            </content>
        </type>
        <type derived="true" id="type.9340770">
            <name>const XmlParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340768">
            <name>const XmlParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3735">
            <name>const XmlProcessingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
            </content>
        </type>
        <type derived="true" id="type.3736">
            <name>const XmlProcessingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340176">
            <name>const XmlProcessor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
            </content>
        </type>
        <type derived="true" id="type.9340178">
            <name>const XmlProcessor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340177">
            <name>const XmlProcessor*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9340945">
            <name>const XmlProcessor*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9341254">
            <name>const XmlProcessor**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3556">
            <name>const double&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3554">
            <name>const float&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329186"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3543">
            <name>const sbyte&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329178"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3546">
            <name>const short&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329180"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3729">
            <name>const stdlib</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
            </content>
        </type>
        <type derived="true" id="type.3730">
            <name>const stdlib&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330413">
            <name>const uchar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3548">
            <name>const ushort&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329181"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329187">
            <name>double</name>
        </type>
        <type basic="true" id="type.9329186">
            <name>float</name>
        </type>
        <type basic="true" id="type.9329184">
            <name>long</name>
        </type>
        <type basic="true" id="type.9329178">
            <name>sbyte</name>
        </type>
        <type basic="true" id="type.9329180">
            <name>short</name>
        </type>
        <type derived="true" id="type.3731">
            <name>stdlib&amp;&amp;</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329190">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.9329233">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.9329190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329232">
            <name>uchar*</name>
            <content>
                <baseType ref="type.9329190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329183">
            <name>uint</name>
        </type>
        <type derived="true" id="type.9329212">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.9329183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329211">
            <name>uint*</name>
            <content>
                <baseType ref="type.9329183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329185">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.9329218">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.9329185"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329217">
            <name>ulong*</name>
            <content>
                <baseType ref="type.9329185"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329181">
            <name>ushort</name>
        </type>
        <type basic="true" id="type.9329189">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.9329230">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.9329189"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329229">
            <name>wchar*</name>
            <content>
                <baseType ref="type.9329189"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
