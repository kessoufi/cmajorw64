<library>
    <name>System.Xml</name>
    <style>../../stle/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Xml">
            <name>System.Xml</name>
            <classes>
                <class id="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6">
                    <name>Attribute</name>
                    <groupName>Attribute</groupName>
                    <syntax> public class Attribute;</syntax>
                    <constructors>
                        <constructor id="constructor_Attribute_6E674821A04E05F248948C9C72159E88D17A8BEC">
                            <name>Attribute(const String&lt;uchar>&amp; namespaceUri_, const String&lt;uchar>&amp; localName_, const String&lt;uchar>&amp; qualifiedName_, const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow Attribute(const String&lt;uchar>&amp; namespaceUri_, const String&lt;uchar>&amp; localName_, const String&lt;uchar>&amp; qualifiedName_, const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri_</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>localName_</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName_</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_LocalName_Attribute_8DA38D06BB5C227721DE8317A5B2522D405F299C">
                            <name>LocalName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; LocalName() const;</syntax>
                            <returnType ref="type.4607147"/>
                        </function>
                        <function id="member_function_NamespaceUri_Attribute_FCD8632734EA214456AF20D10BE355F504B8A51E">
                            <name>NamespaceUri() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; NamespaceUri() const;</syntax>
                            <returnType ref="type.4607147"/>
                        </function>
                        <function id="member_function_QualifiedName_Attribute_83715DE77B3DA658C671DA547E81296492AC58E7">
                            <name>QualifiedName() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; QualifiedName() const;</syntax>
                            <returnType ref="type.4607147"/>
                        </function>
                        <function id="member_function_Value_Attribute_DB447045C9877CB1AAEB1A7F9430152D8944D124">
                            <name>Value() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Value() const;</syntax>
                            <returnType ref="type.4607147"/>
                        </function>
                    </functions>
                </class>
                <class id="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A">
                    <name>Attributes</name>
                    <groupName>Attributes</groupName>
                    <syntax> public class Attributes;</syntax>
                    <functions>
                        <function id="member_function_Add_Attributes_542213B4F0B9B717828A2EFD3D57A0A6E1C01853">
                            <name>Add(const Attribute&amp; attribute)</name>
                            <syntax>public void Add(const Attribute&amp; attribute);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attribute</name>
                                    <type ref="type.4619561"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="function_group_Begin_E7806F1E087C8FBC4AAC7CA03BDA4E3F0EBAAEBF">
                            <name>Begin</name>
                            <overloads>
                                <overload id="member_function_Begin_Attributes_E0FE2B1D836D9A509546ACCA17C436728633AA02">
                                    <name>Begin()</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> Begin();</syntax>
                                    <returnType ref="type.4620455"/>
                                </overload>
                                <overload id="member_function_Begin_Attributes_9CBF93B2C57B61C120E6E24178E227328AF17E50">
                                    <name>Begin() const</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> Begin() const;</syntax>
                                    <returnType ref="type.4620448"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_CBegin_Attributes_7946E7AA681A002E6AF02D5B650DBD8E454AB29A">
                            <name>CBegin() const</name>
                            <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> CBegin() const;</syntax>
                            <returnType ref="type.4620448"/>
                        </function>
                        <function id="member_function_CEnd_Attributes_648180E438D133BE44CA40B30849FD9141D1025A">
                            <name>CEnd() const</name>
                            <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> CEnd() const;</syntax>
                            <returnType ref="type.4620448"/>
                        </function>
                        <function id="member_function_Clear_Attributes_7ED47594415AB1D01A5DBCB7A1EDA41506FA1D35">
                            <name>Clear()</name>
                            <syntax>public void Clear();</syntax>
                        </function>
                        <function id="member_function_Count_Attributes_E7B100936A03E120FDBAB70199CA8461DD505BBF">
                            <name>Count() const</name>
                            <syntax>public nothrow inline long Count() const;</syntax>
                            <returnType ref="type.4605937"/>
                        </function>
                        <function id="function_group_End_9D1EAC94D978500B592402C930F99A362D6FFC82">
                            <name>End</name>
                            <overloads>
                                <overload id="member_function_End_Attributes_41BA323D2A593CC9352AD6A14BAC4EBC3DC56AEF">
                                    <name>End()</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> End();</syntax>
                                    <returnType ref="type.4620455"/>
                                </overload>
                                <overload id="member_function_End_Attributes_46818949DF6DAE4F91795CF04515C87E88F03DC6">
                                    <name>End() const</name>
                                    <syntax>public nothrow inline RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> End() const;</syntax>
                                    <returnType ref="type.4620448"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_GetAttributeValue_62950307D780AA579B0C38E5DA5D62C6791B28D6">
                            <name>GetAttributeValue</name>
                            <overloads>
                                <overload id="member_function_GetAttributeValue_Attributes_886569FD6DA4BE2891400E8EF9BA55ABA1FDB16A">
                                    <name>GetAttributeValue(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName) const</name>
                                    <syntax>public const String&lt;uchar>* GetAttributeValue(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>namespaceUri</name>
                                            <type ref="type.4607147"/>
                                        </parameter>
                                        <parameter>
                                            <name>localName</name>
                                            <type ref="type.4607147"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.4607146"/>
                                </overload>
                                <overload id="member_function_GetAttributeValue_Attributes_28371BD0813B3405B8EADA92DE1A93558ECCC562">
                                    <name>GetAttributeValue(const String&lt;uchar>&amp; qualifiedName) const</name>
                                    <syntax>public const String&lt;uchar>* GetAttributeValue(const String&lt;uchar>&amp; qualifiedName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>qualifiedName</name>
                                            <type ref="type.4607147"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.4607146"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_IsEmpty_Attributes_BF31A606D8C56A503522EA6421C3BABC9188FDAD">
                            <name>IsEmpty() const</name>
                            <syntax>public nothrow inline bool IsEmpty() const;</syntax>
                            <returnType ref="type.4605930"/>
                        </function>
                        <function id="member_function_op_index_Attributes_2A5F48EA47F062D2FAE0A0D890D5689FB275F75C">
                            <name>operator[](long index) const</name>
                            <syntax>public nothrow const Attribute&amp; operator[](long index) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>index</name>
                                    <type ref="type.4605937"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.4619561"/>
                        </function>
                    </functions>
                    <typedefs>
                        <typedef id="typedef_ConstIterator_50480D5EC488FF9C4EE4C168500045C6E79E8AEA">
                            <name>ConstIterator</name>
                            <syntax>public typedef RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*> ConstIterator;</syntax>
                            <type ref="type.4620448"/>
                        </typedef>
                        <typedef id="typedef_Iterator_2FAF61197BC8F7C1F7DD1B984B01D1A35D1560D7">
                            <name>Iterator</name>
                            <syntax>public typedef RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*> Iterator;</syntax>
                            <type ref="type.4620455"/>
                        </typedef>
                    </typedefs>
                </class>
                <class id="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF">
                    <name>Entity</name>
                    <groupName>Entity</groupName>
                    <syntax> public class Entity;</syntax>
                </class>
                <class id="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD">
                    <name>InternalEntity</name>
                    <groupName>InternalEntity</groupName>
                    <syntax> public class InternalEntity;</syntax>
                    <baseClass ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                    <constructors>
                        <constructor id="constructor_InternalEntity_FB4BCBFA064F55118FDC16E64EE555A84C7F5D21">
                            <name>InternalEntity(const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow InternalEntity(const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_Value_InternalEntity_18B6A5ADC7446325164AA90A56FBF4ED8E292261">
                            <name>Value() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Value() const;</syntax>
                            <returnType ref="type.4607147"/>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715">
                    <name>XmlContentHandler</name>
                    <groupName>XmlContentHandler</groupName>
                    <syntax> public class XmlContentHandler;</syntax>
                    <functions>
                        <function id="member_function_Comment_XmlContentHandler_014A7E971B49FF0D6E7BE0EDEA9F8B6FAD3DBA8F">
                            <name>Comment(const String&lt;uchar>&amp; comment)</name>
                            <syntax>public virtual void Comment(const String&lt;uchar>&amp; comment);</syntax>
                            <parameters>
                                <parameter>
                                    <name>comment</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Encoding_XmlContentHandler_266660E9185F44B4970CEB3CA3BA30DBFCFF5D5C">
                            <name>Encoding(const String&lt;uchar>&amp; encoding)</name>
                            <syntax>public virtual void Encoding(const String&lt;uchar>&amp; encoding);</syntax>
                            <parameters>
                                <parameter>
                                    <name>encoding</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndDocument_XmlContentHandler_A96D1644E91C6C7756E2E7A9A895D277A32821D1">
                            <name>EndDocument()</name>
                            <syntax>public virtual void EndDocument();</syntax>
                        </function>
                        <function id="member_function_EndElement_XmlContentHandler_DB31A1841E92806E37311297520AFE995E684AAA">
                            <name>EndElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName)</name>
                            <syntax>public virtual void EndElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>localName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_PI_XmlContentHandler_FB6237A18BED749622AFF6DFFCBC4BC465648455">
                            <name>PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data)</name>
                            <syntax>public virtual void PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data);</syntax>
                            <parameters>
                                <parameter>
                                    <name>target</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>data</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_SkippedEntity_XmlContentHandler_1916387999FBA54A53DA8F7937AFF73F68D85ACF">
                            <name>SkippedEntity(const String&lt;uchar>&amp; entityName)</name>
                            <syntax>public virtual void SkippedEntity(const String&lt;uchar>&amp; entityName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>entityName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Standalone_XmlContentHandler_6D4842B294165585F04E66CB472297204EB6BB78">
                            <name>Standalone(bool standalone)</name>
                            <syntax>public virtual void Standalone(bool standalone);</syntax>
                            <parameters>
                                <parameter>
                                    <name>standalone</name>
                                    <type ref="type.4605930"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_StartDocument_XmlContentHandler_5F5B9BE7E73C83F4FAA638790CB6E43570819AAC">
                            <name>StartDocument()</name>
                            <syntax>public virtual void StartDocument();</syntax>
                        </function>
                        <function id="member_function_StartElement_XmlContentHandler_24BBE7CA7EEDCCC18A07D8B57DCAF1F6C8AB0E40">
                            <name>StartElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName, const Attributes&amp; attributes)</name>
                            <syntax>public virtual void StartElement(const String&lt;uchar>&amp; namespaceUri, const String&lt;uchar>&amp; localName, const String&lt;uchar>&amp; qualifiedName, const Attributes&amp; attributes);</syntax>
                            <parameters>
                                <parameter>
                                    <name>namespaceUri</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>localName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>qualifiedName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>attributes</name>
                                    <type ref="type.4619565"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Text_XmlContentHandler_839EDB413B6A036C9BD28CC96F077BFD09115252">
                            <name>Text(const String&lt;uchar>&amp; text)</name>
                            <syntax>public virtual void Text(const String&lt;uchar>&amp; text);</syntax>
                            <parameters>
                                <parameter>
                                    <name>text</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Version_XmlContentHandler_832F4430AA33DEAD28DE25FD0875A11DFD797834">
                            <name>Version(const String&lt;uchar>&amp; version)</name>
                            <syntax>public virtual void Version(const String&lt;uchar>&amp; version);</syntax>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94">
                    <name>XmlGrammar</name>
                    <groupName>XmlGrammar</groupName>
                    <syntax> public class XmlGrammar;</syntax>
                    <baseClass ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                    <constructors>
                        <constructor id="default_constructor_XmlGrammar_FEFE6DB27A066908881918FEC4211F42795CF231">
                            <name>XmlGrammar()</name>
                            <syntax>public XmlGrammar();</syntax>
                        </constructor>
                        <constructor id="constructor_XmlGrammar_DF8E2E1AEF0716E2DEC12AC6CB7CC9E04B6788EC">
                            <name>XmlGrammar(ParsingDomain* parsingDomain)</name>
                            <syntax>public XmlGrammar(ParsingDomain* parsingDomain);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingDomain</name>
                                    <type ref="type.4614139"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_CreateRules_XmlGrammar_4FECDDDBB435013E7E00B8C9FA523C4DBB2EC40C">
                            <name>CreateRules()</name>
                            <syntax>public override void CreateRules();</syntax>
                        </function>
                        <function id="member_function_GetReferencedGrammars_XmlGrammar_0EBFCF5CA54A504BE427075F58A48D26575D80B3">
                            <name>GetReferencedGrammars()</name>
                            <syntax>public override void GetReferencedGrammars();</syntax>
                        </function>
                        <function id="member_function_Parse_XmlGrammar_4C1C12CA48F9C75D5C640AB5CE7642DE9E1F2D17">
                            <name>Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, XmlProcessor* processor)</name>
                            <syntax>public void Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName, XmlProcessor* processor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>start</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>end</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>fileIndex</name>
                                    <type ref="type.4605935"/>
                                </parameter>
                                <parameter>
                                    <name>fileName</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>processor</name>
                                    <type ref="type.4619878"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
                <class id="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83">
                    <name>XmlParser</name>
                    <groupName>XmlParser</groupName>
                    <syntax> public class XmlParser;</syntax>
                    <functions>
                        <function id="member_function_Parse_XmlParser_210093CFB2FE60223FBC497BD623FAB6EF894B19">
                            <name>Parse(const uchar* contentStart, const uchar* contentEnd, const String&lt;char>&amp; systemId, XmlProcessor* processor)</name>
                            <syntax>public void Parse(const uchar* contentStart, const uchar* contentEnd, const String&lt;char>&amp; systemId, XmlProcessor* processor);</syntax>
                            <parameters>
                                <parameter>
                                    <name>contentStart</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>contentEnd</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>processor</name>
                                    <type ref="type.4619878"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_XmlParser_EBE8AA52E4F55503BE22716978C368C130634AD1">
                            <name>Instance()</name>
                            <syntax>public static XmlParser&amp; Instance();</syntax>
                            <returnType ref="type.4619864"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5">
                    <name>XmlProcessingException</name>
                    <groupName>XmlProcessingException</groupName>
                    <syntax> public class XmlProcessingException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_XmlProcessingException_56FBF06B79156A07F9AE215EFAE8DBD71BD4F72F">
                            <name>XmlProcessingException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow XmlProcessingException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319">
                    <name>XmlProcessor</name>
                    <groupName>XmlProcessor</groupName>
                    <syntax> public class XmlProcessor;</syntax>
                    <constructors>
                        <constructor id="constructor_XmlProcessor_C02EE75CFE5D00DD758011532F69F2CE3E1B1318">
                            <name>XmlProcessor(const uchar* contentStart_, const uchar* contentEnd_, XmlContentHandler* contentHandler_)</name>
                            <syntax>public XmlProcessor(const uchar* contentStart_, const uchar* contentEnd_, XmlContentHandler* contentHandler_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>contentStart_</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>contentEnd_</name>
                                    <type ref="type.4607149"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler_</name>
                                    <type ref="type.4619569"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AddAttribute_XmlProcessor_B85BF222226807756B469DF30B7CAA9A6C6A945E">
                            <name>AddAttribute(const String&lt;uchar>&amp; attName, const String&lt;uchar>&amp; attValue, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void AddAttribute(const String&lt;uchar>&amp; attName, const String&lt;uchar>&amp; attValue, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>attValue</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.4614362"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_BeginAttributeValue_XmlProcessor_6C33FE61C54678133957A757C3EE6CC1C706E09D">
                            <name>BeginAttributeValue(const String&lt;uchar>* attValue_)</name>
                            <syntax>public void BeginAttributeValue(const String&lt;uchar>* attValue_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>attValue_</name>
                                    <type ref="type.4607146"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_BeginStartTag_XmlProcessor_B305A423BA47D206C6FCB0CBCAC0860BA005CDC6">
                            <name>BeginStartTag(const String&lt;uchar>&amp; tagName)</name>
                            <syntax>public void BeginStartTag(const String&lt;uchar>&amp; tagName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>tagName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Comment_XmlProcessor_B0536F49A87DC644629C90D4441890B5A6752FDC">
                            <name>Comment(const String&lt;uchar>&amp; comment)</name>
                            <syntax>public void Comment(const String&lt;uchar>&amp; comment);</syntax>
                            <parameters>
                                <parameter>
                                    <name>comment</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Encoding_XmlProcessor_3A087FAAC77AE462D0669BF856D3564F3008DF49">
                            <name>Encoding(const String&lt;uchar>&amp; encoding)</name>
                            <syntax>public void Encoding(const String&lt;uchar>&amp; encoding);</syntax>
                            <parameters>
                                <parameter>
                                    <name>encoding</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndAttributeValue_XmlProcessor_A806EC0063DCF6E55506E06CC53E1B40717E26BE">
                            <name>EndAttributeValue()</name>
                            <syntax>public void EndAttributeValue();</syntax>
                        </function>
                        <function id="member_function_EndDocument_XmlProcessor_C05AD6A737A64C6A72BCCD95B47FAE58DD7A2C75">
                            <name>EndDocument()</name>
                            <syntax>public void EndDocument();</syntax>
                        </function>
                        <function id="member_function_EndStartTag_XmlProcessor_F5EE361D6C999C30B54E771618CB194040F07242">
                            <name>EndStartTag(const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EndStartTag(const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.4614362"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EndTag_XmlProcessor_C3D89FE1C64EE102929C172682041C659376BAAA">
                            <name>EndTag(const String&lt;uchar>&amp; tagName, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EndTag(const String&lt;uchar>&amp; tagName, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>tagName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.4614362"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_EntityRef_XmlProcessor_7D3D5323F4C53D3EFD9892E05C2375342498B610">
                            <name>EntityRef(const String&lt;uchar>&amp; entityName, const Span&amp; span, const String&lt;char>&amp; systemId)</name>
                            <syntax>public void EntityRef(const String&lt;uchar>&amp; entityName, const Span&amp; span, const String&lt;char>&amp; systemId);</syntax>
                            <parameters>
                                <parameter>
                                    <name>entityName</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>span</name>
                                    <type ref="type.4614362"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_PI_XmlProcessor_5BE43DD96122369309DD30EEDA28BC4C36145051">
                            <name>PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data)</name>
                            <syntax>public void PI(const String&lt;uchar>&amp; target, const String&lt;uchar>&amp; data);</syntax>
                            <parameters>
                                <parameter>
                                    <name>target</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>data</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Standalone_XmlProcessor_7A57ADC89AF9E2083890E4F8BFD90DA7395E2840">
                            <name>Standalone(bool standalone)</name>
                            <syntax>public void Standalone(bool standalone);</syntax>
                            <parameters>
                                <parameter>
                                    <name>standalone</name>
                                    <type ref="type.4605930"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_StartDocument_XmlProcessor_4D2FFEA3E614DD5374BEB96022D27434A713E891">
                            <name>StartDocument()</name>
                            <syntax>public void StartDocument();</syntax>
                        </function>
                        <function id="member_function_Text_XmlProcessor_EBE8A0CC4BDF6B07F929951ECBC9A8D5FF15B4C0">
                            <name>Text(const String&lt;uchar>&amp; text)</name>
                            <syntax>public void Text(const String&lt;uchar>&amp; text);</syntax>
                            <parameters>
                                <parameter>
                                    <name>text</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Version_XmlProcessor_3D2C6CD0C7133E029041383226E9041AE1BFF9B3">
                            <name>Version(const String&lt;uchar>&amp; version)</name>
                            <syntax>public void Version(const String&lt;uchar>&amp; version);</syntax>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_group_ParseXmlContent_A5F5274E3892415DFA80BEA4DB3D023DA61F8F4E">
                    <name>ParseXmlContent</name>
                    <overloads>
                        <overload id="function_ParseXmlContent_FB317CA5307F6138BFBA2CA2A43B5744FE92B917">
                            <name>ParseXmlContent(const String&lt;char>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;char>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.4619569"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_ParseXmlContent_61335068D4F75C1370C9C52E1DDE3F3C6797D054">
                            <name>ParseXmlContent(const String&lt;uchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;uchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.4607147"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.4619569"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_ParseXmlContent_02CBE0E791587725441F53556A92648D169B81B9">
                            <name>ParseXmlContent(const String&lt;wchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler)</name>
                            <syntax>public void ParseXmlContent(const String&lt;wchar>&amp; xmlContent, const String&lt;char>&amp; systemId, XmlContentHandler* contentHandler);</syntax>
                            <parameters>
                                <parameter>
                                    <name>xmlContent</name>
                                    <type ref="type.4607102"/>
                                </parameter>
                                <parameter>
                                    <name>systemId</name>
                                    <type ref="type.4607059"/>
                                </parameter>
                                <parameter>
                                    <name>contentHandler</name>
                                    <type ref="type.4619569"/>
                                </parameter>
                            </parameters>
                        </overload>
                    </overloads>
                </function>
                <function id="function_ParseXmlFile_7ED565F7B87DFEA8BE61A14E6C0BDB5D473022BC">
                    <name>ParseXmlFile(const String&lt;char>&amp; xmlFileName, XmlContentHandler* contentHandler)</name>
                    <syntax>public void ParseXmlFile(const String&lt;char>&amp; xmlFileName, XmlContentHandler* contentHandler);</syntax>
                    <parameters>
                        <parameter>
                            <name>xmlFileName</name>
                            <type ref="type.4607059"/>
                        </parameter>
                        <parameter>
                            <name>contentHandler</name>
                            <type ref="type.4619569"/>
                        </parameter>
                    </parameters>
                </function>
            </functions>
        </namespace>
    </namespaces>
    <types>
        <type derived="true" id="type.2962">
            <name>AddressOf&amp;&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3034">
            <name>AssertStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA">
            <name>AttDefRule</name>
        </type>
        <type derived="true" id="type.4619750">
            <name>AttDefRule&amp;</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619749">
            <name>AttDefRule*</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620808">
            <name>AttDefRule*&amp;</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620807">
            <name>AttDefRule**</name>
            <content>
                <baseType ref="class_AttDefRule_74FA57D4542320FD1D0D7384DF1C1EA79C7850CA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1">
            <name>AttValueRule</name>
        </type>
        <type derived="true" id="type.4619594">
            <name>AttValueRule&amp;</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619593">
            <name>AttValueRule*</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620678">
            <name>AttValueRule*&amp;</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620677">
            <name>AttValueRule**</name>
            <content>
                <baseType ref="class_AttValueRule_C5C4B335D3615A52D5946835F81713856961E5E1"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633">
            <name>AttlistDeclRule</name>
        </type>
        <type derived="true" id="type.4619744">
            <name>AttlistDeclRule&amp;</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619743">
            <name>AttlistDeclRule*</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620803">
            <name>AttlistDeclRule*&amp;</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620802">
            <name>AttlistDeclRule**</name>
            <content>
                <baseType ref="class_AttlistDeclRule_3EE8B3596460E865EFF1EC32E0CCFB551EE99633"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6">
            <name>Attribute</name>
        </type>
        <type derived="true" id="type.4619558">
            <name>Attribute&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620463">
            <name>Attribute&amp;&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619557">
            <name>Attribute*</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620629">
            <name>Attribute*&amp;</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620628">
            <name>Attribute**</name>
            <content>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4">
            <name>AttributeRule</name>
        </type>
        <type derived="true" id="type.4619720">
            <name>AttributeRule&amp;</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619719">
            <name>AttributeRule*</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620783">
            <name>AttributeRule*&amp;</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620782">
            <name>AttributeRule**</name>
            <content>
                <baseType ref="class_AttributeRule_EE354A44CE0F99473C73EB8075BC07735429CDC4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A">
            <name>Attributes</name>
        </type>
        <type derived="true" id="type.4619567">
            <name>Attributes&amp;</name>
            <content>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619566">
            <name>Attributes*</name>
            <content>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4607818" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.2561">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.4607818"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620513" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.4620487"/>
            </content>
        </type>
        <type derived="true" id="type.4620515">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>&amp;</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620514">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620546">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620556">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620547">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620930">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**&amp;</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620931">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620929">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>***</name>
            <content>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="4606566"/>
            </content>
        </type>
        <type derived="true" id="type.2569">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="4606587"/>
            </content>
        </type>
        <type derived="true" id="type.2582">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545">
            <name>CDSectRule</name>
        </type>
        <type derived="true" id="type.4619636">
            <name>CDSectRule&amp;</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619635">
            <name>CDSectRule*</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620713">
            <name>CDSectRule*&amp;</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620712">
            <name>CDSectRule**</name>
            <content>
                <baseType ref="class_CDSectRule_7E08ECC2C1DFCAF953AF5DCDBAFBFE5B39D29545"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7">
            <name>CDataRule</name>
        </type>
        <type derived="true" id="type.4619642">
            <name>CDataRule&amp;</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619641">
            <name>CDataRule*</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620718">
            <name>CDataRule*&amp;</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620717">
            <name>CDataRule**</name>
            <content>
                <baseType ref="class_CDataRule_C8B82AC473DF261084CE6A2B14ADD5D7AFD958D7"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30">
            <name>CharDataRule</name>
        </type>
        <type derived="true" id="type.4619612">
            <name>CharDataRule&amp;</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619611">
            <name>CharDataRule*</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620693">
            <name>CharDataRule*&amp;</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620692">
            <name>CharDataRule**</name>
            <content>
                <baseType ref="class_CharDataRule_085F5623E1FC524C73DE6C935268CA241251DC30"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3058">
            <name>CharParser&amp;&amp;</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F">
            <name>CharRefRule</name>
        </type>
        <type derived="true" id="type.4619774">
            <name>CharRefRule&amp;</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619773">
            <name>CharRefRule*</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620828">
            <name>CharRefRule*&amp;</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620827">
            <name>CharRefRule**</name>
            <content>
                <baseType ref="class_CharRefRule_6A683AA7F002A998E9B313FDBD472AFE9257515F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3041">
            <name>CodeExpandingVisitor&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2940">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0">
            <name>CommentRule</name>
        </type>
        <type derived="true" id="type.4619618">
            <name>CommentRule&amp;</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619617">
            <name>CommentRule*</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620698">
            <name>CommentRule*&amp;</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620697">
            <name>CommentRule**</name>
            <content>
                <baseType ref="class_CommentRule_88DE8B4203A3797C8ADF3F274F96749AEECDACE0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2977">
            <name>Complement&amp;&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2466">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619516">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619515">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2465">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F">
            <name>ConditionalSectRule</name>
        </type>
        <type derived="true" id="type.4619762">
            <name>ConditionalSectRule&amp;</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619761">
            <name>ConditionalSectRule*</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620818">
            <name>ConditionalSectRule*&amp;</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620817">
            <name>ConditionalSectRule**</name>
            <content>
                <baseType ref="class_ConditionalSectRule_53C51DBF90472690A50FD18D0D5CB24442516D7F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3035">
            <name>Const&amp;&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2995">
            <name>Construct&amp;&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF">
            <name>ContentRule</name>
        </type>
        <type derived="true" id="type.4619732">
            <name>ContentRule&amp;</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619731">
            <name>ContentRule*</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620793">
            <name>ContentRule*&amp;</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620792">
            <name>ContentRule**</name>
            <content>
                <baseType ref="class_ContentRule_01C1164A69C637EF120A2BBE052EC6AE2B96E8FF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F">
            <name>Context</name>
        </type>
        <type id="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327">
            <name>Context</name>
        </type>
        <type id="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80">
            <name>Context</name>
        </type>
        <type id="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132">
            <name>Context</name>
        </type>
        <type id="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A">
            <name>Context</name>
        </type>
        <type id="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451">
            <name>Context</name>
        </type>
        <type id="class_Context_12735A043A5F853D886712F850F8D76536927E81">
            <name>Context</name>
        </type>
        <type id="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970">
            <name>Context</name>
        </type>
        <type id="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D">
            <name>Context</name>
        </type>
        <type id="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C">
            <name>Context</name>
        </type>
        <type id="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410">
            <name>Context</name>
        </type>
        <type id="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039">
            <name>Context</name>
        </type>
        <type id="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F">
            <name>Context</name>
        </type>
        <type id="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0">
            <name>Context</name>
        </type>
        <type id="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6">
            <name>Context</name>
        </type>
        <type id="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50">
            <name>Context</name>
        </type>
        <type id="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743">
            <name>Context</name>
        </type>
        <type id="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0">
            <name>Context</name>
        </type>
        <type id="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0">
            <name>Context</name>
        </type>
        <type id="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539">
            <name>Context</name>
        </type>
        <type id="class_Context_62FD01506832B2455CA068BF7108FE638E455449">
            <name>Context</name>
        </type>
        <type id="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87">
            <name>Context</name>
        </type>
        <type id="class_Context_6848C0399039250818165D3DA29F62669489F8DF">
            <name>Context</name>
        </type>
        <type id="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2">
            <name>Context</name>
        </type>
        <type id="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A">
            <name>Context</name>
        </type>
        <type id="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553">
            <name>Context</name>
        </type>
        <type id="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21">
            <name>Context</name>
        </type>
        <type id="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0">
            <name>Context</name>
        </type>
        <type id="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3">
            <name>Context</name>
        </type>
        <type id="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA">
            <name>Context</name>
        </type>
        <type id="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9">
            <name>Context</name>
        </type>
        <type id="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C">
            <name>Context</name>
        </type>
        <type id="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB">
            <name>Context</name>
        </type>
        <type id="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9">
            <name>Context</name>
        </type>
        <type id="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20">
            <name>Context</name>
        </type>
        <type id="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24">
            <name>Context</name>
        </type>
        <type id="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9">
            <name>Context</name>
        </type>
        <type id="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A">
            <name>Context</name>
        </type>
        <type id="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D">
            <name>Context</name>
        </type>
        <type id="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30">
            <name>Context</name>
        </type>
        <type id="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C">
            <name>Context</name>
        </type>
        <type id="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769">
            <name>Context</name>
        </type>
        <type id="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74">
            <name>Context</name>
        </type>
        <type id="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6">
            <name>Context</name>
        </type>
        <type id="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E">
            <name>Context</name>
        </type>
        <type id="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49">
            <name>Context</name>
        </type>
        <type id="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680">
            <name>Context</name>
        </type>
        <type id="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF">
            <name>Context</name>
        </type>
        <type derived="true" id="type.4619747">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619699">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619753">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619783">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619693">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619675">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619669">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619789">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619717">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619855">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619663">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619759">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619723">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619795">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619657">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619651">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619801">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619765">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619579">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619585">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619591">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619807">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619813">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619645">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619819">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619597">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619639">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619603">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619825">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619687">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619735">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619609">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619729">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619777">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619861">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619681">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619771">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619831">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619711">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619837">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619633">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619627">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619615">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619849">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619843">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619621">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619741">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619705">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619855">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619812">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619806">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619800">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619794">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619788">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619782">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619776">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619770">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619764">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619758">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619752">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619746">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619740">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619734">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619728">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619632">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619722">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619716">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619710">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619704">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619698">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619692">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619686">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619680">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619674">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619668">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619662">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619656">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619650">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619644">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619638">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619626">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619620">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619614">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619608">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619602">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619596">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619590">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619584">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619578">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619860">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619854">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619848">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619842">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619836">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619830">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619824">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619818">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620815">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620865">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620695">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620835">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620785">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620830">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620770">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620860">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620825">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620845">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620720">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620780">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620675">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620820">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620680">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620850">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620840">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620700">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620765">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620710">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620895">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620890">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620690">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620715">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620745">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620810">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620885">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620775">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620665">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620725">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620895">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620670">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620805">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620880">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620685">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620800">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620750">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620705">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620755">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620855">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620795">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620875">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620790">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620730">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620760">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620870">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620660">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620735">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620740">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620864">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_353AB67CBBE61A8DB8D86CED70575AEA5B6072F9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620724">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_50BBB0D86091E9CF5F5C6EC5C5E6B787DB99675E"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620829">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_61D985425EDF94D5236BEEE32968DA9328D7664F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620824">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_97091BE700057B5FB2C9B040AC630E17D18B76E6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620719">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D0B426996CBBC54A2C05CADA5C065CE47A8777B9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620859">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C7CEF09EED2D05C655006481D3E3CF5B18601A74"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620819">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_FC59C49868082A2615858709CAC9DCFDB212DFD3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620714">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_63BD385421769FA8EAF751C36B9F020189B2D95F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620739">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4EAEC7EBE2D7AC0F3B33C033D6CB695761FF6769"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620664">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_98F33489EC9E780E87D2355AB9C8496750B1C3E2"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620814">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_CA2711A142C739A7FBDF6D8FBD207514911248A9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620734">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_53404E1FB13E1B55FA68B205C98ABC28EF1A5FA6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620704">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_507B1CC93697A45C9B7FA9C3FA4152961D62DA30"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620669">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_6652360ACEC2F470E296D221BC7B39B6546A0327"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620709">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_7D0127ECCD95748E2144340F1C9A3607C179F680"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620684">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_69F04B1BAD1864EF4956EDC929717D8B25B1A132"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620729">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_CC4430F77930BE8290A883DEBEDB6C152EBFEC49"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620809">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_8B6BDA9FD8FEE65ACBDF9A189A832E0B607D8E8C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620804">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C2BE20376F9E9EFAA7CC4B62ED099EEECFB3DADB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620659">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9FC0D36D9C6EE03B21C8A9BCBC40B16A709E7970"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620799">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_12735A043A5F853D886712F850F8D76536927E81"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620769">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_E1796F4AB0AD9A6F2BA32BB2665ED7F7DD9CF2A0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620794">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ECFF17CB785E1159980C372DC61DEEC9DB79DC50"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620789">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_938E8AA60EBE77135FD89824461C0D5073BAB410"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620779">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_62FD01506832B2455CA068BF7108FE638E455449"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620839">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_7F150263C077241A2B5CC118C6CB3A84E4C73539"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620784">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A5E358867746DE6EFDF46A8C9794A8BD9965B63D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620854">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_33ACC4C37742B99E7E1BC28E05EDC55AA3BD5553"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620849">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_524D1C7ACE6CA3849265F8014F8B5017D97DFF21"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620834">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_6848C0399039250818165D3DA29F62669489F8DF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620774">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_9F41956F0ACC5D6002F8F42EB3970EC54155C743"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620844">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_985FE96EB466F9B6DDCAC11A4ADB3B9892D12FB0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620764">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C80070A6CFB5A6F476047436CAF1ED5D2CD8BB7A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620869">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4DEC03A9E6195A30CA908110FF9A5697712A081C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620699">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_0102EDD8F77D0F8A431AF2B58654EE240EC12CEF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620759">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_51451DC5F938A4160A3AC4951E1A60936BE6C451"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620874">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D9177563DA196BB22B9B81B8626FD7E99F3412A0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620754">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_D2FE942CB6BA0E0AF74CB33139EFBEDA3B8EC9BA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620749">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_ED3177170817C9FA963C7ED09B9894BBC7EA5C87"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620879">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_4B0E0BA0AECDC3F05BC61143B2E8A42D3C9CB1D0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620694">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_84C2EC2BCE26BE24E817A48091FB3D290EC58A80"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620894">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620884">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_541E1B589BDF06020A9A4793EBB7BC6F17EA3D5D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620889">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_B3D9D3FAB3722046991D5C7BA7BF9142D003A039"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620689">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C5E4E7CA8E1F0584468BC081BF060D0F2716DD20"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620894">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A86E4F1BEB1331C2D808E8EFDDF5460106BE5A9A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620744">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_36E710942B4BCFF4629B33C82DCF197C387E635C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620679">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_BDACA992A8C4C903228BECED17AE63706B795D24"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620674">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_2195A12EDAADB8C89F8DE52986EAA1F91FAE088A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4607028" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="4606721"/>
            </content>
        </type>
        <type derived="true" id="type.2673">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2688">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2695">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2654">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2657">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2666">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="4606717"/>
            </content>
        </type>
        <type id="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972">
            <name>DeclSepRule</name>
        </type>
        <type derived="true" id="type.4619678">
            <name>DeclSepRule&amp;</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619677">
            <name>DeclSepRule*</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620748">
            <name>DeclSepRule*&amp;</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620747">
            <name>DeclSepRule**</name>
            <content>
                <baseType ref="class_DeclSepRule_2EA7E3D7AEBE981FAD49F7B9FCDC50851994E972"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85">
            <name>DefaultDeclRule</name>
        </type>
        <type derived="true" id="type.4619756">
            <name>DefaultDeclRule&amp;</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619755">
            <name>DefaultDeclRule*</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620813">
            <name>DefaultDeclRule*&amp;</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620812">
            <name>DefaultDeclRule**</name>
            <content>
                <baseType ref="class_DefaultDeclRule_1B974E6B203DE9B53CAE9B8D2F37EDEA9B25FA85"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3013">
            <name>DeleteStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2959">
            <name>Deref&amp;&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3016">
            <name>DestroyStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9">
            <name>DocTypeDeclRule</name>
        </type>
        <type derived="true" id="type.4619672">
            <name>DocTypeDeclRule&amp;</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619671">
            <name>DocTypeDeclRule*</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620743">
            <name>DocTypeDeclRule*&amp;</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620742">
            <name>DocTypeDeclRule**</name>
            <content>
                <baseType ref="class_DocTypeDeclRule_404103763FC1F00BFA35ED8265536BD4207895C9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D">
            <name>DocumentRule</name>
        </type>
        <type derived="true" id="type.4619576">
            <name>DocumentRule&amp;</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619575">
            <name>DocumentRule*</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620663">
            <name>DocumentRule*&amp;</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620662">
            <name>DocumentRule**</name>
            <content>
                <baseType ref="class_DocumentRule_3005E7B1E04511D311AA75AC616B2F5E868CAD8D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619514">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2464">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619514">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2953">
            <name>DomObject&amp;&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619513">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2463">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619513">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917">
            <name>ETagRule</name>
        </type>
        <type derived="true" id="type.4619726">
            <name>ETagRule&amp;</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619725">
            <name>ETagRule*</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620788">
            <name>ETagRule*&amp;</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620787">
            <name>ETagRule**</name>
            <content>
                <baseType ref="class_ETagRule_7531FBAD24AEF7EE2F43855622031A4ED4378917"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346">
            <name>ElementDeclRule</name>
        </type>
        <type derived="true" id="type.4619738">
            <name>ElementDeclRule&amp;</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619737">
            <name>ElementDeclRule*</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620798">
            <name>ElementDeclRule*&amp;</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620797">
            <name>ElementDeclRule**</name>
            <content>
                <baseType ref="class_ElementDeclRule_599ABDB467CD5D06F212B1647D70AB7994638346"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE">
            <name>ElementRule</name>
        </type>
        <type derived="true" id="type.4619714">
            <name>ElementRule&amp;</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619713">
            <name>ElementRule*</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620778">
            <name>ElementRule*&amp;</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620777">
            <name>ElementRule**</name>
            <content>
                <baseType ref="class_ElementRule_4BEA9AD77F12C63D9D20953597E354F129E2D0BE"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB">
            <name>EncNameRule</name>
        </type>
        <type derived="true" id="type.4619852">
            <name>EncNameRule&amp;</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619851">
            <name>EncNameRule*</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620893">
            <name>EncNameRule*&amp;</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620892">
            <name>EncNameRule**</name>
            <content>
                <baseType ref="class_EncNameRule_1E0C71E51B54A798BE6FFB239F535B8548B07ACB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567">
            <name>EncodingDeclRule</name>
        </type>
        <type derived="true" id="type.4619846">
            <name>EncodingDeclRule&amp;</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619845">
            <name>EncodingDeclRule*</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620888">
            <name>EncodingDeclRule*&amp;</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620887">
            <name>EncodingDeclRule**</name>
            <content>
                <baseType ref="class_EncodingDeclRule_77B5B1C32402CFA9136EC172FE874D0EF4ED2567"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF">
            <name>Entity</name>
        </type>
        <type derived="true" id="type.4619870">
            <name>Entity&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619869">
            <name>Entity*</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620557">
            <name>Entity*&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620918">
            <name>Entity*&amp;&amp;</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620917">
            <name>Entity**</name>
            <content>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88">
            <name>EntityDeclRule</name>
        </type>
        <type derived="true" id="type.4619798">
            <name>EntityDeclRule&amp;</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619797">
            <name>EntityDeclRule*</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620848">
            <name>EntityDeclRule*&amp;</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620847">
            <name>EntityDeclRule**</name>
            <content>
                <baseType ref="class_EntityDeclRule_EA7BDA8BD5BD56DA908F32620EAF2E58E9445F88"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB">
            <name>EntityDefRule</name>
        </type>
        <type derived="true" id="type.4619816">
            <name>EntityDefRule&amp;</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619815">
            <name>EntityDefRule*</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620863">
            <name>EntityDefRule*&amp;</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620862">
            <name>EntityDefRule**</name>
            <content>
                <baseType ref="class_EntityDefRule_678796DE467406D45382F448E387436BB19A86DB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F">
            <name>EntityRefRule</name>
        </type>
        <type derived="true" id="type.4619786">
            <name>EntityRefRule&amp;</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619785">
            <name>EntityRefRule*</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620838">
            <name>EntityRefRule*&amp;</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620837">
            <name>EntityRefRule**</name>
            <content>
                <baseType ref="class_EntityRefRule_0A44132F06E92DE9C110BFB6B774E511ADDED93F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189">
            <name>EntityValueRule</name>
        </type>
        <type derived="true" id="type.4619588">
            <name>EntityValueRule&amp;</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619587">
            <name>EntityValueRule*</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620673">
            <name>EntityValueRule*&amp;</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620672">
            <name>EntityValueRule**</name>
            <content>
                <baseType ref="class_EntityValueRule_B8A7333936180B34CF6B332D93DA49B87AE24189"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4615075" specialization="true">
            <name>EqualTo&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_EqualTo_T_483B326DC1355EE905B9A0F4E9331F702788D28E"/>
                <argumentType ref="type.4607142"/>
            </content>
        </type>
        <type derived="true" id="type.3053">
            <name>ExpectationParser&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3019">
            <name>ExpressionStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561">
            <name>ExtParsedEntRule</name>
        </type>
        <type derived="true" id="type.4619840">
            <name>ExtParsedEntRule&amp;</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619839">
            <name>ExtParsedEntRule*</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620883">
            <name>ExtParsedEntRule*&amp;</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620882">
            <name>ExtParsedEntRule**</name>
            <content>
                <baseType ref="class_ExtParsedEntRule_4EB32B54266B1BB828DF0B2610C678E5616E1561"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5">
            <name>ExtSubsetDeclRule</name>
        </type>
        <type derived="true" id="type.4619702">
            <name>ExtSubsetDeclRule&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619701">
            <name>ExtSubsetDeclRule*</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620768">
            <name>ExtSubsetDeclRule*&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620767">
            <name>ExtSubsetDeclRule**</name>
            <content>
                <baseType ref="class_ExtSubsetDeclRule_55D18D498DAD965AD72541704737303644CC76D5"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8">
            <name>ExtSubsetRule</name>
        </type>
        <type derived="true" id="type.4619696">
            <name>ExtSubsetRule&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619695">
            <name>ExtSubsetRule*</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620763">
            <name>ExtSubsetRule*&amp;</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620762">
            <name>ExtSubsetRule**</name>
            <content>
                <baseType ref="class_ExtSubsetRule_948BEAB8CD573C16B1B91B5611717043A0D6C4E8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="4606475"/>
            </content>
        </type>
        <type derived="true" id="type.2519">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="4606471"/>
                <argumentType ref="4606472"/>
                <argumentType ref="4606473"/>
            </content>
        </type>
        <type derived="true" id="type.2515">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2516">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="4606477"/>
                <argumentType ref="type.4607387"/>
                <argumentType ref="type.4607389"/>
            </content>
        </type>
        <type derived="true" id="type.2521">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2518">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2523">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="4606475"/>
                <argumentType ref="type.4607308"/>
                <argumentType ref="type.4607309"/>
            </content>
        </type>
        <type derived="true" id="type.2520">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2517">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2522">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D">
            <name>GEDeclRule</name>
        </type>
        <type derived="true" id="type.4619804">
            <name>GEDeclRule&amp;</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619803">
            <name>GEDeclRule*</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620853">
            <name>GEDeclRule*&amp;</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620852">
            <name>GEDeclRule**</name>
            <content>
                <baseType ref="class_GEDeclRule_2169C1573083DB817286266DAA7F550F56D6F93D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3025">
            <name>GotoCaseStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3010">
            <name>GotoStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620481" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4619869"/>
                <argumentType ref="type.4615069"/>
                <argumentType ref="type.4615075"/>
            </content>
        </type>
        <type derived="true" id="type.4620483">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.4620481"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620482">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.4620481"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620950">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.4620481"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620949">
            <name>HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.4620481"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4615069" specialization="true">
            <name>Hasher&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Hasher_T_9E06FCD9B56B8B3B7E7F8286BE8179D3B1CB8325"/>
                <argumentType ref="type.4607142"/>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4606557"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="4606559"/>
                <argumentType ref="4606560"/>
            </content>
        </type>
        <type derived="true" id="type.2557">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4606586"/>
                <argumentType ref="4606587"/>
                <argumentType ref="4606588"/>
                <argumentType ref="4606589"/>
                <argumentType ref="4606590"/>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4606586"/>
                <argumentType ref="4606587"/>
                <argumentType ref="4606588"/>
                <argumentType ref="4606589"/>
                <argumentType ref="4606590"/>
            </content>
        </type>
        <type derived="true" id="type.2577">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620501" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4620487"/>
                <argumentType ref="type.4620491"/>
                <argumentType ref="type.4615069"/>
                <argumentType ref="type.4615075"/>
            </content>
        </type>
        <type derived="true" id="type.4620503">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620527">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620502">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620940">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620941">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620939">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.4620501"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4615383" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4615374"/>
                <argumentType ref="type.4615069"/>
                <argumentType ref="type.4615075"/>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="4606566"/>
                <argumentType ref="4606566"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="4606567"/>
                <argumentType ref="4606568"/>
            </content>
        </type>
        <type derived="true" id="type.2565">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620507" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4620487"/>
                <argumentType ref="type.4620489"/>
                <argumentType ref="type.4620488"/>
                <argumentType ref="type.4620501"/>
            </content>
        </type>
        <type derived="true" id="type.4620509">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.4620507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620942">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620507"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620508">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.4620507"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620521" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4620487"/>
                <argumentType ref="type.4620498"/>
                <argumentType ref="type.4620519"/>
                <argumentType ref="type.4620501"/>
            </content>
        </type>
        <type derived="true" id="type.4620523">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.4620521"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620955">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620521"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620522">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.4620521"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2833" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607144"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615383"/>
            </content>
        </type>
        <type id="type.4620246" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607144"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615383"/>
            </content>
        </type>
        <type derived="true" id="type.4620248">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.4620246"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2835">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.2833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2834">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.2833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620247">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.4620246"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620252" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607147"/>
                <argumentType ref="type.4607146"/>
                <argumentType ref="type.4615383"/>
            </content>
        </type>
        <type id="type.2839" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607147"/>
                <argumentType ref="type.4607146"/>
                <argumentType ref="type.4615383"/>
            </content>
        </type>
        <type id="type.4620252" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607147"/>
                <argumentType ref="type.4607146"/>
                <argumentType ref="type.4615383"/>
            </content>
        </type>
        <type derived="true" id="type.4620254">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.4620252"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2841">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.2839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620254">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.4620252"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620253">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.4620252"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2840">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.2839"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2999">
            <name>Identifier&amp;&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374">
            <name>IncludeSectRule</name>
        </type>
        <type derived="true" id="type.4619768">
            <name>IncludeSectRule&amp;</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619767">
            <name>IncludeSectRule*</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620823">
            <name>IncludeSectRule*&amp;</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620822">
            <name>IncludeSectRule**</name>
            <content>
                <baseType ref="class_IncludeSectRule_8596511DDC470DE5E82AA4BB775CC6FC89D36374"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C">
            <name>IntSubsetRule</name>
        </type>
        <type derived="true" id="type.4619684">
            <name>IntSubsetRule&amp;</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619683">
            <name>IntSubsetRule*</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620753">
            <name>IntSubsetRule*&amp;</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620752">
            <name>IntSubsetRule**</name>
            <content>
                <baseType ref="class_IntSubsetRule_59F9ACA5BEB5559548B75A5D1637F1F28E94045C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD">
            <name>InternalEntity</name>
        </type>
        <type derived="true" id="type.4619873">
            <name>InternalEntity&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3067">
            <name>InternalEntity&amp;&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619872">
            <name>InternalEntity*</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620958">
            <name>InternalEntity*&amp;</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620957">
            <name>InternalEntity**</name>
            <content>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2980">
            <name>Invoke&amp;&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3050">
            <name>KleeneStarParser&amp;&amp;</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="4606603"/>
            </content>
        </type>
        <type derived="true" id="type.2586">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2585">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607837" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4607819"/>
            </content>
        </type>
        <type derived="true" id="type.2560">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607837"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620531" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4620514"/>
            </content>
        </type>
        <type derived="true" id="type.4620533">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;</name>
            <content>
                <baseType ref="type.4620531"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620555">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620531"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620532">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>*</name>
            <content>
                <baseType ref="type.4620531"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4607990" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4607973"/>
            </content>
        </type>
        <type derived="true" id="type.2568">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608175" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4608156"/>
            </content>
        </type>
        <type derived="true" id="type.2581">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608175"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4609545" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.2713">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609545"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2897" specialization="true">
            <name>List&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4607143"/>
            </content>
        </type>
        <type id="type.4620571" specialization="true">
            <name>List&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4607143"/>
            </content>
        </type>
        <type derived="true" id="type.4620573">
            <name>List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.4620571"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2899">
            <name>List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.2897"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620591">
            <name>List&lt;String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620571"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2917">
            <name>List&lt;String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2897"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620572">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.4620571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2898">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.2897"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620572">
            <name>List&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.4620571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620442" specialization="true">
            <name>List&lt;System.Xml.Attribute></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
            </content>
        </type>
        <type derived="true" id="type.4620444">
            <name>List&lt;System.Xml.Attribute>&amp;</name>
            <content>
                <baseType ref="type.4620442"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620462">
            <name>List&lt;System.Xml.Attribute>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620442"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620443">
            <name>List&lt;System.Xml.Attribute>*</name>
            <content>
                <baseType ref="type.4620442"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="4606653"/>
            </content>
        </type>
        <type derived="true" id="type.2589">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2707">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2625">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620602" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.4620592"/>
            </content>
        </type>
        <type derived="true" id="type.4620604">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;</name>
            <content>
                <baseType ref="type.4620602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620622">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620602"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620603">
            <name>List&lt;UniquePtr&lt;System.Xml.Entity>>*</name>
            <content>
                <baseType ref="type.4620602"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3003">
            <name>Literal&amp;&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="4606632"/>
            </content>
        </type>
        <type derived="true" id="type.2613">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611883" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.2800">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611883"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3036">
            <name>LvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B">
            <name>MarkupDeclRule</name>
        </type>
        <type derived="true" id="type.4619690">
            <name>MarkupDeclRule&amp;</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619689">
            <name>MarkupDeclRule*</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620758">
            <name>MarkupDeclRule*&amp;</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620757">
            <name>MarkupDeclRule**</name>
            <content>
                <baseType ref="class_MarkupDeclRule_4485F2662C6646D1361CAAA6639E2427473B469B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA">
            <name>MiscRule</name>
        </type>
        <type derived="true" id="type.4619666">
            <name>MiscRule&amp;</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619665">
            <name>MiscRule*</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620738">
            <name>MiscRule*&amp;</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620737">
            <name>MiscRule**</name>
            <content>
                <baseType ref="class_MiscRule_3FB0583A7F56DEC766AB66EDEEEF11293571A0EA"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2610">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="4606632"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F">
            <name>NDataDeclRule</name>
        </type>
        <type derived="true" id="type.4619828">
            <name>NDataDeclRule&amp;</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619827">
            <name>NDataDeclRule*</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620873">
            <name>NDataDeclRule*&amp;</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620872">
            <name>NDataDeclRule**</name>
            <content>
                <baseType ref="class_NDataDeclRule_8675616D50DD9931132B12B454BF42E8F43E440F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116">
            <name>NameRule</name>
        </type>
        <type derived="true" id="type.4619582">
            <name>NameRule&amp;</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619581">
            <name>NameRule*</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620668">
            <name>NameRule*&amp;</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620667">
            <name>NameRule**</name>
            <content>
                <baseType ref="class_NameRule_CE90B625637B9D9C94864D2F98CE4861EA3BD116"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2998">
            <name>New&amp;&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2956">
            <name>Not&amp;&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627">
            <name>NotationDeclRule</name>
        </type>
        <type derived="true" id="type.4619858">
            <name>NotationDeclRule&amp;</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619857">
            <name>NotationDeclRule*</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620898">
            <name>NotationDeclRule*&amp;</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620897">
            <name>NotationDeclRule**</name>
            <content>
                <baseType ref="class_NotationDeclRule_D7D6E491491F689F742EAF7618A40AB3E239B627"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3044">
            <name>OptionalParser&amp;&amp;</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8">
            <name>PEDeclRule</name>
        </type>
        <type derived="true" id="type.4619810">
            <name>PEDeclRule&amp;</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619809">
            <name>PEDeclRule*</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620858">
            <name>PEDeclRule*&amp;</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620857">
            <name>PEDeclRule**</name>
            <content>
                <baseType ref="class_PEDeclRule_A8AF7F379BBBDF45D2A0E9C852640ED8CCB1D5A8"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3">
            <name>PEDefRule</name>
        </type>
        <type derived="true" id="type.4619822">
            <name>PEDefRule&amp;</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619821">
            <name>PEDefRule*</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620868">
            <name>PEDefRule*&amp;</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620867">
            <name>PEDefRule**</name>
            <content>
                <baseType ref="class_PEDefRule_34A5A92ED7F79DA3EF3A04792A66981C485233F3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B">
            <name>PEReferenceRule</name>
        </type>
        <type derived="true" id="type.4619792">
            <name>PEReferenceRule&amp;</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619791">
            <name>PEReferenceRule*</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620843">
            <name>PEReferenceRule*&amp;</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620842">
            <name>PEReferenceRule**</name>
            <content>
                <baseType ref="class_PEReferenceRule_DA75852BD09653FDD017ED58061CD59AD87FC97B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C">
            <name>PIRule</name>
        </type>
        <type derived="true" id="type.4619624">
            <name>PIRule&amp;</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619623">
            <name>PIRule*</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620703">
            <name>PIRule*&amp;</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620702">
            <name>PIRule**</name>
            <content>
                <baseType ref="class_PIRule_E25CFCEEDB4CFA816A51E6D06FAC09828707B04C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF">
            <name>PITargetRule</name>
        </type>
        <type derived="true" id="type.4619630">
            <name>PITargetRule&amp;</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619629">
            <name>PITargetRule*</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620708">
            <name>PITargetRule*&amp;</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620707">
            <name>PITargetRule**</name>
            <content>
                <baseType ref="class_PITargetRule_2D4A00C612CB0FB64187F2A122BDE8D3566386AF"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620528" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.4620507"/>
                <argumentType ref="type.4605930"/>
            </content>
        </type>
        <type derived="true" id="type.4620530">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.4620528"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620945">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620528"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620529">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.4620528"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620258" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.4620246"/>
                <argumentType ref="type.4605930"/>
            </content>
        </type>
        <type id="type.2845" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.2833"/>
                <argumentType ref="type.4605930"/>
            </content>
        </type>
        <type id="type.4620258" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.4620246"/>
                <argumentType ref="type.4605930"/>
            </content>
        </type>
        <type derived="true" id="type.4620260">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.4620258"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2847">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.2845"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620260">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.4620258"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620259">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.4620258"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2846">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.2845"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620487" specialization="true">
            <name>Pair&lt;String&lt;uchar>, Entity*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4619869"/>
            </content>
        </type>
        <type derived="true" id="type.4620489">
            <name>Pair&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <baseType ref="type.4620487"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620916">
            <name>Pair&lt;String&lt;uchar>, Entity*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620487"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620488">
            <name>Pair&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <baseType ref="type.4620487"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="4606643"/>
                <argumentType ref="4606644"/>
            </content>
        </type>
        <type derived="true" id="type.4619518">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2468">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619517">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2467">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619517">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3057">
            <name>ParsingData&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619520">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2470">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619519">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2469">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4614139">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3038">
            <name>Pointer&amp;&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3047">
            <name>PositiveParser&amp;&amp;</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2986">
            <name>PostfixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2983">
            <name>PostfixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2968">
            <name>PrefixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2965">
            <name>PrefixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB">
            <name>PrologRule</name>
        </type>
        <type derived="true" id="type.4619648">
            <name>PrologRule&amp;</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619647">
            <name>PrologRule*</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620723">
            <name>PrologRule*&amp;</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620722">
            <name>PrologRule**</name>
            <content>
                <baseType ref="class_PrologRule_D47116A82500D847534B40C65CEAE3B072E32ABB"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336">
            <name>PubidLiteralRule</name>
        </type>
        <type derived="true" id="type.4619606">
            <name>PubidLiteralRule&amp;</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619605">
            <name>PubidLiteralRule*</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620688">
            <name>PubidLiteralRule*&amp;</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620687">
            <name>PubidLiteralRule**</name>
            <content>
                <baseType ref="class_PubidLiteralRule_7A77C5917C77A60FFCC82A391E3925B966A36336"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4615802" specialization="true">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4613996"/>
                <argumentType ref="type.4615800"/>
                <argumentType ref="type.4615801"/>
            </content>
        </type>
        <type derived="true" id="type.2865">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615802"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610724" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606836"/>
                <argumentType ref="type.4610567"/>
                <argumentType ref="type.4610723"/>
            </content>
        </type>
        <type derived="true" id="type.2757">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610724"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611764" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606907"/>
                <argumentType ref="type.4611607"/>
                <argumentType ref="type.4611763"/>
            </content>
        </type>
        <type derived="true" id="type.2782">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611764"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611348" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606881"/>
                <argumentType ref="type.4611191"/>
                <argumentType ref="type.4611347"/>
            </content>
        </type>
        <type derived="true" id="type.2772">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611348"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611556" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606894"/>
                <argumentType ref="type.4611399"/>
                <argumentType ref="type.4611555"/>
            </content>
        </type>
        <type derived="true" id="type.2777">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611556"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610087" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606806"/>
                <argumentType ref="type.4609916"/>
                <argumentType ref="type.4610086"/>
            </content>
        </type>
        <type derived="true" id="type.2742">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610087"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610305" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606816"/>
                <argumentType ref="type.4610148"/>
                <argumentType ref="type.4610304"/>
            </content>
        </type>
        <type derived="true" id="type.2747">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610305"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615344" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615311"/>
                <argumentType ref="type.4615342"/>
                <argumentType ref="type.4615343"/>
            </content>
        </type>
        <type derived="true" id="type.2832">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615344"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615335" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615311"/>
                <argumentType ref="type.4615333"/>
                <argumentType ref="type.4615334"/>
            </content>
        </type>
        <type derived="true" id="type.2831">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615335"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607932" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607898"/>
                <argumentType ref="type.4607930"/>
                <argumentType ref="type.4607931"/>
            </content>
        </type>
        <type id="type.4607854" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607819"/>
                <argumentType ref="type.4607852"/>
                <argumentType ref="type.4607853"/>
            </content>
        </type>
        <type id="type.4607932" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607898"/>
                <argumentType ref="type.4607930"/>
                <argumentType ref="type.4607931"/>
            </content>
        </type>
        <type derived="true" id="type.2564">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607932"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2559">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607854"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607923" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607898"/>
                <argumentType ref="type.4607921"/>
                <argumentType ref="type.4607922"/>
            </content>
        </type>
        <type id="type.4607845" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607819"/>
                <argumentType ref="type.4607843"/>
                <argumentType ref="type.4607844"/>
            </content>
        </type>
        <type id="type.4607923" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607898"/>
                <argumentType ref="type.4607921"/>
                <argumentType ref="type.4607922"/>
            </content>
        </type>
        <type derived="true" id="type.2563">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607923"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2558">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607845"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610701" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610667"/>
                <argumentType ref="type.4610699"/>
                <argumentType ref="type.4610700"/>
            </content>
        </type>
        <type derived="true" id="type.2756">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610701"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610692" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610667"/>
                <argumentType ref="type.4610690"/>
                <argumentType ref="type.4610691"/>
            </content>
        </type>
        <type derived="true" id="type.2755">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610692"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611741" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611707"/>
                <argumentType ref="type.4611739"/>
                <argumentType ref="type.4611740"/>
            </content>
        </type>
        <type derived="true" id="type.2781">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611741"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611732" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611707"/>
                <argumentType ref="type.4611730"/>
                <argumentType ref="type.4611731"/>
            </content>
        </type>
        <type derived="true" id="type.2780">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611732"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611325" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611291"/>
                <argumentType ref="type.4611323"/>
                <argumentType ref="type.4611324"/>
            </content>
        </type>
        <type derived="true" id="type.2771">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611325"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611316" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611291"/>
                <argumentType ref="type.4611314"/>
                <argumentType ref="type.4611315"/>
            </content>
        </type>
        <type derived="true" id="type.2770">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611316"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611533" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611499"/>
                <argumentType ref="type.4611531"/>
                <argumentType ref="type.4611532"/>
            </content>
        </type>
        <type derived="true" id="type.2776">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611533"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611524" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611499"/>
                <argumentType ref="type.4611522"/>
                <argumentType ref="type.4611523"/>
            </content>
        </type>
        <type derived="true" id="type.2775">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611524"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610071" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610037"/>
                <argumentType ref="type.4610069"/>
                <argumentType ref="type.4610070"/>
            </content>
        </type>
        <type derived="true" id="type.2741">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610071"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610062" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610037"/>
                <argumentType ref="type.4610060"/>
                <argumentType ref="type.4610061"/>
            </content>
        </type>
        <type derived="true" id="type.2740">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610062"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610282" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610248"/>
                <argumentType ref="type.4610280"/>
                <argumentType ref="type.4610281"/>
            </content>
        </type>
        <type derived="true" id="type.2746">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610282"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610273" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610248"/>
                <argumentType ref="type.4610271"/>
                <argumentType ref="type.4610272"/>
            </content>
        </type>
        <type derived="true" id="type.2745">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610273"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610493" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610459"/>
                <argumentType ref="type.4610491"/>
                <argumentType ref="type.4610492"/>
            </content>
        </type>
        <type derived="true" id="type.2751">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610493"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610484" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610459"/>
                <argumentType ref="type.4610482"/>
                <argumentType ref="type.4610483"/>
            </content>
        </type>
        <type derived="true" id="type.2750">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611117" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611083"/>
                <argumentType ref="type.4611115"/>
                <argumentType ref="type.4611116"/>
            </content>
        </type>
        <type derived="true" id="type.2766">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611117"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611108" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611083"/>
                <argumentType ref="type.4611106"/>
                <argumentType ref="type.4611107"/>
            </content>
        </type>
        <type derived="true" id="type.2765">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611108"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610909" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610875"/>
                <argumentType ref="type.4610907"/>
                <argumentType ref="type.4610908"/>
            </content>
        </type>
        <type derived="true" id="type.2761">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610909"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610900" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610875"/>
                <argumentType ref="type.4610898"/>
                <argumentType ref="type.4610899"/>
            </content>
        </type>
        <type derived="true" id="type.2760">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610900"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620548" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4620514"/>
                <argumentType ref="type.4620546"/>
                <argumentType ref="type.4620547"/>
            </content>
        </type>
        <type derived="true" id="type.4620550">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <baseType ref="type.4620548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2896">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620548"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620549">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <baseType ref="type.4620548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620539" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4620514"/>
                <argumentType ref="type.4620537"/>
                <argumentType ref="type.4620538"/>
            </content>
        </type>
        <type derived="true" id="type.4620541">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <baseType ref="type.4620539"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2895">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620539"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620540">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <baseType ref="type.4620539"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4615590" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615556"/>
                <argumentType ref="type.4615588"/>
                <argumentType ref="type.4615589"/>
            </content>
        </type>
        <type derived="true" id="type.2856">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615590"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615581" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615556"/>
                <argumentType ref="type.4615579"/>
                <argumentType ref="type.4615580"/>
            </content>
        </type>
        <type derived="true" id="type.2855">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615581"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615666" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615632"/>
                <argumentType ref="type.4615664"/>
                <argumentType ref="type.4615665"/>
            </content>
        </type>
        <type derived="true" id="type.2858">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615666"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615657" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615632"/>
                <argumentType ref="type.4615655"/>
                <argumentType ref="type.4615656"/>
            </content>
        </type>
        <type derived="true" id="type.2857">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615657"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615913" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615879"/>
                <argumentType ref="type.4615911"/>
                <argumentType ref="type.4615912"/>
            </content>
        </type>
        <type derived="true" id="type.2868">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615913"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615904" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615879"/>
                <argumentType ref="type.4615902"/>
                <argumentType ref="type.4615903"/>
            </content>
        </type>
        <type derived="true" id="type.2867">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615904"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615156" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615122"/>
                <argumentType ref="type.4615154"/>
                <argumentType ref="type.4615155"/>
            </content>
        </type>
        <type derived="true" id="type.2827">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615156"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615147" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615122"/>
                <argumentType ref="type.4615145"/>
                <argumentType ref="type.4615146"/>
            </content>
        </type>
        <type derived="true" id="type.2826">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615147"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610625" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610591"/>
                <argumentType ref="type.4610623"/>
                <argumentType ref="type.4610624"/>
            </content>
        </type>
        <type derived="true" id="type.2754">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610625"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610616" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610591"/>
                <argumentType ref="type.4610614"/>
                <argumentType ref="type.4610615"/>
            </content>
        </type>
        <type derived="true" id="type.2753">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610616"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611665" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611631"/>
                <argumentType ref="type.4611663"/>
                <argumentType ref="type.4611664"/>
            </content>
        </type>
        <type derived="true" id="type.2779">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611665"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611656" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611631"/>
                <argumentType ref="type.4611654"/>
                <argumentType ref="type.4611655"/>
            </content>
        </type>
        <type derived="true" id="type.2778">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611656"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611249" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611215"/>
                <argumentType ref="type.4611247"/>
                <argumentType ref="type.4611248"/>
            </content>
        </type>
        <type derived="true" id="type.2769">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611249"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611240" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611215"/>
                <argumentType ref="type.4611238"/>
                <argumentType ref="type.4611239"/>
            </content>
        </type>
        <type derived="true" id="type.2768">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611240"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611457" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611423"/>
                <argumentType ref="type.4611455"/>
                <argumentType ref="type.4611456"/>
            </content>
        </type>
        <type derived="true" id="type.2774">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611457"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611448" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611423"/>
                <argumentType ref="type.4611446"/>
                <argumentType ref="type.4611447"/>
            </content>
        </type>
        <type derived="true" id="type.2773">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611448"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4609974" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4609940"/>
                <argumentType ref="type.4609972"/>
                <argumentType ref="type.4609973"/>
            </content>
        </type>
        <type derived="true" id="type.2739">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609974"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4609965" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4609940"/>
                <argumentType ref="type.4609963"/>
                <argumentType ref="type.4609964"/>
            </content>
        </type>
        <type derived="true" id="type.2738">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609965"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610206" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610172"/>
                <argumentType ref="type.4610204"/>
                <argumentType ref="type.4610205"/>
            </content>
        </type>
        <type derived="true" id="type.2744">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610206"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610197" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610172"/>
                <argumentType ref="type.4610195"/>
                <argumentType ref="type.4610196"/>
            </content>
        </type>
        <type derived="true" id="type.2743">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610197"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610417" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610383"/>
                <argumentType ref="type.4610415"/>
                <argumentType ref="type.4610416"/>
            </content>
        </type>
        <type derived="true" id="type.2749">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610417"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610408" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610383"/>
                <argumentType ref="type.4610406"/>
                <argumentType ref="type.4610407"/>
            </content>
        </type>
        <type derived="true" id="type.2748">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610408"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611041" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611007"/>
                <argumentType ref="type.4611039"/>
                <argumentType ref="type.4611040"/>
            </content>
        </type>
        <type derived="true" id="type.2764">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611041"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611032" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611007"/>
                <argumentType ref="type.4611030"/>
                <argumentType ref="type.4611031"/>
            </content>
        </type>
        <type derived="true" id="type.2763">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611032"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610833" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610799"/>
                <argumentType ref="type.4610831"/>
                <argumentType ref="type.4610832"/>
            </content>
        </type>
        <type derived="true" id="type.2759">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610833"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610824" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4610799"/>
                <argumentType ref="type.4610822"/>
                <argumentType ref="type.4610823"/>
            </content>
        </type>
        <type derived="true" id="type.2758">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610824"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615428" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615396"/>
                <argumentType ref="type.4615426"/>
                <argumentType ref="type.4615427"/>
            </content>
        </type>
        <type derived="true" id="type.2849">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615428"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615419" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615396"/>
                <argumentType ref="type.4615417"/>
                <argumentType ref="type.4615418"/>
            </content>
        </type>
        <type derived="true" id="type.2848">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615419"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608007" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607973"/>
                <argumentType ref="type.4608005"/>
                <argumentType ref="type.4608006"/>
            </content>
        </type>
        <type id="type.4608081" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4608047"/>
                <argumentType ref="type.4608079"/>
                <argumentType ref="type.4608080"/>
            </content>
        </type>
        <type id="type.4608007" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607973"/>
                <argumentType ref="type.4608005"/>
                <argumentType ref="type.4608006"/>
            </content>
        </type>
        <type derived="true" id="type.2567">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608007"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2571">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608081"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608072" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4608047"/>
                <argumentType ref="type.4608070"/>
                <argumentType ref="type.4608071"/>
            </content>
        </type>
        <type id="type.4607998" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607973"/>
                <argumentType ref="type.4607996"/>
                <argumentType ref="type.4607997"/>
            </content>
        </type>
        <type id="type.4608072" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4608047"/>
                <argumentType ref="type.4608070"/>
                <argumentType ref="type.4608071"/>
            </content>
        </type>
        <type derived="true" id="type.2570">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608072"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2566">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607998"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608192" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4608156"/>
                <argumentType ref="type.4608190"/>
                <argumentType ref="type.4608191"/>
            </content>
        </type>
        <type derived="true" id="type.2580">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608192"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608183" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4608156"/>
                <argumentType ref="type.4608181"/>
                <argumentType ref="type.4608182"/>
            </content>
        </type>
        <type derived="true" id="type.2579">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608183"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606758"/>
                <argumentType ref="type.4609582"/>
                <argumentType ref="type.4609583"/>
            </content>
        </type>
        <type derived="true" id="type.2727">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2715">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2731">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2735">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2709">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2719">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2723">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606758"/>
                <argumentType ref="type.4609572"/>
                <argumentType ref="type.4609573"/>
            </content>
        </type>
        <type derived="true" id="type.2708">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2734">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2726">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2730">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2714">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2722">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2718">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610516" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606826"/>
                <argumentType ref="type.4610359"/>
                <argumentType ref="type.4610515"/>
            </content>
        </type>
        <type derived="true" id="type.2752">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610516"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615693" specialization="true">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4614101"/>
                <argumentType ref="type.4615608"/>
                <argumentType ref="type.4615689"/>
            </content>
        </type>
        <type derived="true" id="type.2859">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615693"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615828" specialization="true">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4614109"/>
                <argumentType ref="type.4615826"/>
                <argumentType ref="type.4615827"/>
            </content>
        </type>
        <type derived="true" id="type.2866">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615828"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611133" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606868"/>
                <argumentType ref="type.4610983"/>
                <argumentType ref="type.4611132"/>
            </content>
        </type>
        <type derived="true" id="type.2767">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611133"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615241" specialization="true">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4614340"/>
                <argumentType ref="type.4615239"/>
                <argumentType ref="type.4615240"/>
            </content>
        </type>
        <type derived="true" id="type.2830">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615241"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4610932" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4606849"/>
                <argumentType ref="type.4610775"/>
                <argumentType ref="type.4610931"/>
            </content>
        </type>
        <type derived="true" id="type.2762">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4610932"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4609605" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609568"/>
                <argumentType ref="type.4609567"/>
            </content>
        </type>
        <type id="type.4609793" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609759"/>
                <argumentType ref="type.4609758"/>
            </content>
        </type>
        <type id="type.4609605" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609568"/>
                <argumentType ref="type.4609567"/>
            </content>
        </type>
        <type id="type.4609558" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609521"/>
                <argumentType ref="type.4609520"/>
            </content>
        </type>
        <type id="type.4609840" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609803"/>
                <argumentType ref="type.4609802"/>
            </content>
        </type>
        <type id="type.4609699" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609662"/>
                <argumentType ref="type.4609661"/>
            </content>
        </type>
        <type id="type.4609652" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609615"/>
                <argumentType ref="type.4609614"/>
            </content>
        </type>
        <type id="type.4609746" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609709"/>
                <argumentType ref="type.4609708"/>
            </content>
        </type>
        <type derived="true" id="type.2729">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609746"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2737">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609840"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2721">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609652"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2733">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609793"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2717">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609605"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2712">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609558"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2725">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609699"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4609645" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609618"/>
                <argumentType ref="type.4609617"/>
            </content>
        </type>
        <type id="type.4609833" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609806"/>
                <argumentType ref="type.4609805"/>
            </content>
        </type>
        <type id="type.4609551" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609524"/>
                <argumentType ref="type.4609523"/>
            </content>
        </type>
        <type id="type.4609692" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609665"/>
                <argumentType ref="type.4609664"/>
            </content>
        </type>
        <type id="type.4609739" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609712"/>
                <argumentType ref="type.4609711"/>
            </content>
        </type>
        <type id="type.4609551" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609524"/>
                <argumentType ref="type.4609523"/>
            </content>
        </type>
        <type id="type.4609598" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609571"/>
                <argumentType ref="type.4609570"/>
            </content>
        </type>
        <type id="type.4609786" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4609762"/>
                <argumentType ref="type.4609761"/>
            </content>
        </type>
        <type derived="true" id="type.2711">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609551"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2720">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609645"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2728">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609739"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2724">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609692"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2736">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609833"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2732">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609786"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2716">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4609598"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607089" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607054"/>
                <argumentType ref="type.4607056"/>
                <argumentType ref="type.4607055"/>
            </content>
        </type>
        <type derived="true" id="type.2481">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607089"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607082" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607054"/>
                <argumentType ref="type.4607059"/>
                <argumentType ref="type.4607058"/>
            </content>
        </type>
        <type derived="true" id="type.2480">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607082"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620584" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615986"/>
                <argumentType ref="type.4616098"/>
            </content>
        </type>
        <type id="type.2910" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615986"/>
                <argumentType ref="type.4616098"/>
            </content>
        </type>
        <type id="type.4620584" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615986"/>
                <argumentType ref="type.4616098"/>
            </content>
        </type>
        <type derived="true" id="type.4620586">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.4620584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2912">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.2910"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620586">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.4620584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620590">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620584"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2916">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2910"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620585">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.4620584"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2911">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.2910"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620585">
            <name>RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.4620584"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2903" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615931"/>
                <argumentType ref="type.4616096"/>
            </content>
        </type>
        <type id="type.4620577" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607143"/>
                <argumentType ref="type.4615931"/>
                <argumentType ref="type.4616096"/>
            </content>
        </type>
        <type derived="true" id="type.2905">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.2903"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620579">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <baseType ref="type.4620577"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2909">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.2903"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2918">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620577"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620578">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.4620577"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2904">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.2903"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620578">
            <name>RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <baseType ref="type.4620577"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4607179" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607144"/>
                <argumentType ref="type.4607143"/>
            </content>
        </type>
        <type derived="true" id="type.2500">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607179"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607172" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4607147"/>
                <argumentType ref="type.4607146"/>
            </content>
        </type>
        <type derived="true" id="type.2499">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607172"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607134" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607097"/>
                <argumentType ref="type.4607099"/>
                <argumentType ref="type.4607098"/>
            </content>
        </type>
        <type derived="true" id="type.2490">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607134"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607127" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4607097"/>
                <argumentType ref="type.4607102"/>
                <argumentType ref="type.4607101"/>
            </content>
        </type>
        <type derived="true" id="type.2489">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607127"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615778" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <argumentType ref="type.4614332"/>
                <argumentType ref="type.4614331"/>
            </content>
        </type>
        <type derived="true" id="type.2864">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615778"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615764" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.4614167"/>
                <argumentType ref="type.4614166"/>
            </content>
        </type>
        <type derived="true" id="type.2863">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615764"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615757" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.4614170"/>
                <argumentType ref="type.4614169"/>
            </content>
        </type>
        <type derived="true" id="type.2862">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615757"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615515" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.4615497"/>
                <argumentType ref="type.4615496"/>
            </content>
        </type>
        <type derived="true" id="type.2854">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615515"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615508" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.4615505"/>
                <argumentType ref="type.4615506"/>
            </content>
        </type>
        <type derived="true" id="type.2853">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615508"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611794" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.4606920"/>
                <argumentType ref="type.4606919"/>
            </content>
        </type>
        <type derived="true" id="type.2784">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611794"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611787" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.4606923"/>
                <argumentType ref="type.4606922"/>
            </content>
        </type>
        <type derived="true" id="type.2783">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611787"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620455" specialization="true">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <argumentType ref="type.4619558"/>
                <argumentType ref="type.4619557"/>
            </content>
        </type>
        <type derived="true" id="type.4620457">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;</name>
            <content>
                <baseType ref="type.4620455"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620461">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620455"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620456">
            <name>RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>*</name>
            <content>
                <baseType ref="type.4620455"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620448" specialization="true">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <argumentType ref="type.4619561"/>
                <argumentType ref="type.4619560"/>
            </content>
        </type>
        <type derived="true" id="type.4620450">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;</name>
            <content>
                <baseType ref="type.4620448"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620454">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620448"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620449">
            <name>RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>*</name>
            <content>
                <baseType ref="type.4620448"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606670"/>
                <argumentType ref="4606671"/>
                <argumentType ref="4606672"/>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606664"/>
                <argumentType ref="4606665"/>
                <argumentType ref="4606666"/>
            </content>
        </type>
        <type derived="true" id="type.2629">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2632">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2631">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2628">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2630">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2626">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2627">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606653"/>
                <argumentType ref="type.4608640"/>
                <argumentType ref="type.4608641"/>
            </content>
        </type>
        <type derived="true" id="type.2594">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2706">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2588">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2624">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2592">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="4606653"/>
                <argumentType ref="type.4608623"/>
                <argumentType ref="type.4608631"/>
            </content>
        </type>
        <type derived="true" id="type.2623">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2591">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2593">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2587">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2705">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4613811" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4613795"/>
                <argumentType ref="type.4613800"/>
                <argumentType ref="type.4613799"/>
            </content>
        </type>
        <type derived="true" id="type.2815">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613811"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4613871" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4613855"/>
                <argumentType ref="type.4613860"/>
                <argumentType ref="type.4613859"/>
            </content>
        </type>
        <type derived="true" id="type.2816">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613871"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4613710" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4613670"/>
                <argumentType ref="type.4613675"/>
                <argumentType ref="type.4613674"/>
            </content>
        </type>
        <type derived="true" id="type.2813">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613710"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4613762" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4613749"/>
                <argumentType ref="type.4613754"/>
                <argumentType ref="type.4613753"/>
            </content>
        </type>
        <type derived="true" id="type.2814">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613762"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615481" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615459"/>
                <argumentType ref="type.4615464"/>
                <argumentType ref="type.4615463"/>
            </content>
        </type>
        <type derived="true" id="type.2852">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615481"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615054" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615032"/>
                <argumentType ref="type.4615037"/>
                <argumentType ref="type.4615036"/>
            </content>
        </type>
        <type derived="true" id="type.2825">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615054"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615739" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615719"/>
                <argumentType ref="type.4615721"/>
                <argumentType ref="type.4615720"/>
            </content>
        </type>
        <type derived="true" id="type.2861">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615739"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615732" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615719"/>
                <argumentType ref="type.4615724"/>
                <argumentType ref="type.4615723"/>
            </content>
        </type>
        <type derived="true" id="type.2860">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615732"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615024" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615004"/>
                <argumentType ref="type.4615006"/>
                <argumentType ref="type.4615005"/>
            </content>
        </type>
        <type derived="true" id="type.2824">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615024"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615017" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4615004"/>
                <argumentType ref="type.4615009"/>
                <argumentType ref="type.4615008"/>
            </content>
        </type>
        <type derived="true" id="type.2823">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615017"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611823" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611803"/>
                <argumentType ref="type.4611805"/>
                <argumentType ref="type.4611804"/>
            </content>
        </type>
        <type derived="true" id="type.2786">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611823"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611816" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611803"/>
                <argumentType ref="type.4611808"/>
                <argumentType ref="type.4611807"/>
            </content>
        </type>
        <type derived="true" id="type.2785">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611816"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611919" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611899"/>
                <argumentType ref="type.4611901"/>
                <argumentType ref="type.4611900"/>
            </content>
        </type>
        <type derived="true" id="type.2802">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611919"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611912" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611899"/>
                <argumentType ref="type.4611904"/>
                <argumentType ref="type.4611903"/>
            </content>
        </type>
        <type derived="true" id="type.2801">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611912"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611851" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611831"/>
                <argumentType ref="type.4611833"/>
                <argumentType ref="type.4611832"/>
            </content>
        </type>
        <type derived="true" id="type.2788">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611851"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611844" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611831"/>
                <argumentType ref="type.4611836"/>
                <argumentType ref="type.4611835"/>
            </content>
        </type>
        <type derived="true" id="type.2787">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611844"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611954" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611934"/>
                <argumentType ref="type.4611936"/>
                <argumentType ref="type.4611935"/>
            </content>
        </type>
        <type derived="true" id="type.2804">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611954"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4611947" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4611934"/>
                <argumentType ref="type.4611939"/>
                <argumentType ref="type.4611938"/>
            </content>
        </type>
        <type derived="true" id="type.2803">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611947"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620615" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4620592"/>
                <argumentType ref="type.4620594"/>
                <argumentType ref="type.4620593"/>
            </content>
        </type>
        <type derived="true" id="type.4620617">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <baseType ref="type.4620615"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2920">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620615"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620616">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <baseType ref="type.4620615"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620608" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4620592"/>
                <argumentType ref="type.4620597"/>
                <argumentType ref="type.4620596"/>
            </content>
        </type>
        <type derived="true" id="type.4620610">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <baseType ref="type.4620608"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2919">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620608"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620609">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <baseType ref="type.4620608"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4608541" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type id="type.4620014" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type id="type.4614656" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type id="type.2602" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type id="type.4614656" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type id="type.4613429" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605932"/>
                <argumentType ref="type.4605953"/>
                <argumentType ref="type.4605952"/>
            </content>
        </type>
        <type derived="true" id="type.4620016">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.4620014"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2604">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.2602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2893">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620014"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2821">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614656"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2608">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2602"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2811">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613429"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2609">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608541"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620015">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.4620014"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2603">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.2602"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620015">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.4620014"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4614527" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605941"/>
                <argumentType ref="type.4605980"/>
                <argumentType ref="type.4605979"/>
            </content>
        </type>
        <type id="type.4613300" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605941"/>
                <argumentType ref="type.4605980"/>
                <argumentType ref="type.4605979"/>
            </content>
        </type>
        <type id="type.4619885" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605941"/>
                <argumentType ref="type.4605980"/>
                <argumentType ref="type.4605979"/>
            </content>
        </type>
        <type id="type.2473" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605941"/>
                <argumentType ref="type.4605980"/>
                <argumentType ref="type.4605979"/>
            </content>
        </type>
        <type derived="true" id="type.4619887">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.4619885"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2475">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.2473"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619887">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.4619885"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2817">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614527"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2807">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613300"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2889">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4619885"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2479">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2473"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619886">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.4619885"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2474">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.2473"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4613319" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type id="type.4614546" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type id="type.4619904" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type id="type.2492" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type id="type.4619904" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type id="type.4607158" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605943"/>
                <argumentType ref="type.4605986"/>
                <argumentType ref="type.4605985"/>
            </content>
        </type>
        <type derived="true" id="type.2494">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.2492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619906">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.4619904"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2501">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607158"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2498">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2819">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614546"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2891">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4619904"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2809">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613319"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619905">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.4619904"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2493">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.2492"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619905">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.4619904"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4611868" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4611865"/>
                <argumentType ref="type.4611866"/>
            </content>
        </type>
        <type derived="true" id="type.2789">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611868"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4614845" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4605965"/>
                <argumentType ref="type.4605964"/>
            </content>
        </type>
        <type id="type.4620203" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4605965"/>
                <argumentType ref="type.4605964"/>
            </content>
        </type>
        <type id="type.4613618" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4605965"/>
                <argumentType ref="type.4605964"/>
            </content>
        </type>
        <type id="type.2790" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4605965"/>
                <argumentType ref="type.4605964"/>
            </content>
        </type>
        <type id="type.4611875" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605936"/>
                <argumentType ref="type.4605965"/>
                <argumentType ref="type.4605964"/>
            </content>
        </type>
        <type derived="true" id="type.2792">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.2790"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620205">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.4620203"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2812">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613618"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2797">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4611875"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2796">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2790"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2894">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620203"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2822">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614845"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2791">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.2790"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620204">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.4620203"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4607201" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4607198"/>
                <argumentType ref="type.4607199"/>
            </content>
        </type>
        <type derived="true" id="type.2502">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607201"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4619915" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4605971"/>
                <argumentType ref="type.4605970"/>
            </content>
        </type>
        <type id="type.4607208" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4605971"/>
                <argumentType ref="type.4605970"/>
            </content>
        </type>
        <type id="type.2503" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4605971"/>
                <argumentType ref="type.4605970"/>
            </content>
        </type>
        <type id="type.4613330" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4605971"/>
                <argumentType ref="type.4605970"/>
            </content>
        </type>
        <type id="type.4614557" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605938"/>
                <argumentType ref="type.4605971"/>
                <argumentType ref="type.4605970"/>
            </content>
        </type>
        <type derived="true" id="type.2505">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.2503"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619917">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.4619915"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2892">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4619915"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2510">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607208"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2820">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614557"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2810">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613330"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2509">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2503"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619916">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.4619915"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2504">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.2503"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2482" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type id="type.4613309" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type id="type.4607113" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type id="type.4619894" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type id="type.4614536" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type id="type.4619894" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.4605942"/>
                <argumentType ref="type.4605983"/>
                <argumentType ref="type.4605982"/>
            </content>
        </type>
        <type derived="true" id="type.2484">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.2482"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619896">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.4619894"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2488">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2482"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2808">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4613309"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2491">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607113"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2818">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4614536"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2890">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4619894"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619895">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.4619894"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2483">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.2482"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619895">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.4619894"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="4606614"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="4606616"/>
            </content>
        </type>
        <type derived="true" id="type.2599">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="4606693"/>
                <argumentType ref="4606694"/>
                <argumentType ref="4606695"/>
                <argumentType ref="4606696"/>
            </content>
        </type>
        <type derived="true" id="type.2641">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="4606699"/>
                <argumentType ref="4606699"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="4606700"/>
            </content>
        </type>
        <type derived="true" id="type.2646">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2462">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619512">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2939">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2461">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619511">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4608505" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.4608466"/>
                <argumentType ref="type.4608465"/>
            </content>
        </type>
        <type derived="true" id="type.2598">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608505"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608487" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.4608476"/>
                <argumentType ref="type.4608485"/>
            </content>
        </type>
        <type derived="true" id="type.2597">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608487"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="4606686"/>
                <argumentType ref="4606687"/>
                <argumentType ref="4606688"/>
            </content>
        </type>
        <type derived="true" id="type.2638">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2637">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="4606703"/>
                <argumentType ref="type.4608931"/>
                <argumentType ref="type.4608933"/>
            </content>
        </type>
        <type derived="true" id="type.2645">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2651">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2649">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="4606699"/>
                <argumentType ref="type.4608794"/>
                <argumentType ref="type.4608803"/>
            </content>
        </type>
        <type derived="true" id="type.2650">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2648">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2644">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="4606694"/>
                <argumentType ref="type.4608758"/>
                <argumentType ref="type.4608760"/>
            </content>
        </type>
        <type derived="true" id="type.2640">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="4606694"/>
                <argumentType ref="type.4608743"/>
                <argumentType ref="type.4608744"/>
            </content>
        </type>
        <type derived="true" id="type.2639">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710">
            <name>ReferenceRule</name>
        </type>
        <type derived="true" id="type.4619780">
            <name>ReferenceRule&amp;</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619779">
            <name>ReferenceRule*</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620833">
            <name>ReferenceRule*&amp;</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620832">
            <name>ReferenceRule**</name>
            <content>
                <baseType ref="class_ReferenceRule_20058B27121F4365906EE66F77BC7CA1B64BB710"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3007">
            <name>ReturnStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3037">
            <name>RvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60">
            <name>SDDeclRule</name>
        </type>
        <type derived="true" id="type.4619708">
            <name>SDDeclRule&amp;</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619707">
            <name>SDDeclRule*</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620773">
            <name>SDDeclRule*&amp;</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620772">
            <name>SDDeclRule**</name>
            <content>
                <baseType ref="class_SDDeclRule_FCDBA007A9A33A45137422601E8E54692139AD60"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620491" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.4607142"/>
                <argumentType ref="type.4619869"/>
            </content>
        </type>
        <type derived="true" id="type.4620500">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <baseType ref="type.4620491"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620920">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620491"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620499">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620938">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>*&amp;</name>
            <content>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620937">
            <name>SelectFirst&lt;String&lt;uchar>, Entity*>**</name>
            <content>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="4606724"/>
            </content>
        </type>
        <type derived="true" id="type.2696">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2690">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2658">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2668">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2674">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="4606732"/>
            </content>
        </type>
        <type derived="true" id="type.2676">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2698">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2691">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2989">
            <name>SizeOf&amp;&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620564" specialization="true">
            <name>Stack&lt;String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.4607143"/>
            </content>
        </type>
        <type derived="true" id="type.4620569">
            <name>Stack&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <baseType ref="type.4620564"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620568">
            <name>Stack&lt;String&lt;uchar>*>*</name>
            <content>
                <baseType ref="type.4620564"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620558" specialization="true">
            <name>Stack&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Stack_T_44313E678C6CD0E8DB3743953B65AA105D55A963"/>
                <argumentType ref="type.4607142"/>
            </content>
        </type>
        <type derived="true" id="type.4620563">
            <name>Stack&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.4620558"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620562">
            <name>Stack&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.4620558"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3004">
            <name>Statement&amp;&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2924">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="4606757"/>
            </content>
        </type>
        <type derived="true" id="type.2710">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607142" specialization="true">
            <name>String&lt;uchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.4605943"/>
            </content>
        </type>
        <type derived="true" id="type.4607144">
            <name>String&lt;uchar>&amp;</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4607143">
            <name>String&lt;uchar>*</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4615986">
            <name>String&lt;uchar>*&amp;</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620570">
            <name>String&lt;uchar>*&amp;&amp;</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4616098">
            <name>String&lt;uchar>**</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620914">
            <name>String&lt;uchar>**&amp;</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620915">
            <name>String&lt;uchar>**&amp;&amp;</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620913">
            <name>String&lt;uchar>***</name>
            <content>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3022">
            <name>SwitchStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903">
            <name>SystemLiteralRule</name>
        </type>
        <type derived="true" id="type.4619600">
            <name>SystemLiteralRule&amp;</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619599">
            <name>SystemLiteralRule*</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620683">
            <name>SystemLiteralRule*&amp;</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620682">
            <name>SystemLiteralRule**</name>
            <content>
                <baseType ref="class_SystemLiteralRule_5B579AA0D00B533B884834F9DCF0B6A1DF261903"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2512">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606466"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2514">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606468"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2634">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606684"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2562">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606558"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2584">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2574">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606575"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2576">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606577"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2636">
            <name>T&amp;</name>
            <content>
                <baseType ref="4606686"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2704">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="4606737"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2590">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="4606607"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2622">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="4606653"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3000">
            <name>TemplateId&amp;&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97">
            <name>TextDeclRule</name>
        </type>
        <type derived="true" id="type.4619834">
            <name>TextDeclRule&amp;</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619833">
            <name>TextDeclRule*</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620878">
            <name>TextDeclRule*&amp;</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620877">
            <name>TextDeclRule**</name>
            <content>
                <baseType ref="class_TextDeclRule_7DF2155F945AACA495FEF3888304CC62507BAF97"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3028">
            <name>ThrowStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3056">
            <name>TokenParser&amp;&amp;</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3031">
            <name>TryStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2952">
            <name>Type&amp;&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2992">
            <name>TypeName&amp;&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620495" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.4620487"/>
                <argumentType ref="type.4607142"/>
            </content>
        </type>
        <type derived="true" id="type.4620497">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.4620495"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620921">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620495"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620496">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.4620495"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2974">
            <name>UnaryMinus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2971">
            <name>UnaryPlus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608516" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.4608493"/>
            </content>
        </type>
        <type derived="true" id="type.2600">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608516"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608831" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.2647">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608831"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4608773" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.2643">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4608773"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4612029" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.2806">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.4612029"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615990" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
            </content>
        </type>
        <type derived="true" id="type.2869">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615193" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
            </content>
        </type>
        <type derived="true" id="type.2828">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615193"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616117" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
            </content>
        </type>
        <type derived="true" id="type.2870">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616117"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4615200" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
            </content>
        </type>
        <type derived="true" id="type.2829">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;&amp;</name>
            <content>
                <baseType ref="type.4615200"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620592" specialization="true">
            <name>UniquePtr&lt;System.Xml.Entity></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
            </content>
        </type>
        <type derived="true" id="type.4620594">
            <name>UniquePtr&lt;System.Xml.Entity>&amp;</name>
            <content>
                <baseType ref="type.4620592"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620598">
            <name>UniquePtr&lt;System.Xml.Entity>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620592"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620593">
            <name>UniquePtr&lt;System.Xml.Entity>*</name>
            <content>
                <baseType ref="type.4620592"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620933">
            <name>UniquePtr&lt;System.Xml.Entity>*&amp;</name>
            <content>
                <baseType ref="type.4620592"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620932">
            <name>UniquePtr&lt;System.Xml.Entity>**</name>
            <content>
                <baseType ref="type.4620592"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4620467" specialization="true">
            <name>UniquePtr&lt;System.Xml.XmlParser></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
            </content>
        </type>
        <type derived="true" id="type.4620469">
            <name>UniquePtr&lt;System.Xml.XmlParser>&amp;</name>
            <content>
                <baseType ref="type.4620467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620473">
            <name>UniquePtr&lt;System.Xml.XmlParser>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620467"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620468">
            <name>UniquePtr&lt;System.Xml.XmlParser>*</name>
            <content>
                <baseType ref="type.4620467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="4606952"/>
            </content>
        </type>
        <type derived="true" id="type.2805">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2601">
            <name>Value&amp;</name>
            <content>
                <baseType ref="4606615"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616492" specialization="true">
            <name>ValueObject&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4607142"/>
            </content>
        </type>
        <type derived="true" id="type.2887">
            <name>ValueObject&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79" specialization="true">
            <name>ValueObject&lt;ValueType></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="4614118"/>
            </content>
        </type>
        <type derived="true" id="type.2851">
            <name>ValueObject&lt;ValueType>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4620645" specialization="true">
            <name>ValueObject&lt;XmlProcessor*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4619878"/>
            </content>
        </type>
        <type derived="true" id="type.4620647">
            <name>ValueObject&lt;XmlProcessor*>&amp;</name>
            <content>
                <baseType ref="type.4620645"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2921">
            <name>ValueObject&lt;XmlProcessor*>&amp;&amp;</name>
            <content>
                <baseType ref="type.4620645"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620646">
            <name>ValueObject&lt;XmlProcessor*>*</name>
            <content>
                <baseType ref="type.4620645"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.4616480" specialization="true">
            <name>ValueObject&lt;bool></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605930"/>
            </content>
        </type>
        <type derived="true" id="type.2886">
            <name>ValueObject&lt;bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616480"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616317" specialization="true">
            <name>ValueObject&lt;byte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605932"/>
            </content>
        </type>
        <type derived="true" id="type.2873">
            <name>ValueObject&lt;byte>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616317"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616456" specialization="true">
            <name>ValueObject&lt;double></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605940"/>
            </content>
        </type>
        <type derived="true" id="type.2885">
            <name>ValueObject&lt;double>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616456"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616442" specialization="true">
            <name>ValueObject&lt;float></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605939"/>
            </content>
        </type>
        <type derived="true" id="type.2883">
            <name>ValueObject&lt;float>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616442"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616358" specialization="true">
            <name>ValueObject&lt;int></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605935"/>
            </content>
        </type>
        <type derived="true" id="type.2878">
            <name>ValueObject&lt;int>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616383" specialization="true">
            <name>ValueObject&lt;long></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605937"/>
            </content>
        </type>
        <type derived="true" id="type.2880">
            <name>ValueObject&lt;long>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616383"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616300" specialization="true">
            <name>ValueObject&lt;sbyte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605931"/>
            </content>
        </type>
        <type derived="true" id="type.2872">
            <name>ValueObject&lt;sbyte>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616300"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616330" specialization="true">
            <name>ValueObject&lt;short></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605933"/>
            </content>
        </type>
        <type derived="true" id="type.2875">
            <name>ValueObject&lt;short>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616330"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616509" specialization="true">
            <name>ValueObject&lt;uchar></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605943"/>
            </content>
        </type>
        <type derived="true" id="type.2888">
            <name>ValueObject&lt;uchar>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616509"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616370" specialization="true">
            <name>ValueObject&lt;uint></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605936"/>
            </content>
        </type>
        <type derived="true" id="type.2879">
            <name>ValueObject&lt;uint>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616370"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616395" specialization="true">
            <name>ValueObject&lt;ulong></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605938"/>
            </content>
        </type>
        <type derived="true" id="type.2881">
            <name>ValueObject&lt;ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616395"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4616344" specialization="true">
            <name>ValueObject&lt;ushort></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.4605934"/>
            </content>
        </type>
        <type derived="true" id="type.2877">
            <name>ValueObject&lt;ushort>&amp;&amp;</name>
            <content>
                <baseType ref="type.4616344"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018">
            <name>VersionInfoRule</name>
        </type>
        <type derived="true" id="type.4619660">
            <name>VersionInfoRule&amp;</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619659">
            <name>VersionInfoRule*</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620733">
            <name>VersionInfoRule*&amp;</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620732">
            <name>VersionInfoRule**</name>
            <content>
                <baseType ref="class_VersionInfoRule_86E6A652F13CBCD37BE962CB0AFE999316FEA018"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="4606732"/>
            </content>
        </type>
        <type derived="true" id="type.2697">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2667">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2689">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2675">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2659">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.4607044" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.2472">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.4607044"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="4606732"/>
            </content>
        </type>
        <type derived="true" id="type.2677">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2699">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2702">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2679">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2681">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2683">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2692">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="4606727"/>
            </content>
        </type>
        <type derived="true" id="type.2685">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04">
            <name>XMLDeclRule</name>
        </type>
        <type derived="true" id="type.4619654">
            <name>XMLDeclRule&amp;</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619653">
            <name>XMLDeclRule*</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620728">
            <name>XMLDeclRule*&amp;</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620727">
            <name>XMLDeclRule**</name>
            <content>
                <baseType ref="class_XMLDeclRule_06CBA4384E2D398D90AE9BA7E1A16E52CEE13E04"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715">
            <name>XmlContentHandler</name>
        </type>
        <type derived="true" id="type.4619570">
            <name>XmlContentHandler&amp;</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619569">
            <name>XmlContentHandler*</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620911">
            <name>XmlContentHandler*&amp;</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620910">
            <name>XmlContentHandler**</name>
            <content>
                <baseType ref="class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94">
            <name>XmlGrammar</name>
        </type>
        <type derived="true" id="type.4619573">
            <name>XmlGrammar&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3064">
            <name>XmlGrammar&amp;&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619572">
            <name>XmlGrammar*</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620658">
            <name>XmlGrammar*&amp;</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620657">
            <name>XmlGrammar**</name>
            <content>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83">
            <name>XmlParser</name>
        </type>
        <type derived="true" id="type.4619864">
            <name>XmlParser&amp;</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619863">
            <name>XmlParser*</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620907">
            <name>XmlParser*&amp;</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620906">
            <name>XmlParser**</name>
            <content>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5">
            <name>XmlProcessingException</name>
        </type>
        <type derived="true" id="type.4619867">
            <name>XmlProcessingException&amp;</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620479">
            <name>XmlProcessingException&amp;&amp;</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619866">
            <name>XmlProcessingException*</name>
            <content>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319">
            <name>XmlProcessor</name>
        </type>
        <type derived="true" id="type.4619879">
            <name>XmlProcessor&amp;</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619878">
            <name>XmlProcessor*</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620654">
            <name>XmlProcessor*&amp;</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620653">
            <name>XmlProcessor**</name>
            <content>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605930">
            <name>bool</name>
        </type>
        <type basic="true" id="type.4605932">
            <name>byte</name>
        </type>
        <type derived="true" id="type.4605953">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.4605932"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605952">
            <name>byte*</name>
            <content>
                <baseType ref="type.4605932"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605941">
            <name>char</name>
        </type>
        <type derived="true" id="type.4605980">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.4605941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605979">
            <name>char*</name>
            <content>
                <baseType ref="type.4605941"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2960">
            <name>const AddressOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
            </content>
        </type>
        <type derived="true" id="type.2961">
            <name>const AddressOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3032">
            <name>const AssertStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
            </content>
        </type>
        <type derived="true" id="type.3033">
            <name>const AssertStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619559">
            <name>const Attribute</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
            </content>
        </type>
        <type derived="true" id="type.4619561">
            <name>const Attribute&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619560">
            <name>const Attribute*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620626">
            <name>const Attribute*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620627">
            <name>const Attribute*&amp;&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620625">
            <name>const Attribute**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attribute_9F35BBB0DEEF416466DA907C5E20DE343FA23BC6"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619563">
            <name>const Attributes</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
            </content>
        </type>
        <type derived="true" id="type.4619565">
            <name>const Attributes&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619564">
            <name>const Attributes*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Attributes_C4B2B129CAB6BB03A5BC75E44A8C3E96E227069A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2925">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.2926">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2927">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.2928">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620516">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620513"/>
            </content>
        </type>
        <type derived="true" id="type.4620518">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620513"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620517">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620537">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620538">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620513"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2929">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.2930">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.3039">
            <name>const CodeExpandingVisitor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
            </content>
        </type>
        <type derived="true" id="type.3040">
            <name>const CodeExpandingVisitor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2975">
            <name>const Complement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
            </content>
        </type>
        <type derived="true" id="type.2976">
            <name>const Complement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2941">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.2993">
            <name>const Construct</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
            </content>
        </type>
        <type derived="true" id="type.2994">
            <name>const Construct&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2946">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.2947">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2471">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607028"/>
            </content>
        </type>
        <type derived="true" id="type.2670">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2652">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2671">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2701">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2655">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2661">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2700">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2662">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2678">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2660">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2680">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2682">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2664">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2669">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2686">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2693">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2653">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2665">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2694">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2672">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2687">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2656">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2703">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.2663">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.2684">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.3011">
            <name>const DeleteStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
            </content>
        </type>
        <type derived="true" id="type.3012">
            <name>const DeleteStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2957">
            <name>const Deref</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
            </content>
        </type>
        <type derived="true" id="type.2958">
            <name>const Deref&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3014">
            <name>const DestroyStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
            </content>
        </type>
        <type derived="true" id="type.3015">
            <name>const DestroyStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620600">
            <name>const Entity</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
            </content>
        </type>
        <type derived="true" id="type.4620601">
            <name>const Entity&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620599">
            <name>const Entity*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620490">
            <name>const Entity*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Entity_B2C0C073274EAB165C24D894C32A0320159D96EF"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3051">
            <name>const ExpectationParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
            </content>
        </type>
        <type derived="true" id="type.3052">
            <name>const ExpectationParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3017">
            <name>const ExpressionStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
            </content>
        </type>
        <type derived="true" id="type.3018">
            <name>const ExpressionStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2931">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.2932">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3023">
            <name>const GotoCaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
            </content>
        </type>
        <type derived="true" id="type.3024">
            <name>const GotoCaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3008">
            <name>const GotoStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
            </content>
        </type>
        <type derived="true" id="type.3009">
            <name>const GotoStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620484">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620481"/>
            </content>
        </type>
        <type derived="true" id="type.4620486">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620481"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620485">
            <name>const HashMap&lt;String&lt;uchar>, Entity*, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620481"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620504">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620501"/>
            </content>
        </type>
        <type derived="true" id="type.4620506">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620501"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620505">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620501"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620510">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620507"/>
            </content>
        </type>
        <type derived="true" id="type.4620512">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620511">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, Pair&lt;String&lt;uchar>, Entity*>&amp;, Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620507"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620524">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620521"/>
            </content>
        </type>
        <type derived="true" id="type.4620526">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620521"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620525">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, Entity*>, const Pair&lt;String&lt;uchar>, Entity*>&amp;, const Pair&lt;String&lt;uchar>, Entity*>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, Entity*>, SelectFirst&lt;String&lt;uchar>, Entity*>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620521"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2836">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2833"/>
            </content>
        </type>
        <type derived="true" id="type.4620249">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620246"/>
            </content>
        </type>
        <type derived="true" id="type.4620251">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620246"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2838">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2833"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620251">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620246"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620250">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620246"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2837">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2833"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620255">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620252"/>
            </content>
        </type>
        <type derived="true" id="type.2842">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2839"/>
            </content>
        </type>
        <type derived="true" id="type.4620255">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620252"/>
            </content>
        </type>
        <type derived="true" id="type.4620257">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620252"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2844">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2839"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620256">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620252"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2843">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2839"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619874">
            <name>const InternalEntity</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
            </content>
        </type>
        <type derived="true" id="type.4619876">
            <name>const InternalEntity&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619875">
            <name>const InternalEntity*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InternalEntity_724D2DA658DF130784EEFD7D00A1AF74339A3CBD"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2933">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.2934">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2978">
            <name>const Invoke</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
            </content>
        </type>
        <type derived="true" id="type.2979">
            <name>const Invoke&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2555">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606557"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2595">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606614"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2642">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606693"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2578">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606586"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3048">
            <name>const KleeneStarParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
            </content>
        </type>
        <type derived="true" id="type.3049">
            <name>const KleeneStarParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620534">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620531"/>
            </content>
        </type>
        <type derived="true" id="type.4620536">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620531"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620535">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620531"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2900">
            <name>const List&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2897"/>
            </content>
        </type>
        <type derived="true" id="type.4620574">
            <name>const List&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620571"/>
            </content>
        </type>
        <type derived="true" id="type.4620576">
            <name>const List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620571"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2902">
            <name>const List&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2897"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620575">
            <name>const List&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2901">
            <name>const List&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2897"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620575">
            <name>const List&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620445">
            <name>const List&lt;System.Xml.Attribute></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620442"/>
            </content>
        </type>
        <type derived="true" id="type.4620447">
            <name>const List&lt;System.Xml.Attribute>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620442"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620446">
            <name>const List&lt;System.Xml.Attribute>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620442"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620605">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620602"/>
            </content>
        </type>
        <type derived="true" id="type.4620607">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620606">
            <name>const List&lt;UniquePtr&lt;System.Xml.Entity>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620602"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3001">
            <name>const Literal</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
            </content>
        </type>
        <type derived="true" id="type.3002">
            <name>const Literal&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2611">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.2612">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2798">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4611883"/>
            </content>
        </type>
        <type derived="true" id="type.2799">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4611883"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2942">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.2996">
            <name>const New</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
            </content>
        </type>
        <type derived="true" id="type.2997">
            <name>const New&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2954">
            <name>const Not</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
            </content>
        </type>
        <type derived="true" id="type.2955">
            <name>const Not&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3042">
            <name>const OptionalParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
            </content>
        </type>
        <type derived="true" id="type.3043">
            <name>const OptionalParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2935">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.4620520">
            <name>const Pair&lt;String&lt;uchar>, Entity*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620487"/>
            </content>
        </type>
        <type derived="true" id="type.4620498">
            <name>const Pair&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620487"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620519">
            <name>const Pair&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620487"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2618">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2621">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3045">
            <name>const PositiveParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
            </content>
        </type>
        <type derived="true" id="type.3046">
            <name>const PositiveParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2984">
            <name>const PostfixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
            </content>
        </type>
        <type derived="true" id="type.2985">
            <name>const PostfixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2981">
            <name>const PostfixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
            </content>
        </type>
        <type derived="true" id="type.2982">
            <name>const PostfixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2966">
            <name>const PrefixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
            </content>
        </type>
        <type derived="true" id="type.2967">
            <name>const PrefixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2963">
            <name>const PrefixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
            </content>
        </type>
        <type derived="true" id="type.2964">
            <name>const PrefixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620551">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620548"/>
            </content>
        </type>
        <type derived="true" id="type.4620553">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620548"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620552">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620548"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620542">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620539"/>
            </content>
        </type>
        <type derived="true" id="type.4620544">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620539"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620543">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Entity*>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620539"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620587">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620584"/>
            </content>
        </type>
        <type derived="true" id="type.2913">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2910"/>
            </content>
        </type>
        <type derived="true" id="type.4620589">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2915">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2910"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620589">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2914">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2910"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620588">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, String&lt;uchar>*&amp;, String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620584"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620580">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
            </content>
        </type>
        <type derived="true" id="type.2906">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2903"/>
            </content>
        </type>
        <type derived="true" id="type.4620580">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
            </content>
        </type>
        <type derived="true" id="type.4620582">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2908">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2903"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620582">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620581">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2907">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2903"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620581">
            <name>const RandomAccessIter&lt;String&lt;uchar>*, const String&lt;uchar>*&amp;, const String&lt;uchar>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620577"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620458">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620455"/>
            </content>
        </type>
        <type derived="true" id="type.4620460">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620455"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620459">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, Attribute&amp;, Attribute*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620455"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620451">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620448"/>
            </content>
        </type>
        <type derived="true" id="type.4620453">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620448"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620452">
            <name>const RandomAccessIter&lt;System.Xml.Attribute, const Attribute&amp;, const Attribute*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620448"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620618">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620615"/>
            </content>
        </type>
        <type derived="true" id="type.4620620">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620615"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620619">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, UniquePtr&lt;System.Xml.Entity>&amp;, UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620615"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620611">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620608"/>
            </content>
        </type>
        <type derived="true" id="type.4620613">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620608"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620612">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Xml.Entity>, const UniquePtr&lt;System.Xml.Entity>&amp;, const UniquePtr&lt;System.Xml.Entity>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620608"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2605">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2602"/>
            </content>
        </type>
        <type derived="true" id="type.4620017">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620014"/>
            </content>
        </type>
        <type derived="true" id="type.2607">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2602"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620019">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620014"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620018">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620014"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2606">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2602"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619888">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619885"/>
            </content>
        </type>
        <type derived="true" id="type.2476">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2473"/>
            </content>
        </type>
        <type derived="true" id="type.2478">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2473"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619890">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619885"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2477">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2473"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619889">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619885"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619907">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619904"/>
            </content>
        </type>
        <type derived="true" id="type.2495">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2492"/>
            </content>
        </type>
        <type derived="true" id="type.4619909">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619904"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2497">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619908">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619904"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2496">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2492"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619908">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619904"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620206">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620203"/>
            </content>
        </type>
        <type derived="true" id="type.2793">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2790"/>
            </content>
        </type>
        <type derived="true" id="type.2795">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2790"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620208">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620203"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2794">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2790"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620207">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620203"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2506">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2503"/>
            </content>
        </type>
        <type derived="true" id="type.4619918">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619915"/>
            </content>
        </type>
        <type derived="true" id="type.2508">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2503"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619920">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619915"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2507">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2503"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619919">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619915"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619897">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619894"/>
            </content>
        </type>
        <type derived="true" id="type.2485">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2482"/>
            </content>
        </type>
        <type derived="true" id="type.4619897">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619894"/>
            </content>
        </type>
        <type derived="true" id="type.2487">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2482"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619899">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619894"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619898">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4619894"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2486">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2482"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2943">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.3005">
            <name>const ReturnStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
            </content>
        </type>
        <type derived="true" id="type.3006">
            <name>const ReturnStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620492">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620491"/>
            </content>
        </type>
        <type derived="true" id="type.4620494">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620491"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620493">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620936">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620935">
            <name>const SelectFirst&lt;String&lt;uchar>, Entity*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620491"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2987">
            <name>const SizeOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
            </content>
        </type>
        <type derived="true" id="type.2988">
            <name>const SizeOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4614362">
            <name>const Span&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Span_342F797681C8A26247E86213AFC9204FEF17D2A5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620565">
            <name>const Stack&lt;String&lt;uchar>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620564"/>
            </content>
        </type>
        <type derived="true" id="type.4620567">
            <name>const Stack&lt;String&lt;uchar>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620564"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620566">
            <name>const Stack&lt;String&lt;uchar>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620564"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620559">
            <name>const Stack&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620558"/>
            </content>
        </type>
        <type derived="true" id="type.4620561">
            <name>const Stack&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620558"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620560">
            <name>const Stack&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620558"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2922">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.2923">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2936">
            <name>const StreamReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamReader_8A8267CD81BA8B198AF295474A8CB0B2DFBB7B57"/>
            </content>
        </type>
        <type derived="true" id="type.2937">
            <name>const StreamReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamReader_8A8267CD81BA8B198AF295474A8CB0B2DFBB7B57"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2938">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.4607059">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607054"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4607147">
            <name>const String&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607142"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4607146">
            <name>const String&lt;uchar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4615931">
            <name>const String&lt;uchar>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4616096">
            <name>const String&lt;uchar>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607142"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4607102">
            <name>const String&lt;wchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4607097"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3020">
            <name>const SwitchStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
            </content>
        </type>
        <type derived="true" id="type.3021">
            <name>const SwitchStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2614">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606634"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2572">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606573"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2633">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606684"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2635">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606686"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2537">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606519"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2538">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606521"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2535">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606516"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2573">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606575"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2540">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606524"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2541">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606526"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2543">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606529"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2575">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606577"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2583">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2511">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606466"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2513">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606468"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2556">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606558"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2554">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606555"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2616">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2553">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606553"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2552">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606551"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2619">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606646"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2551">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606549"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2550">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606547"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2549">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606545"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2547">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606536"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2546">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606534"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2544">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606531"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2524">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606486"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2525">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606489"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2526">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606491"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2527">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606493"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2528">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606496"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2529">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606498"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2530">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606507"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2531">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606509"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2532">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606511"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2534">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606514"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2944">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.2945">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3026">
            <name>const ThrowStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
            </content>
        </type>
        <type derived="true" id="type.3027">
            <name>const ThrowStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3054">
            <name>const TokenParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
            </content>
        </type>
        <type derived="true" id="type.3055">
            <name>const TokenParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3029">
            <name>const TryStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
            </content>
        </type>
        <type derived="true" id="type.3030">
            <name>const TryStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2950">
            <name>const Type</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
            </content>
        </type>
        <type derived="true" id="type.2951">
            <name>const Type&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2990">
            <name>const TypeName</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
            </content>
        </type>
        <type derived="true" id="type.2991">
            <name>const TypeName&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2542">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606527"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2620">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606647"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2617">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606644"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2615">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606635"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2545">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606532"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2533">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606512"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2548">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606537"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2536">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606517"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2539">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606522"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620923">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, Entity*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620495"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2972">
            <name>const UnaryMinus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
            </content>
        </type>
        <type derived="true" id="type.2973">
            <name>const UnaryMinus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2969">
            <name>const UnaryPlus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
            </content>
        </type>
        <type derived="true" id="type.2970">
            <name>const UnaryPlus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2948">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.2949">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620595">
            <name>const UniquePtr&lt;System.Xml.Entity></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620592"/>
            </content>
        </type>
        <type derived="true" id="type.4620597">
            <name>const UniquePtr&lt;System.Xml.Entity>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620592"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620596">
            <name>const UniquePtr&lt;System.Xml.Entity>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620592"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620470">
            <name>const UniquePtr&lt;System.Xml.XmlParser></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620467"/>
            </content>
        </type>
        <type derived="true" id="type.4620472">
            <name>const UniquePtr&lt;System.Xml.XmlParser>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620467"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620471">
            <name>const UniquePtr&lt;System.Xml.XmlParser>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620467"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2596">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4606615"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620648">
            <name>const ValueObject&lt;XmlProcessor*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620645"/>
            </content>
        </type>
        <type derived="true" id="type.4620650">
            <name>const ValueObject&lt;XmlProcessor*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620645"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620649">
            <name>const ValueObject&lt;XmlProcessor*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4620645"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2850">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="4614118"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3062">
            <name>const XmlGrammar</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
            </content>
        </type>
        <type derived="true" id="type.3063">
            <name>const XmlGrammar&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlGrammar_514387B50789C8E470155317F17349CFC3DF6E94"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620475">
            <name>const XmlParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
            </content>
        </type>
        <type derived="true" id="type.4620476">
            <name>const XmlParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620474">
            <name>const XmlParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlParser_57E6C3062973C902D7D9AABADA17F1524293CA83"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3065">
            <name>const XmlProcessingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
            </content>
        </type>
        <type derived="true" id="type.3066">
            <name>const XmlProcessingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessingException_38961E809BD4812FD6BEA01B8DDA08229100E6F5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619880">
            <name>const XmlProcessor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
            </content>
        </type>
        <type derived="true" id="type.4619882">
            <name>const XmlProcessor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4619881">
            <name>const XmlProcessor*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620651">
            <name>const XmlProcessor*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4620960">
            <name>const XmlProcessor**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_XmlProcessor_43F8A1739D5D942B02033D1C516D8C6DF1EF8319"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2884">
            <name>const double&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605940"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2882">
            <name>const float&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605939"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2871">
            <name>const sbyte&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605931"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2874">
            <name>const short&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605933"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3059">
            <name>const stdlib</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
            </content>
        </type>
        <type derived="true" id="type.3060">
            <name>const stdlib&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4607149">
            <name>const uchar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605943"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2876">
            <name>const ushort&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.4605934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605940">
            <name>double</name>
        </type>
        <type basic="true" id="type.4605939">
            <name>float</name>
        </type>
        <type basic="true" id="type.4605937">
            <name>long</name>
        </type>
        <type basic="true" id="type.4605931">
            <name>sbyte</name>
        </type>
        <type basic="true" id="type.4605933">
            <name>short</name>
        </type>
        <type derived="true" id="type.3061">
            <name>stdlib&amp;&amp;</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605943">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.4605986">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.4605943"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605985">
            <name>uchar*</name>
            <content>
                <baseType ref="type.4605943"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605936">
            <name>uint</name>
        </type>
        <type derived="true" id="type.4605965">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.4605936"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605964">
            <name>uint*</name>
            <content>
                <baseType ref="type.4605936"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605938">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.4605971">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.4605938"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605970">
            <name>ulong*</name>
            <content>
                <baseType ref="type.4605938"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.4605934">
            <name>ushort</name>
        </type>
        <type basic="true" id="type.4605942">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.4605983">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.4605942"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.4605982">
            <name>wchar*</name>
            <content>
                <baseType ref="type.4605942"/>
                <qualifier>*</qualifier>
            </content>
        </type>
    </types>
</library>
