<library>
    <name>System.Json</name>
    <style>../../style/cmdoc.css</style>
    <namespaces>
        <namespace id="System.Json">
            <name>System.Json</name>
            <classes>
                <class id="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18">
                    <name>JsonArray</name>
                    <groupName>JsonArray</groupName>
                    <syntax> public class JsonArray;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <constructors>
                        <constructor id="default_constructor_JsonArray_27ECF6EF0157D1CAB00898D898CC7849D18B95CB">
                            <name>JsonArray()</name>
                            <syntax>public nothrow JsonArray();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_AddItem_JsonArray_93D6706B2A24ED128A3C59415964A857BA13317F">
                            <name>AddItem(UniquePtr&lt;System.Json.JsonValue>&amp;&amp; item)</name>
                            <syntax>public void AddItem(UniquePtr&lt;System.Json.JsonValue>&amp;&amp; item);</syntax>
                            <parameters>
                                <parameter>
                                    <name>item</name>
                                    <type ref="type.9343628"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_Count_JsonArray_57652BF582B2E717BB319EE40CAA85E2A285CDEB">
                            <name>Count() const</name>
                            <syntax>public nothrow inline long Count() const;</syntax>
                            <returnType ref="type.9329184"/>
                        </function>
                        <function id="member_function_ToString_JsonArray_BA7E1AD315213109D0099F88CDFFD9C0E98E2E93">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                        <function id="member_function_op_index_JsonArray_1378E53BF82426D07CFC777A2B475C65FFE24597">
                            <name>operator[](long index) const</name>
                            <syntax>public JsonValue* operator[](long index) const;</syntax>
                            <parameters>
                                <parameter>
                                    <name>index</name>
                                    <type ref="type.9329184"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9342875"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79">
                    <name>JsonBool</name>
                    <groupName>JsonBool</groupName>
                    <syntax> public class JsonBool;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <constructors>
                        <constructor id="default_constructor_JsonBool_6CDD1C0BAA418963493BBB6418B186CF96E87CE9">
                            <name>JsonBool()</name>
                            <syntax>public nothrow JsonBool();</syntax>
                        </constructor>
                        <constructor id="constructor_JsonBool_29321643A9D00B4E2219FA0BA146A80E0BBFD182">
                            <name>JsonBool(bool value_)</name>
                            <syntax>public nothrow explicit JsonBool(bool value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9329177"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_SetValue_JsonBool_465B34C0AC7756D2E393EF971A4CBF597F63549F">
                            <name>SetValue(bool value_)</name>
                            <syntax>public nothrow inline void SetValue(bool value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9329177"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ToString_JsonBool_11D1A4DC9F36611D4EC388D0AEB6152721A9A1BF">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                        <function id="member_function_Value_JsonBool_04618DA66215ABE8B9F977205B2D90FA5BBD060A">
                            <name>Value() const</name>
                            <syntax>public nothrow inline bool Value() const;</syntax>
                            <returnType ref="type.9329177"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E">
                    <name>JsonClassFactory</name>
                    <groupName>JsonClassFactory</groupName>
                    <syntax> public class JsonClassFactory;</syntax>
                    <functions>
                        <function id="member_function_CreateJsonClass_JsonClassFactory_BF574F7BB5506F6308DE0A8473F81F40BA047ACC">
                            <name>CreateJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonValue* value)</name>
                            <syntax>public void* CreateJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonValue* value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonClassName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9329329"/>
                        </function>
                        <function id="member_function_RegisterJsonClass_JsonClassFactory_C3CEBA73260CF15D9C8F3CBA161BDCE1F5A417E9">
                            <name>RegisterJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonClassCreatorDelegate creator)</name>
                            <syntax>public void RegisterJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonClassCreatorDelegate creator);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonClassName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>creator</name>
                                    <type ref="9342920"/>
                                </parameter>
                            </parameters>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_JsonClassFactory_D38F97BAC91B814118DAFA2C3E655F501E7D3CD9">
                            <name>Instance()</name>
                            <syntax>public static JsonClassFactory&amp; Instance();</syntax>
                            <returnType ref="type.9342923"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318">
                    <name>JsonGrammar</name>
                    <groupName>JsonGrammar</groupName>
                    <syntax> public class JsonGrammar;</syntax>
                    <baseClass ref="class_Grammar_2180D00808E7A786B21C35D11B36E77EC171A6C6"/>
                    <constructors>
                        <constructor id="default_constructor_JsonGrammar_1DB8D01EFAC1CEB1D3029D41B94B632BAB7B4BE0">
                            <name>JsonGrammar()</name>
                            <syntax>public JsonGrammar();</syntax>
                        </constructor>
                        <constructor id="constructor_JsonGrammar_BCAACB6C3F24AF6C14564C9A1F52903CDE668AAC">
                            <name>JsonGrammar(ParsingDomain* parsingDomain)</name>
                            <syntax>public JsonGrammar(ParsingDomain* parsingDomain);</syntax>
                            <parameters>
                                <parameter>
                                    <name>parsingDomain</name>
                                    <type ref="type.9337419"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_CreateRules_JsonGrammar_D6A82B25C567F66A831D4C2E84BAF38D9A84CF7E">
                            <name>CreateRules()</name>
                            <syntax>public override void CreateRules();</syntax>
                        </function>
                        <function id="member_function_GetReferencedGrammars_JsonGrammar_0DD617D5F948F46B03B9C5A995696B4EC6B595F4">
                            <name>GetReferencedGrammars()</name>
                            <syntax>public override void GetReferencedGrammars();</syntax>
                        </function>
                        <function id="member_function_Parse_JsonGrammar_657298B2AC17F5EF7701EF3B2F2F1DE7C6D17844">
                            <name>Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName)</name>
                            <syntax>public JsonValue* Parse(const uchar* start, const uchar* end, int fileIndex, const String&lt;char>&amp; fileName);</syntax>
                            <parameters>
                                <parameter>
                                    <name>start</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>end</name>
                                    <type ref="type.9330413"/>
                                </parameter>
                                <parameter>
                                    <name>fileIndex</name>
                                    <type ref="type.9329182"/>
                                </parameter>
                                <parameter>
                                    <name>fileName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9342875"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723">
                    <name>JsonImportException</name>
                    <groupName>JsonImportException</groupName>
                    <syntax> public class JsonImportException;</syntax>
                    <baseClass ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
                    <constructors>
                        <constructor id="constructor_JsonImportException_9015D892D35DFEF8203E58FB745BF6B2D9C1ED9A">
                            <name>JsonImportException(const String&lt;char>&amp; message_)</name>
                            <syntax>public nothrow JsonImportException(const String&lt;char>&amp; message_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>message_</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                </class>
                <class id="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2">
                    <name>JsonNull</name>
                    <groupName>JsonNull</groupName>
                    <syntax> public class JsonNull;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <functions>
                        <function id="member_function_ToString_JsonNull_98302ABC70984F02CEFDC4D7D9AC5077D5C3C670">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonNumber_BA94887A1742701B420D069040E7953026161429">
                    <name>JsonNumber</name>
                    <groupName>JsonNumber</groupName>
                    <syntax> public class JsonNumber;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <constructors>
                        <constructor id="default_constructor_JsonNumber_E3F45F095A90F5A0F4FBE1C03D7FB8FF4D10A14B">
                            <name>JsonNumber()</name>
                            <syntax>public nothrow JsonNumber();</syntax>
                        </constructor>
                        <constructor id="constructor_JsonNumber_FDC08E33EFFBBE794D13997E4CAE9D2B808068F9">
                            <name>JsonNumber(double value_)</name>
                            <syntax>public nothrow explicit JsonNumber(double value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9329187"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="member_function_SetValue_JsonNumber_DAAA54BD89B58AB65CD4499C7D07AF0E9ACA07B4">
                            <name>SetValue(double value_)</name>
                            <syntax>public nothrow inline void SetValue(double value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9329187"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ToString_JsonNumber_550723B35AC58E078F1F206AFC8854D1AE621DD1">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                        <function id="member_function_Value_JsonNumber_EEB14F86A8149741AF8DCC15731228CBFFE63CA3">
                            <name>Value() const</name>
                            <syntax>public nothrow inline double Value() const;</syntax>
                            <returnType ref="type.9329187"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D">
                    <name>JsonObject</name>
                    <groupName>JsonObject</groupName>
                    <syntax> public class JsonObject;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <constructors>
                        <constructor id="default_constructor_JsonObject_E16F3B423E9F14DE43D5DAB5762ADFDEABE53987">
                            <name>JsonObject()</name>
                            <syntax>public JsonObject();</syntax>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="function_group_AddField_9C28B5737E68F5B7F6EFF0734E146A93E593F379">
                            <name>AddField</name>
                            <overloads>
                                <overload id="member_function_AddField_JsonObject_DD02685AFE75C76A9991A018417EFA3C01D031D2">
                                    <name>AddField(const String&lt;char>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue)</name>
                                    <syntax>public void AddField(const String&lt;char>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330323"/>
                                        </parameter>
                                        <parameter>
                                            <name>fieldValue</name>
                                            <type ref="type.9343628"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_AddField_JsonObject_8DFE70E7F550CB1ED6417EB9195A69A486F401DC">
                                    <name>AddField(const String&lt;uchar>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue)</name>
                                    <syntax>public void AddField(const String&lt;uchar>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                        <parameter>
                                            <name>fieldValue</name>
                                            <type ref="type.9343628"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                                <overload id="member_function_AddField_JsonObject_BB0F40BF879C0642E895C842012A6FFBE84A73CF">
                                    <name>AddField(const String&lt;wchar>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue)</name>
                                    <syntax>public void AddField(const String&lt;wchar>&amp; fieldName, UniquePtr&lt;System.Json.JsonValue>&amp;&amp; fieldValue);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330366"/>
                                        </parameter>
                                        <parameter>
                                            <name>fieldValue</name>
                                            <type ref="type.9343628"/>
                                        </parameter>
                                    </parameters>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_Fields_AF12E1547B6C54A07F8D8CA30B9F64B529C81D9C">
                            <name>Fields</name>
                            <overloads>
                                <overload id="member_function_Fields_JsonObject_6FBBFB84E3B990711F34D56259CBFF71582E3783">
                                    <name>Fields()</name>
                                    <syntax>public nothrow Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>&amp; Fields();</syntax>
                                    <returnType ref="type.9343637"/>
                                </overload>
                                <overload id="member_function_Fields_JsonObject_2FDE93F351742DB8AF31FBF4F61EE01FA575D806">
                                    <name>Fields() const</name>
                                    <syntax>public nothrow const Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>&amp; Fields() const;</syntax>
                                    <returnType ref="type.9343640"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="function_group_GetField_A070B2A86A16E986AB5708FC468ACB5C63644DE9">
                            <name>GetField</name>
                            <overloads>
                                <overload id="member_function_GetField_JsonObject_5EBC38E8BD34EFC54485EBD3A6E722ED17CE2656">
                                    <name>GetField(const String&lt;char>&amp; fieldName) const</name>
                                    <syntax>public JsonValue* GetField(const String&lt;char>&amp; fieldName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330323"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342875"/>
                                </overload>
                                <overload id="member_function_GetField_JsonObject_7F5393C75E599A3AB9026AEA200FAA814EE3D55E">
                                    <name>GetField(const String&lt;uchar>&amp; fieldName) const</name>
                                    <syntax>public JsonValue* GetField(const String&lt;uchar>&amp; fieldName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342875"/>
                                </overload>
                                <overload id="member_function_GetField_JsonObject_369351A3AB3806CA419789FB1E6220C53F899C71">
                                    <name>GetField(const String&lt;wchar>&amp; fieldName) const</name>
                                    <syntax>public JsonValue* GetField(const String&lt;wchar>&amp; fieldName) const;</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>fieldName</name>
                                            <type ref="type.9330366"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342875"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_ToString_JsonObject_908D139FF48AE265A3D8785366898691E6FE1AD2">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9">
                    <name>JsonParser</name>
                    <groupName>JsonParser</groupName>
                    <syntax> public class JsonParser;</syntax>
                    <functions>
                        <function id="member_function_GetJsonGrammar_JsonParser_0D8370F75DD6DE1916BDCC1D635F967F38CEA6B5">
                            <name>GetJsonGrammar() const</name>
                            <syntax>public nothrow JsonGrammar* GetJsonGrammar() const;</syntax>
                            <returnType ref="type.9342945"/>
                        </function>
                    </functions>
                    <staticMemberFunctions>
                        <function id="member_function_Instance_JsonParser_E9AA664A2A5D30F70953E6B3922FF101467AB798">
                            <name>Instance()</name>
                            <syntax>public static nothrow JsonParser&amp; Instance();</syntax>
                            <returnType ref="type.9342916"/>
                        </function>
                    </staticMemberFunctions>
                </class>
                <class id="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516">
                    <name>JsonString</name>
                    <groupName>JsonString</groupName>
                    <syntax> public class JsonString;</syntax>
                    <baseClass ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                    <constructors>
                        <constructor id="default_constructor_JsonString_3A7C62B9267602DAB602A8EF30A8D92559208784">
                            <name>JsonString()</name>
                            <syntax>public nothrow JsonString();</syntax>
                        </constructor>
                        <constructor id="constructor_JsonString_D3BE7AAE2CD078E46809B81D0721D508C009194E">
                            <name>JsonString(const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow JsonString(const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </constructor>
                    </constructors>
                    <functions>
                        <function id="function_group_Append_78B62F7E28AEBF2F96AB59856D234EA0471FD424">
                            <name>Append</name>
                            <overloads>
                                <overload id="member_function_Append_JsonString_E9CF408B6A27F38BF4CFA45666CA5C3475A2F859">
                                    <name>Append(const String&lt;uchar>&amp; s)</name>
                                    <syntax>public nothrow JsonString&amp; Append(const String&lt;uchar>&amp; s);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>s</name>
                                            <type ref="type.9330411"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342898"/>
                                </overload>
                                <overload id="member_function_Append_JsonString_379050D4A6A8001570E98A20809FDB242B446EFD">
                                    <name>Append(const uchar* s)</name>
                                    <syntax>public nothrow JsonString&amp; Append(const uchar* s);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>s</name>
                                            <type ref="type.9330413"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342898"/>
                                </overload>
                                <overload id="member_function_Append_JsonString_E822E33CEBC9626C33424C43F829AD378A77B659">
                                    <name>Append(uchar c)</name>
                                    <syntax>public nothrow JsonString&amp; Append(uchar c);</syntax>
                                    <parameters>
                                        <parameter>
                                            <name>c</name>
                                            <type ref="type.9329190"/>
                                        </parameter>
                                    </parameters>
                                    <returnType ref="type.9342898"/>
                                </overload>
                            </overloads>
                        </function>
                        <function id="member_function_SetValue_JsonString_F9199A8A958220B64ED8005718B7AE7185509E55">
                            <name>SetValue(const String&lt;uchar>&amp; value_)</name>
                            <syntax>public nothrow inline void SetValue(const String&lt;uchar>&amp; value_);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value_</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                        </function>
                        <function id="member_function_ToString_JsonString_4CBCB9FCD9FB546EB1C49167CD4C2C37BE606533">
                            <name>ToString() const</name>
                            <syntax>public override String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                        <function id="member_function_Value_JsonString_1D360D73C54B65BBE85083AC095029213ED568BA">
                            <name>Value() const</name>
                            <syntax>public nothrow inline const String&lt;uchar>&amp; Value() const;</syntax>
                            <returnType ref="type.9330411"/>
                        </function>
                    </functions>
                </class>
                <class id="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A">
                    <name>JsonValue</name>
                    <groupName>JsonValue</groupName>
                    <syntax>abstract public class JsonValue;</syntax>
                    <functions>
                        <function id="member_function_ToString_JsonValue_0E8D02CC91EA26B2A9A8AF1C11DF12FD5FE86F31">
                            <name>ToString() const</name>
                            <syntax>public abstract String&lt;char> ToString() const;</syntax>
                            <returnType ref="type.9330318"/>
                        </function>
                    </functions>
                </class>
            </classes>
            <functions>
                <function id="function_group_FromJson_22997B691ACDD99EB254F19DD18F75F989FE89EF">
                    <name>FromJson</name>
                    <overloads>
                        <overload id="function_FromJson_0D468A43DEB7747049443EB4EF884A4135625F54">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;char>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;char>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330320"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_FD4DA9B1398050558E5BF922A072C03C129097FB">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;uchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;uchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330408"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_8D111EF5D30668FB333D278DE18BB7084EC1BEC1">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;wchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, String&lt;wchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330363"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_5452FE9912EEC2CAD2FCDDA224EC9780340F70E3">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, bool&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, bool&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329194"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_E0103885FB5C2EAA85A69FB9E3B88B0F08505C38">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, double&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, double&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329224"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_54062682CD69EE8046DDAA7F0FC20A9EE527901D">
                            <name>FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, int&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;char>&amp; fieldName, int&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329209"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_0FDE02F2AC8E3A1E0E469FC27DE91FAB6714F244">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;char>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;char>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330320"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_F738AFA288AFAB4C745BD61D99B2EEEA6337335D">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;uchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;uchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330408"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_37C1ACCEBB7EDA0F42A57D178260B0143BBEBA17">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;wchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, String&lt;wchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330363"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_4B7564FFFFF32A4E3B2D0AD8B2601BB144CC2935">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, bool&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, bool&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329194"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_DB824D49846A7E03111FBBB884E79002D2431F8A">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, double&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, double&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329224"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_9D0EF3A56DF7ED266DB174141193A894B5A409EC">
                            <name>FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, int&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;uchar>&amp; fieldName, int&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329209"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_28A1E6951F82E0549D2DF5680C519D9FC076C9CB">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;char>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;char>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330320"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_B966CCBA3C2871F5525034998A78EA8217194B24">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;uchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;uchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330408"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_8EAA46E11086492741B83B71530310637D8DE4AB">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;wchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, String&lt;wchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330363"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_E5E9BCD1395BC8C39A06FB102FF0B9E8DDF22E56">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, bool&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, bool&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329194"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_62C4C32E61B89D3AB75712DBABEA0BFC3F5B1976">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, double&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, double&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329224"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_4B63168BDE07291BB93873BB968CC902EA2EA499">
                            <name>FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, int&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* container, const String&lt;wchar>&amp; fieldName, int&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329209"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_B24EF3B2CA6DACDDA40455C0BAC1F81D35CBB64B">
                            <name>FromJson(JsonValue* value, String&lt;char>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, String&lt;char>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330320"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_D379803A898D08C1B1B70B198CDCF31596A8FAEF">
                            <name>FromJson(JsonValue* value, String&lt;uchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, String&lt;uchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330408"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_135453EE5B5381C490F9AA5A9DB42B54B8B0D473">
                            <name>FromJson(JsonValue* value, String&lt;wchar>&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, String&lt;wchar>&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9330363"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_1A5EF2BB505A65AE272D6778E5C726D7152C8209">
                            <name>FromJson(JsonValue* value, bool&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, bool&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329194"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_EE92D51E43D5311A8A834EC6CAFD7552BC74BC2C">
                            <name>FromJson(JsonValue* value, double&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, double&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329224"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_312EBF86915CFC46CC7A612B242406BD677FAF3C">
                            <name>FromJson(JsonValue* value, int&amp; field)</name>
                            <syntax>public void FromJson(JsonValue* value, int&amp; field);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9329209"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_FromJson_FFAD692C1C6A68793C98499789D9D0995D7D5432">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;char>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;char>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343043">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343044">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343045">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343046">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345141"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343044"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343044"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_E3F84A3CD39C44F180D8531D0B9613C98EED3828">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;uchar>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;uchar>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343051">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343052">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343053">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343054">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345297"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343052"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343052"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_1841BC18B6B4F57155CA82AD178323BC48F79296">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;wchar>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* container, const String&lt;wchar>&amp; fieldName, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343047">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343048">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343049">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343050">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345219"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343048"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343048"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_CA66F53A4B7279D7819C28DF759545627929AC07">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field) where K is wstring and T is JsonValueType</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343020">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343021">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343022">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343023">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344672"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343020"/>
                                <connector>is</connector>
                                <type ref="type.9330361"/>
                                <connector>and</connector>
                                <type ref="9343021"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_9CEA6C1C5DCE40E3C08ED971B107560C25A2BD58">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field) where K is string and T is JsonValueType</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343024">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343025">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343026">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343027">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344750"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343024"/>
                                <connector>is</connector>
                                <type ref="type.9330318"/>
                                <connector>and</connector>
                                <type ref="9343025"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_F0AB8F8B2A3CAB4709E73C0B40ADEC76D5381496">
                            <name>FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field) where K is ustring and T is JsonValueType</name>
                            <syntax>public void FromJson&lt;K, T, H, C>(JsonValue* value, HashMap&lt;K, T, H, C>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343016">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9343017">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9343018">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9343019">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344594"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343016"/>
                                <connector>is</connector>
                                <type ref="type.9330406"/>
                                <connector>and</connector>
                                <type ref="9343017"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_835C4BD46FFB629533B1344AF81392E241235C5A">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;char>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field) where Value is JsonValueType or Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;char>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343034">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343035">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343036">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344958"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343035"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343035"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_6F1E1E91A9CE9B3F27A7E95F2032FBD9785CC5CD">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;uchar>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field) where Value is JsonValueType or Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;uchar>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343040">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343041">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343042">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345080"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343041"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343041"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_141AD8D028A1463F11D57A1CC7D3DDBCA7EC1A26">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;wchar>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field) where Value is JsonValueType or Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* container, const String&lt;wchar>&amp; fieldName, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343037">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343038">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343039">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345019"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343038"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343038"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_5549A8B6E26ED0527CDEAD71A05C23A4AAE3F70F">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is ustring and Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343007">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343008">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343009">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344411"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343007"/>
                                <connector>is</connector>
                                <type ref="type.9330406"/>
                                <connector>and</connector>
                                <type ref="9343008"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_1824593656021EB8DC78E7379E9787F7EA4BC08C">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is wstring and Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343010">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343011">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343012">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344472"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343010"/>
                                <connector>is</connector>
                                <type ref="type.9330361"/>
                                <connector>and</connector>
                                <type ref="9343011"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_86B24EEC8A29EEDEEB1BDA72F46E16FF97EDB455">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is string and Value is JsonConstructible</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343013">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343014">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343015">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344533"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343013"/>
                                <connector>is</connector>
                                <type ref="type.9330318"/>
                                <connector>and</connector>
                                <type ref="9343014"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_293CA650CEA60428E41363EF452297EA636E2B53">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is ustring and Value is JsonValueType</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9342998">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9342999">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343000">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344228"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9342998"/>
                                <connector>is</connector>
                                <type ref="type.9330406"/>
                                <connector>and</connector>
                                <type ref="9342999"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_F0428D168859D23AC8741373B4D4CE9BD7E604BF">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is wstring and Value is JsonValueType</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343001">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343002">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343003">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344289"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343001"/>
                                <connector>is</connector>
                                <type ref="type.9330361"/>
                                <connector>and</connector>
                                <type ref="9343002"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_325A8C52C7395B16BC61FCDE988845CF3900DD30">
                            <name>FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field) where Key is string and Value is JsonValueType</name>
                            <syntax>public void FromJson&lt;Key, Value, KeyCompare>(JsonValue* value, Map&lt;Key, Value, KeyCompare>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343004">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9343005">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9343006">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344350"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343004"/>
                                <connector>is</connector>
                                <type ref="type.9330318"/>
                                <connector>and</connector>
                                <type ref="9343005"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_72C2B78EE74B873441A263F7D964176DF45A1536">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;char>&amp; fieldName, List&lt;T>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;char>&amp; fieldName, List&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343031">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344877"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343031"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343031"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_E85B239D4801966BC0C36D7D0EABDB6B3B4153A6">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;char>&amp; fieldName, T&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;char>&amp; fieldName, T&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343055">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345373"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343055"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_7A814D4F5941FE9E25A4AE5425820D5FD4FF9BE3">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, List&lt;T>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, List&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343033">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344931"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343033"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343033"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_81D5153F2F4A29AEE9BCF03163C9DA49BD818293">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, SharedPtr&lt;T>&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, SharedPtr&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343059">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345390"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343059"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_95041BE10F45478E45EE3508DCFE9BF440E370C6">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, T&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, T&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343057">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345375"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343057"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_70EE2D3B1295C9C06D9783A1F0BC443E999DCF09">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, UniquePtr&lt;T>&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;uchar>&amp; fieldName, UniquePtr&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343058">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345378"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343058"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_FF155A7B997D3D253B9080C12E91442E4B3EADD2">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;wchar>&amp; fieldName, List&lt;T>&amp; field) where T is JsonValueType or T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;wchar>&amp; fieldName, List&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343032">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344904"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343032"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                                <connector>or</connector>
                                <type ref="9343032"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_06EC9ABFB5085084F92AC14030C24A856303CCC9">
                            <name>FromJson&lt;T>(JsonValue* container, const String&lt;wchar>&amp; fieldName, T&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* container, const String&lt;wchar>&amp; fieldName, T&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343056">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>container</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>fieldName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9345374"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343056"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_1220656BC9EA62B69E42434C079779589A12546B">
                            <name>FromJson&lt;T>(JsonValue* value, List&lt;T>&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* value, List&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9342997">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344201"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9342997"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_9ED7B774E057E767955AA4BFB6975EA22778FFBA">
                            <name>FromJson&lt;T>(JsonValue* value, List&lt;T>&amp; field) where T is JsonValueType</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* value, List&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9342996">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344174"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9342996"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_B5BA065DFD8F981C687FCC85E634D2BEC7B5F534">
                            <name>FromJson&lt;T>(JsonValue* value, SharedPtr&lt;T>&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* value, SharedPtr&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343030">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344841"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343030"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_E078F94C43EA1E961A54E8B518B61B936C577B8C">
                            <name>FromJson&lt;T>(JsonValue* value, T&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* value, T&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343028">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344826"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343028"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                        <overload id="function_FromJson_97B0CE17747A8F5A6697880760B61937E269F734">
                            <name>FromJson&lt;T>(JsonValue* value, UniquePtr&lt;T>&amp; field) where T is JsonConstructible</name>
                            <syntax>public void FromJson&lt;T>(JsonValue* value, UniquePtr&lt;T>&amp; field);</syntax>
                            <templateParameters>
                                <templateParameter id="9343029">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9342875"/>
                                </parameter>
                                <parameter>
                                    <name>field</name>
                                    <type ref="type.9344829"/>
                                </parameter>
                            </parameters>
                            <constraint>
                                <type ref="9343029"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2"/>
                            </constraint>
                        </overload>
                    </overloads>
                </function>
                <function id="function_group_ParseJson_D0F1BA19044FC5C9F02861FE13E01F68658D55A5">
                    <name>ParseJson</name>
                    <overloads>
                        <overload id="function_ParseJson_DBF1730C39BEE47518DDF489C3C1CA7CC4D29DFF">
                            <name>ParseJson(const String&lt;char>&amp; jsonText)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ParseJson(const String&lt;char>&amp; jsonText);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonText</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ParseJson_AA1EB3D4CCCAA45FDB88817F137BB8925D3738A7">
                            <name>ParseJson(const String&lt;uchar>&amp; jsonText)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ParseJson(const String&lt;uchar>&amp; jsonText);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonText</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ParseJson_2F088677CC9179ED41188E987956FF77EB3BEDB4">
                            <name>ParseJson(const String&lt;wchar>&amp; jsonText)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ParseJson(const String&lt;wchar>&amp; jsonText);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonText</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                    </overloads>
                </function>
                <function id="function_group_RegisterJsonClass_9F196AC1276E724F3E7E8FF1338696EA5D4B6DBA">
                    <name>RegisterJsonClass</name>
                    <overloads>
                        <overload id="function_RegisterJsonClass_2FBE4E8832266A3352BF1717BFB867612A99D471">
                            <name>RegisterJsonClass(const String&lt;char>&amp; jsonClassName, JsonClassCreatorDelegate creator)</name>
                            <syntax>public void RegisterJsonClass(const String&lt;char>&amp; jsonClassName, JsonClassCreatorDelegate creator);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonClassName</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                                <parameter>
                                    <name>creator</name>
                                    <type ref="9342920"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_RegisterJsonClass_A3D18EABE8AD1F9D0C4A42DF133AD4E9CC2F8B98">
                            <name>RegisterJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonClassCreatorDelegate creator)</name>
                            <syntax>public void RegisterJsonClass(const String&lt;uchar>&amp; jsonClassName, JsonClassCreatorDelegate creator);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonClassName</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                                <parameter>
                                    <name>creator</name>
                                    <type ref="9342920"/>
                                </parameter>
                            </parameters>
                        </overload>
                        <overload id="function_RegisterJsonClass_F2E6271DBF6A1478AD929ED54A519E0D2BCBD5AE">
                            <name>RegisterJsonClass(const String&lt;wchar>&amp; jsonClassName, JsonClassCreatorDelegate creator)</name>
                            <syntax>public void RegisterJsonClass(const String&lt;wchar>&amp; jsonClassName, JsonClassCreatorDelegate creator);</syntax>
                            <parameters>
                                <parameter>
                                    <name>jsonClassName</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                                <parameter>
                                    <name>creator</name>
                                    <type ref="9342920"/>
                                </parameter>
                            </parameters>
                        </overload>
                    </overloads>
                </function>
                <function id="function_group_ToJson_80373CB69AD5A80A6592CC2418A5282FCB2D0F14">
                    <name>ToJson</name>
                    <overloads>
                        <overload id="function_ToJson_574858316A43DEC277D82C9372FC90DD066D0EAC">
                            <name>ToJson(bool value)</name>
                            <syntax>public nothrow UniquePtr&lt;System.Json.JsonValue> ToJson(bool value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9329177"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_B74042AE374BEB28C90779B6CA4C98DA72081002">
                            <name>ToJson(const String&lt;char>&amp; value)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson(const String&lt;char>&amp; value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9330323"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_7F3B903221E5DAB4017615FC50EE5FBC968600F8">
                            <name>ToJson(const String&lt;uchar>&amp; value)</name>
                            <syntax>public nothrow UniquePtr&lt;System.Json.JsonValue> ToJson(const String&lt;uchar>&amp; value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9330411"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_53C005E9773AC76D691F59144E23E4AE81E6EB16">
                            <name>ToJson(const String&lt;wchar>&amp; value)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson(const String&lt;wchar>&amp; value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9330366"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_67DBD75B6175FD816B5C6F7218DFE8FED2B4B7F7">
                            <name>ToJson(double value)</name>
                            <syntax>public nothrow UniquePtr&lt;System.Json.JsonValue> ToJson(double value);</syntax>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9329187"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_D41D6D0DCA6C2F2E779486F47F8BFD91D47426EA">
                            <name>ToJson&lt;K, T, H, C>(const HashMap&lt;K, T, H, C>&amp; value) where K is ustring</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;K, T, H, C>(const HashMap&lt;K, T, H, C>&amp; value);</syntax>
                            <templateParameters>
                                <templateParameter id="9342936">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9342937">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9342938">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9342939">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9344015"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342936"/>
                                <connector>is</connector>
                                <type ref="type.9330406"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_91FBDD8DFFF0BEB6D6C29EC753DF3D9249916F3C">
                            <name>ToJson&lt;K, T, H, C>(const HashMap&lt;K, T, H, C>&amp; value) where K is wstring or K is string</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;K, T, H, C>(const HashMap&lt;K, T, H, C>&amp; value);</syntax>
                            <templateParameters>
                                <templateParameter id="9342940">
                                    <name>K</name>
                                </templateParameter>
                                <templateParameter id="9342941">
                                    <name>T</name>
                                </templateParameter>
                                <templateParameter id="9342942">
                                    <name>H</name>
                                </templateParameter>
                                <templateParameter id="9342943">
                                    <name>C</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9344093"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342940"/>
                                <connector>is</connector>
                                <type ref="type.9330361"/>
                                <connector>or</connector>
                                <type ref="9342940"/>
                                <connector>is</connector>
                                <type ref="type.9330318"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_660ADE07D30699D123CC5F0BECA3E252DF64B33D">
                            <name>ToJson&lt;Key, Value, KeyCompare>(const Map&lt;Key, Value, KeyCompare>&amp; value) where Key is ustring</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;Key, Value, KeyCompare>(const Map&lt;Key, Value, KeyCompare>&amp; value);</syntax>
                            <templateParameters>
                                <templateParameter id="9342930">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9342931">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9342932">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9343893"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342930"/>
                                <connector>is</connector>
                                <type ref="type.9330406"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_F05F6792D09977AF3EDA3344A6CAA5403D58AFD1">
                            <name>ToJson&lt;Key, Value, KeyCompare>(const Map&lt;Key, Value, KeyCompare>&amp; value) where Key is wstring or Key is string</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;Key, Value, KeyCompare>(const Map&lt;Key, Value, KeyCompare>&amp; value);</syntax>
                            <templateParameters>
                                <templateParameter id="9342933">
                                    <name>Key</name>
                                </templateParameter>
                                <templateParameter id="9342934">
                                    <name>Value</name>
                                </templateParameter>
                                <templateParameter id="9342935">
                                    <name>KeyCompare</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9343954"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342933"/>
                                <connector>is</connector>
                                <type ref="type.9330361"/>
                                <connector>or</connector>
                                <type ref="9342933"/>
                                <connector>is</connector>
                                <type ref="type.9330318"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_8FF6AD1D7D1AF315BBE189E97243F7B20A759CCE">
                            <name>ToJson&lt;T>(const List&lt;T>&amp; value)</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;T>(const List&lt;T>&amp; value);</syntax>
                            <templateParameters>
                                <templateParameter id="9342929">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>value</name>
                                    <type ref="type.9343866"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                        </overload>
                        <overload id="function_ToJson_644044BAF600DEEDF2C36244ACC2EA1E2C07DAD6">
                            <name>ToJson&lt;T>(const SharedPtr&lt;T>&amp; ptr) where T is JsonExportable</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;T>(const SharedPtr&lt;T>&amp; ptr);</syntax>
                            <templateParameters>
                                <templateParameter id="9342928">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>ptr</name>
                                    <type ref="type.9343830"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342928"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonExportable_380A04F1C16289D6FC8DB54C68F467C83E565340"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_D4341533DFEB06925268DB024A00F44A7044154D">
                            <name>ToJson&lt;T>(const T&amp; object) where T is JsonExportable</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;T>(const T&amp; object);</syntax>
                            <templateParameters>
                                <templateParameter id="9342926">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>object</name>
                                    <type ref="type.9343812"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342926"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonExportable_380A04F1C16289D6FC8DB54C68F467C83E565340"/>
                            </constraint>
                        </overload>
                        <overload id="function_ToJson_14356EE699F7663903DB09AB9EFE1B206802DDE8">
                            <name>ToJson&lt;T>(const UniquePtr&lt;T>&amp; ptr) where T is JsonExportable</name>
                            <syntax>public UniquePtr&lt;System.Json.JsonValue> ToJson&lt;T>(const UniquePtr&lt;T>&amp; ptr);</syntax>
                            <templateParameters>
                                <templateParameter id="9342927">
                                    <name>T</name>
                                </templateParameter>
                            </templateParameters>
                            <parameters>
                                <parameter>
                                    <name>ptr</name>
                                    <type ref="type.9343818"/>
                                </parameter>
                            </parameters>
                            <returnType ref="type.9343622"/>
                            <constraint>
                                <type ref="9342927"/>
                                <connector>is</connector>
                                <concept ref="concept_JsonExportable_380A04F1C16289D6FC8DB54C68F467C83E565340"/>
                            </constraint>
                        </overload>
                    </overloads>
                </function>
                <function id="function_op_eq_A5531519537EF9A3672EFF09CFA3994163F6008D">
                    <name>operator==(JsonClassCreatorDelegate left, JsonClassCreatorDelegate right)</name>
                    <syntax>public bool operator==(JsonClassCreatorDelegate left, JsonClassCreatorDelegate right);</syntax>
                    <parameters>
                        <parameter>
                            <name>left</name>
                            <type ref="9342920"/>
                        </parameter>
                        <parameter>
                            <name>right</name>
                            <type ref="9342920"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.9329177"/>
                </function>
            </functions>
            <concepts>
                <concept id="concept_JsonConstructible_FDF8EB5A6050ED39397E14EF89FACCA63F29DDF2">
                    <name>JsonConstructible&lt;T></name>
                    <groupName>JsonConstructible</groupName>
                    <syntax>public concept JsonConstructible&lt;T>;</syntax>
                    <templateParameters>
                        <templateParameter id="9342993">
                            <name>T</name>
                        </templateParameter>
                    </templateParameters>
                    <constraints>
                        <constraint>T(JsonValue*)</constraint>
                    </constraints>
                    <axioms/>
                </concept>
                <concept id="concept_JsonExportable_380A04F1C16289D6FC8DB54C68F467C83E565340">
                    <name>JsonExportable&lt;T></name>
                    <groupName>JsonExportable</groupName>
                    <syntax>public concept JsonExportable&lt;T>;</syntax>
                    <templateParameters>
                        <templateParameter id="9342925">
                            <name>T</name>
                        </templateParameter>
                    </templateParameters>
                    <constraints>
                        <constraint>UniquePtr&lt;JsonValue> T.ToJson()</constraint>
                    </constraints>
                    <axioms/>
                </concept>
                <concept id="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D">
                    <name>JsonValueType&lt;T></name>
                    <groupName>JsonValueType</groupName>
                    <syntax>public concept JsonValueType&lt;T>;</syntax>
                    <templateParameters>
                        <templateParameter id="9342995">
                            <name>T</name>
                        </templateParameter>
                    </templateParameters>
                    <constraints>
                        <constraint>
                            System.Meta.IsBasicType&lt;T>()<connector>or</connector>
                            <type ref="9342995"/>
                            <connector>is</connector>
                            <type ref="type.9330318"/>
                            <connector>or</connector>
                            <type ref="9342995"/>
                            <connector>is</connector>
                            <type ref="type.9330361"/>
                            <connector>or</connector>
                            <type ref="9342995"/>
                            <connector>is</connector>
                            <type ref="type.9330406"/>
                        </constraint>
                    </constraints>
                    <axioms/>
                </concept>
            </concepts>
            <delegates>
                <delegate id="9342920">
                    <name>JsonClassCreatorDelegate</name>
                    <syntax>public delegate void* JsonClassCreatorDelegate(JsonValue* value);</syntax>
                    <parameters>
                        <parameter>
                            <name>value</name>
                            <type ref="type.9342875"/>
                        </parameter>
                    </parameters>
                    <returnType ref="type.9329329"/>
                </delegate>
            </delegates>
        </namespace>
    </namespaces>
    <types>
        <type derived="true" id="type.3026">
            <name>AddressOf&amp;&amp;</name>
            <content>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ArrayRule_97D9572F1E83FBA5D44A80D2E6F6F0F63D0E73D0">
            <name>ArrayRule</name>
        </type>
        <type derived="true" id="type.9342967">
            <name>ArrayRule&amp;</name>
            <content>
                <baseType ref="class_ArrayRule_97D9572F1E83FBA5D44A80D2E6F6F0F63D0E73D0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342966">
            <name>ArrayRule*</name>
            <content>
                <baseType ref="class_ArrayRule_97D9572F1E83FBA5D44A80D2E6F6F0F63D0E73D0"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345613">
            <name>ArrayRule*&amp;</name>
            <content>
                <baseType ref="class_ArrayRule_97D9572F1E83FBA5D44A80D2E6F6F0F63D0E73D0"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345612">
            <name>ArrayRule**</name>
            <content>
                <baseType ref="class_ArrayRule_97D9572F1E83FBA5D44A80D2E6F6F0F63D0E73D0"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3098">
            <name>AssertStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9344043" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9344781" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9344121" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9345250" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9345172" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9344625" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9344703" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9331085" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type id="type.9345328" specialization="true">
            <name>Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344045">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9344043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345252">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344123">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9344121"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344705">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9344703"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344783">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9344781"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345330">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9345328"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344627">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9344625"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345252">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345174">
            <name>Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <baseType ref="type.9345172"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344704">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344782">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344044">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345251">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345329">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344122">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345173">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344626">
            <name>Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344736">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344154">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345205">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344658">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345283">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344076">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344814">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345361">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344824">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345293">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344668">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344746">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2589">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9331085"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344086">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345215">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345293">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345371">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344164">
            <name>Bucket&lt;Pair&lt;K, T>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344155">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345206">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344077">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345284">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344737">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345284">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345362">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344659">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344815">
            <name>Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343758" specialization="true">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="type.9343732"/>
            </content>
        </type>
        <type derived="true" id="type.9343760">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>&amp;</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343759">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343791">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343801">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343792">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345522">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**&amp;</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345523">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**&amp;&amp;</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345521">
            <name>Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>***</name>
            <content>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9" specialization="true">
            <name>Bucket&lt;T></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="9329814"/>
            </content>
        </type>
        <type derived="true" id="type.2597">
            <name>Bucket&lt;T>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE" specialization="true">
            <name>Bucket&lt;ValueType></name>
            <content>
                <primaryType ref="class_Bucket_T_433E38F4F4F8B8CAD8F9E1BEEE83A583734647E9"/>
                <argumentType ref="9329835"/>
            </content>
        </type>
        <type derived="true" id="type.2610">
            <name>Bucket&lt;ValueType>*&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Bucket_ValueType_5A3E2F108F8CC061B9AC0A82F50CCDA26037ADCE"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="9343050">
            <name>C</name>
        </type>
        <type derived="true" id="type.3122">
            <name>CharParser&amp;&amp;</name>
            <content>
                <baseType ref="class_CharParser_F30B4B7DDC9B8D3CD1476C03049B3C7189028FDA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3105">
            <name>CodeExpandingVisitor&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3004">
            <name>CodeFormatter&amp;&amp;</name>
            <content>
                <baseType ref="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3041">
            <name>Complement&amp;&amp;</name>
            <content>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342834">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2494">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342834">
            <name>CompoundStatement&amp;</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2493">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342833">
            <name>CompoundStatement*</name>
            <content>
                <baseType ref="class_CompoundStatement_D64148F52F69E76B5603068E1B519F54CC99F8A9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3099">
            <name>Const&amp;&amp;</name>
            <content>
                <baseType ref="class_Const_9F4AD8D639ADA7A3FA35707EF7047095B214626A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3059">
            <name>Construct&amp;&amp;</name>
            <content>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723">
            <name>Context</name>
        </type>
        <type id="class_Context_CCB8DD1BC453001E743B1DAE18359E22470CB70C">
            <name>Context</name>
        </type>
        <type id="class_Context_29B31567A5E1B939D1D54BB81169ED882D01557F">
            <name>Context</name>
        </type>
        <type id="class_Context_C2EF2873965CE9318EBD0F1FE7D4908017FAAE75">
            <name>Context</name>
        </type>
        <type id="class_Context_AFEF333695DD586BEFCFA47EA307519802EF9BD3">
            <name>Context</name>
        </type>
        <type id="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B">
            <name>Context</name>
        </type>
        <type id="class_Context_BCC9FCB3E87A02D9FE9414B76F130D8B1771991A">
            <name>Context</name>
        </type>
        <type derived="true" id="type.9342952">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_29B31567A5E1B939D1D54BB81169ED882D01557F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342958">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_CCB8DD1BC453001E743B1DAE18359E22470CB70C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342988">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342982">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_BCC9FCB3E87A02D9FE9414B76F130D8B1771991A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342976">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342970">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_AFEF333695DD586BEFCFA47EA307519802EF9BD3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342964">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_C2EF2873965CE9318EBD0F1FE7D4908017FAAE75"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342988">
            <name>Context&amp;</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342987">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342963">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_C2EF2873965CE9318EBD0F1FE7D4908017FAAE75"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342957">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_CCB8DD1BC453001E743B1DAE18359E22470CB70C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342969">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_AFEF333695DD586BEFCFA47EA307519802EF9BD3"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342975">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342987">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342981">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_BCC9FCB3E87A02D9FE9414B76F130D8B1771991A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342951">
            <name>Context*</name>
            <content>
                <baseType ref="class_Context_29B31567A5E1B939D1D54BB81169ED882D01557F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345558">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_29B31567A5E1B939D1D54BB81169ED882D01557F"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345625">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345615">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345605">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_C2EF2873965CE9318EBD0F1FE7D4908017FAAE75"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345610">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_AFEF333695DD586BEFCFA47EA307519802EF9BD3"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345600">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_CCB8DD1BC453001E743B1DAE18359E22470CB70C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345620">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_BCC9FCB3E87A02D9FE9414B76F130D8B1771991A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345625">
            <name>Context*&amp;</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345604">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_C2EF2873965CE9318EBD0F1FE7D4908017FAAE75"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345599">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_CCB8DD1BC453001E743B1DAE18359E22470CB70C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345614">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345609">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_AFEF333695DD586BEFCFA47EA307519802EF9BD3"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345619">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_BCC9FCB3E87A02D9FE9414B76F130D8B1771991A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345624">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_DC3014771158BE06916FB7B289746C6E33F2CB6B"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345557">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_29B31567A5E1B939D1D54BB81169ED882D01557F"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345614">
            <name>Context**</name>
            <content>
                <baseType ref="class_Context_A9DFFCA47D4C031CE59C631968775B728DC27723"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330292" specialization="true">
            <name>Counter&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type id="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30" specialization="true">
            <name>Counter&lt;T></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="9329972"/>
            </content>
        </type>
        <type derived="true" id="type.9345402">
            <name>Counter&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344853">
            <name>Counter&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343839">
            <name>Counter&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2716">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344858">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2701">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2694">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2723">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345407">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2682">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2685">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345407">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343844">
            <name>Counter&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345401">
            <name>Counter&lt;T>*</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343838">
            <name>Counter&lt;T>*</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344852">
            <name>Counter&lt;T>*</name>
            <content>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A" specialization="true">
            <name>Counter&lt;U></name>
            <content>
                <primaryType ref="class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <argumentType ref="9329965"/>
            </content>
        </type>
        <type derived="true" id="type.3077">
            <name>DeleteStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3023">
            <name>Deref&amp;&amp;</name>
            <content>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3080">
            <name>DestroyStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342832">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2492">
            <name>DomObject&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3017">
            <name>DomObject&amp;&amp;</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342831">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2491">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342831">
            <name>DomObject*</name>
            <content>
                <baseType ref="class_DomObject_A6EA469160F8FD3B17826E7729430E5F3D07C4DF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338354" specialization="true">
            <name>EqualTo&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_EqualTo_T_483B326DC1355EE905B9A0F4E9331F702788D28E"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type id="class_EscapeRule_F6F8C5008CC9D44A04F0BB4D7CFA25EAF565A0A4">
            <name>EscapeRule</name>
        </type>
        <type derived="true" id="type.9342979">
            <name>EscapeRule&amp;</name>
            <content>
                <baseType ref="class_EscapeRule_F6F8C5008CC9D44A04F0BB4D7CFA25EAF565A0A4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342978">
            <name>EscapeRule*</name>
            <content>
                <baseType ref="class_EscapeRule_F6F8C5008CC9D44A04F0BB4D7CFA25EAF565A0A4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345623">
            <name>EscapeRule*&amp;</name>
            <content>
                <baseType ref="class_EscapeRule_F6F8C5008CC9D44A04F0BB4D7CFA25EAF565A0A4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345622">
            <name>EscapeRule**</name>
            <content>
                <baseType ref="class_EscapeRule_F6F8C5008CC9D44A04F0BB4D7CFA25EAF565A0A4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3117">
            <name>ExpectationParser&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3083">
            <name>ExpressionStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_FieldRule_A2491AFE296C3CD848691B73370AC927B83536EC">
            <name>FieldRule</name>
        </type>
        <type derived="true" id="type.9342961">
            <name>FieldRule&amp;</name>
            <content>
                <baseType ref="class_FieldRule_A2491AFE296C3CD848691B73370AC927B83536EC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342960">
            <name>FieldRule*</name>
            <content>
                <baseType ref="class_FieldRule_A2491AFE296C3CD848691B73370AC927B83536EC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345608">
            <name>FieldRule*&amp;</name>
            <content>
                <baseType ref="class_FieldRule_A2491AFE296C3CD848691B73370AC927B83536EC"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345607">
            <name>FieldRule**</name>
            <content>
                <baseType ref="class_FieldRule_A2491AFE296C3CD848691B73370AC927B83536EC"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051" specialization="true">
            <name>ForwardList&lt;T></name>
            <content>
                <primaryType ref="class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <argumentType ref="9329723"/>
            </content>
        </type>
        <type derived="true" id="type.2547">
            <name>ForwardList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardList_T_49B88E2B81E13ED03DA3835C7A074DB98CBE7051"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA" specialization="true">
            <name>ForwardListNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329716"/>
                <argumentType ref="9329717"/>
                <argumentType ref="9329718"/>
            </content>
        </type>
        <type derived="true" id="type.2543">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2544">
            <name>ForwardListNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84" specialization="true">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329725"/>
                <argumentType ref="type.9330654"/>
                <argumentType ref="type.9330656"/>
            </content>
        </type>
        <type derived="true" id="type.2549">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2546">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2551">
            <name>ForwardListNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_R_T_P_61A6CB12925BCC1B0FE068240087DCBFA0F6EF84"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3" specialization="true">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_ForwardListNodeIterator_T_R_P_F664F07C33DBAABDB2487D2FBE1538C3E6F42EBA"/>
                <argumentType ref="9329723"/>
                <argumentType ref="type.9330575"/>
                <argumentType ref="type.9330576"/>
            </content>
        </type>
        <type derived="true" id="type.2548">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2545">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2550">
            <name>ForwardListNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ForwardListNodeIterator_T_T_C_R_T_C_P_9A954CA19F40C664A03180CFC9EED709B3C4B0D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3089">
            <name>GotoCaseStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3074">
            <name>GotoStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="9343053">
            <name>H</name>
        </type>
        <type id="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36" specialization="true">
            <name>HashMap&lt;K, T, H, C></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="9343016"/>
                <argumentType ref="9343017"/>
                <argumentType ref="9343018"/>
                <argumentType ref="9343019"/>
            </content>
        </type>
        <type id="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36" specialization="true">
            <name>HashMap&lt;K, T, H, C></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="9343020"/>
                <argumentType ref="9343021"/>
                <argumentType ref="9343022"/>
                <argumentType ref="9343023"/>
            </content>
        </type>
        <type derived="true" id="type.9344594">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345297">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344750">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344090">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344012">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345297">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345141">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344672">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345219">
            <name>HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345218">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344593">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344011">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345296">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344671">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344749">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345140">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344089">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345296">
            <name>HashMap&lt;K, T, H, C>*</name>
            <content>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343726" specialization="true">
            <name>HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="9342920"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type derived="true" id="type.9343728">
            <name>HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9343726"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343727">
            <name>HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9343726"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345542">
            <name>HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.9343726"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345541">
            <name>HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.9343726"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338348" specialization="true">
            <name>Hasher&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Hasher_T_9E06FCD9B56B8B3B7E7F8286BE8179D3B1CB8325"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type id="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B" specialization="true">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9343020"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <argumentType ref="9343022"/>
                <argumentType ref="9343023"/>
            </content>
        </type>
        <type derived="true" id="type.9344033">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345240">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345162">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345318">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344111">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344615">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344771">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344693">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344717">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344795">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2585">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345264">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344135">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345342">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345186">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344639">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345342">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344057">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345317">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344770">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345239">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344692">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344032">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345161">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344614">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345317">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344110">
            <name>Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2" specialization="true">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9329834"/>
                <argumentType ref="9329835"/>
                <argumentType ref="9329836"/>
                <argumentType ref="9329837"/>
                <argumentType ref="9329838"/>
            </content>
        </type>
        <type derived="true" id="type.2605">
            <name>Hashtable&lt;KeyType, ValueType, KeyOfValue, HashFun, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343746" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9343732"/>
                <argumentType ref="type.9343736"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type derived="true" id="type.9343748">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343772">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343747">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345533">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345534">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345532">
            <name>Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.9343746"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9338662" specialization="true">
            <name>Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9338653"/>
                <argumentType ref="type.9338348"/>
                <argumentType ref="type.9338354"/>
            </content>
        </type>
        <type id="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C" specialization="true">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C></name>
            <content>
                <primaryType ref="class_Hashtable_KeyType_ValueType_KeyOfValue_HashFun_Compare_B254B0B4EA63FC06733945C26C411D4DEE90B7D2"/>
                <argumentType ref="9329814"/>
                <argumentType ref="9329814"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="9329815"/>
                <argumentType ref="9329816"/>
            </content>
        </type>
        <type derived="true" id="type.2593">
            <name>Hashtable&lt;T, T, Identity&lt;T>, H, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_Hashtable_T_T_Identity_T_H_C_73CFDACB21FE662CFE0879B3582A7D1FB223385C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9345166" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345147"/>
                <argumentType ref="type.9345146"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344775" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344756"/>
                <argumentType ref="type.9344755"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344697" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344678"/>
                <argumentType ref="type.9344677"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344619" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344600"/>
                <argumentType ref="type.9344599"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344115" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344096"/>
                <argumentType ref="type.9344095"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344037" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344018"/>
                <argumentType ref="type.9344017"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345322" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345303"/>
                <argumentType ref="type.9345302"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345244" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345225"/>
                <argumentType ref="type.9345224"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345166" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345147"/>
                <argumentType ref="type.9345146"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344039">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344037"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344621">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344619"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345324">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344699">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344697"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345246">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345244"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345324">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345168">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345166"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344777">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344117">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344115"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344698">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344697"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345245">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345244"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345167">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345166"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344620">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344619"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345323">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345322"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344116">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344115"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345167">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345166"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344776">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344038">
            <name>HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344037"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9344789" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344766"/>
                <argumentType ref="type.9344787"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344633" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344610"/>
                <argumentType ref="type.9344631"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344129" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344106"/>
                <argumentType ref="type.9344127"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344051" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344028"/>
                <argumentType ref="type.9344049"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345336" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345313"/>
                <argumentType ref="type.9345334"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345180" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345157"/>
                <argumentType ref="type.9345178"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345258" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345235"/>
                <argumentType ref="type.9345256"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9344711" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9344688"/>
                <argumentType ref="type.9344709"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type id="type.9345258" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="type.9345235"/>
                <argumentType ref="type.9345256"/>
                <argumentType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9345338">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344131">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344129"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344791">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344789"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345182">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345180"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344635">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344713">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345338">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344053">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9344051"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345260">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <baseType ref="type.9345258"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344790">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344789"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345181">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345180"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344052">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344051"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344712">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344711"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344634">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345337">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345336"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345259">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345258"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344130">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9344129"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345181">
            <name>HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <baseType ref="type.9345180"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343752" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9343732"/>
                <argumentType ref="type.9343734"/>
                <argumentType ref="type.9343733"/>
                <argumentType ref="type.9343746"/>
            </content>
        </type>
        <type derived="true" id="type.9343754">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9343752"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345535">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343752"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343753">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9343752"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343766" specialization="true">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9343732"/>
                <argumentType ref="type.9343743"/>
                <argumentType ref="type.9343764"/>
                <argumentType ref="type.9343746"/>
            </content>
        </type>
        <type derived="true" id="type.9343768">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9343766"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345543">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343766"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343767">
            <name>HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9343766"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343423" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.2861" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.9343423" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type derived="true" id="type.2863">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.2861"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343425">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9343423"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343424">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9343423"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2862">
            <name>HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.2861"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343429" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.2867" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type id="type.9343429" specialization="true">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <primaryType ref="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
                <argumentType ref="type.9338662"/>
            </content>
        </type>
        <type derived="true" id="type.9343431">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9343429"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2869">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.2867"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343431">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <baseType ref="type.9343429"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343430">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9343429"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2868">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.2867"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343430">
            <name>HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <baseType ref="type.9343429"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3063">
            <name>Identifier&amp;&amp;</name>
            <content>
                <baseType ref="class_Identifier_4DD63F2DF214C9DDE3105925C5DFD200FC4065A7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3044">
            <name>Invoke&amp;&amp;</name>
            <content>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18">
            <name>JsonArray</name>
        </type>
        <type derived="true" id="type.9342910">
            <name>JsonArray&amp;</name>
            <content>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342909">
            <name>JsonArray*</name>
            <content>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345589">
            <name>JsonArray*&amp;</name>
            <content>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345588">
            <name>JsonArray**</name>
            <content>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79">
            <name>JsonBool</name>
        </type>
        <type derived="true" id="type.9342892">
            <name>JsonBool&amp;</name>
            <content>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3127">
            <name>JsonBool&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342891">
            <name>JsonBool*</name>
            <content>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345639">
            <name>JsonBool*&amp;</name>
            <content>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345638">
            <name>JsonBool**</name>
            <content>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="9342920">
            <name>JsonClassCreatorDelegate</name>
        </type>
        <type derived="true" id="type.9343724">
            <name>JsonClassCreatorDelegate&amp;</name>
            <content>
                <baseType ref="9342920"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343725">
            <name>JsonClassCreatorDelegate&amp;&amp;</name>
            <content>
                <baseType ref="9342920"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343723">
            <name>JsonClassCreatorDelegate*</name>
            <content>
                <baseType ref="9342920"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E">
            <name>JsonClassFactory</name>
        </type>
        <type derived="true" id="type.9342923">
            <name>JsonClassFactory&amp;</name>
            <content>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342922">
            <name>JsonClassFactory*</name>
            <content>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345525">
            <name>JsonClassFactory*&amp;</name>
            <content>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345524">
            <name>JsonClassFactory**</name>
            <content>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318">
            <name>JsonGrammar</name>
        </type>
        <type derived="true" id="type.9342946">
            <name>JsonGrammar&amp;</name>
            <content>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3130">
            <name>JsonGrammar&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342945">
            <name>JsonGrammar*</name>
            <content>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345511">
            <name>JsonGrammar*&amp;</name>
            <content>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345510">
            <name>JsonGrammar**</name>
            <content>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723">
            <name>JsonImportException</name>
        </type>
        <type derived="true" id="type.9342991">
            <name>JsonImportException&amp;</name>
            <content>
                <baseType ref="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344171">
            <name>JsonImportException&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342990">
            <name>JsonImportException*</name>
            <content>
                <baseType ref="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2">
            <name>JsonNull</name>
        </type>
        <type derived="true" id="type.9343618">
            <name>JsonNull&amp;</name>
            <content>
                <baseType ref="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343617">
            <name>JsonNull*</name>
            <content>
                <baseType ref="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonNumber_BA94887A1742701B420D069040E7953026161429">
            <name>JsonNumber</name>
        </type>
        <type derived="true" id="type.9342886">
            <name>JsonNumber&amp;</name>
            <content>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3126">
            <name>JsonNumber&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342885">
            <name>JsonNumber*</name>
            <content>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345570">
            <name>JsonNumber*&amp;</name>
            <content>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345569">
            <name>JsonNumber**</name>
            <content>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D">
            <name>JsonObject</name>
        </type>
        <type derived="true" id="type.9342904">
            <name>JsonObject&amp;</name>
            <content>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342903">
            <name>JsonObject*</name>
            <content>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345493">
            <name>JsonObject*&amp;</name>
            <content>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345492">
            <name>JsonObject**</name>
            <content>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9">
            <name>JsonParser</name>
        </type>
        <type derived="true" id="type.9342916">
            <name>JsonParser&amp;</name>
            <content>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342915">
            <name>JsonParser*</name>
            <content>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345508">
            <name>JsonParser*&amp;</name>
            <content>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345507">
            <name>JsonParser**</name>
            <content>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516">
            <name>JsonString</name>
        </type>
        <type derived="true" id="type.9342898">
            <name>JsonString&amp;</name>
            <content>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343621">
            <name>JsonString&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342897">
            <name>JsonString*</name>
            <content>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345497">
            <name>JsonString*&amp;</name>
            <content>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345496">
            <name>JsonString**</name>
            <content>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A">
            <name>JsonValue</name>
        </type>
        <type derived="true" id="type.9342876">
            <name>JsonValue&amp;</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345545">
            <name>JsonValue&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342875">
            <name>JsonValue*</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343694">
            <name>JsonValue*&amp;</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345442">
            <name>JsonValue*&amp;&amp;</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345441">
            <name>JsonValue**</name>
            <content>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="9343051">
            <name>K</name>
        </type>
        <type id="9343040">
            <name>Key</name>
        </type>
        <type id="9343042">
            <name>KeyCompare</name>
        </type>
        <type derived="true" id="type.3114">
            <name>KleeneStarParser&amp;&amp;</name>
            <content>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343629" specialization="true">
            <name>Less&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_Less_T_F840BD6533DFD3706784C819E04FA4FE41C4F3D2"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.9343634">
            <name>Less&lt;String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9343629"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345450">
            <name>Less&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343629"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343633">
            <name>Less&lt;String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9343629"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20" specialization="true">
            <name>LinkedList&lt;T></name>
            <content>
                <primaryType ref="class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <argumentType ref="9329851"/>
            </content>
        </type>
        <type derived="true" id="type.2614">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2613">
            <name>LinkedList&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LinkedList_T_1596EFE994FFA67F5471B17D62A2A8C45B9A2B20"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9344721" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9344704"/>
            </content>
        </type>
        <type id="type.9344799" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9344782"/>
            </content>
        </type>
        <type id="type.9344643" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9344626"/>
            </content>
        </type>
        <type id="type.9331104" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331086"/>
            </content>
        </type>
        <type id="type.9344139" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9344122"/>
            </content>
        </type>
        <type id="type.9345268" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9345251"/>
            </content>
        </type>
        <type id="type.9345346" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9345329"/>
            </content>
        </type>
        <type id="type.9345268" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9345251"/>
            </content>
        </type>
        <type id="type.9344061" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9344044"/>
            </content>
        </type>
        <type id="type.9345190" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9345173"/>
            </content>
        </type>
        <type derived="true" id="type.9345270">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9345268"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344801">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9344799"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344723">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9344721"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344063">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9344061"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345348">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9345346"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345192">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9345190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344141">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9344139"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344645">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <baseType ref="type.9344643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344745">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344721"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344667">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344643"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345292">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345268"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344085">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344061"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345370">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345346"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344823">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344799"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345214">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345190"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2588">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331104"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344163">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344139"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345292">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345268"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345347">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9345346"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344800">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9344799"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344644">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9344643"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344140">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9344139"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345191">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9345190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344062">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9344061"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344722">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9344721"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345269">
            <name>List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <baseType ref="type.9345268"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343776" specialization="true">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9343759"/>
            </content>
        </type>
        <type derived="true" id="type.9343778">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*>&amp;</name>
            <content>
                <baseType ref="type.9343776"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343800">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343776"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343777">
            <name>List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*>*</name>
            <content>
                <baseType ref="type.9343776"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9331257" specialization="true">
            <name>List&lt;Bucket&lt;T>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331240"/>
            </content>
        </type>
        <type derived="true" id="type.2596">
            <name>List&lt;Bucket&lt;T>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331257"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331442" specialization="true">
            <name>List&lt;Bucket&lt;ValueType>*></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9331423"/>
            </content>
        </type>
        <type derived="true" id="type.2609">
            <name>List&lt;Bucket&lt;ValueType>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331442"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332807" specialization="true">
            <name>List&lt;String&lt;CharT>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
            </content>
        </type>
        <type derived="true" id="type.2741">
            <name>List&lt;String&lt;CharT>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332807"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="9342996"/>
            </content>
        </type>
        <type id="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C" specialization="true">
            <name>List&lt;T></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="9342997"/>
            </content>
        </type>
        <type derived="true" id="type.9343863">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344877">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344904">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344931">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344174">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344201">
            <name>List&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343886">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344900">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344927">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344954">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344927">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344197">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2735">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2617">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2653">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344224">
            <name>List&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344930">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343862">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344876">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344903">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344200">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344173">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344903">
            <name>List&lt;T>*</name>
            <content>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343695" specialization="true">
            <name>List&lt;UniquePtr&lt;System.Json.JsonValue>></name>
            <content>
                <primaryType ref="class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <argumentType ref="type.9343622"/>
            </content>
        </type>
        <type derived="true" id="type.9343697">
            <name>List&lt;UniquePtr&lt;System.Json.JsonValue>>&amp;</name>
            <content>
                <baseType ref="type.9343695"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343715">
            <name>List&lt;UniquePtr&lt;System.Json.JsonValue>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343695"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343696">
            <name>List&lt;UniquePtr&lt;System.Json.JsonValue>>*</name>
            <content>
                <baseType ref="type.9343695"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3067">
            <name>Literal&amp;&amp;</name>
            <content>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1" specialization="true">
            <name>LockGuard&lt;Mtx></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="9329880"/>
            </content>
        </type>
        <type derived="true" id="type.2641">
            <name>LockGuard&lt;Mtx>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335149" specialization="true">
            <name>LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <primaryType ref="class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <argumentType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.2828">
            <name>LockGuard&lt;System.Threading.Mutex>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335149"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3100">
            <name>LvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_LvalueRef_564B7A22159B1EA0883821F35678B0406B055A05"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D" specialization="true">
            <name>Map&lt;Key, Value, KeyCompare></name>
            <content>
                <primaryType ref="class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <argumentType ref="9342933"/>
                <argumentType ref="9342934"/>
                <argumentType ref="9342935"/>
            </content>
        </type>
        <type derived="true" id="type.9344958">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344472">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345080">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344228">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344411">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343951">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344958">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344350">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344533">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344289">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345019">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343890">
            <name>Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344288">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344227">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344957">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344471">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345079">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343950">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345018">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344957">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344532">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344410">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344349">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343889">
            <name>Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343635" specialization="true">
            <name>Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9342875"/>
                <argumentType ref="type.9343629"/>
            </content>
        </type>
        <type derived="true" id="type.9343637">
            <name>Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9343635"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343636">
            <name>Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9343635"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345485">
            <name>Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>*&amp;</name>
            <content>
                <baseType ref="type.9343635"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345484">
            <name>Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>**</name>
            <content>
                <baseType ref="type.9343635"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2638">
            <name>Mtx&amp;</name>
            <content>
                <baseType ref="9329880"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3062">
            <name>New&amp;&amp;</name>
            <content>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3020">
            <name>Not&amp;&amp;</name>
            <content>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_NumberRule_27C8EFF3C84114164EA6042FB8F167C6EB90366C">
            <name>NumberRule</name>
        </type>
        <type derived="true" id="type.9342985">
            <name>NumberRule&amp;</name>
            <content>
                <baseType ref="class_NumberRule_27C8EFF3C84114164EA6042FB8F167C6EB90366C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342984">
            <name>NumberRule*</name>
            <content>
                <baseType ref="class_NumberRule_27C8EFF3C84114164EA6042FB8F167C6EB90366C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345628">
            <name>NumberRule*&amp;</name>
            <content>
                <baseType ref="class_NumberRule_27C8EFF3C84114164EA6042FB8F167C6EB90366C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345627">
            <name>NumberRule**</name>
            <content>
                <baseType ref="class_NumberRule_27C8EFF3C84114164EA6042FB8F167C6EB90366C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="class_ObjectRule_5E2C4DD6D6F88EBF302BC3AE586ACFE38942C13D">
            <name>ObjectRule</name>
        </type>
        <type derived="true" id="type.9342955">
            <name>ObjectRule&amp;</name>
            <content>
                <baseType ref="class_ObjectRule_5E2C4DD6D6F88EBF302BC3AE586ACFE38942C13D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342954">
            <name>ObjectRule*</name>
            <content>
                <baseType ref="class_ObjectRule_5E2C4DD6D6F88EBF302BC3AE586ACFE38942C13D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345603">
            <name>ObjectRule*&amp;</name>
            <content>
                <baseType ref="class_ObjectRule_5E2C4DD6D6F88EBF302BC3AE586ACFE38942C13D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345602">
            <name>ObjectRule**</name>
            <content>
                <baseType ref="class_ObjectRule_5E2C4DD6D6F88EBF302BC3AE586ACFE38942C13D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3108">
            <name>OptionalParser&amp;&amp;</name>
            <content>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9345187" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9345166"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344640" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344619"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9345265" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9345244"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344718" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344697"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9345343" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9345322"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344136" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344115"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344796" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344775"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344058" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344037"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9344060">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344058"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345345">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345343"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344720">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344718"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344798">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344796"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344642">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344640"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345189">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345345">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345343"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344138">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344136"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345267">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345265"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345266">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9345265"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344797">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9344796"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344719">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9344718"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345344">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9345343"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344137">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9344136"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344059">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9344058"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344641">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9344640"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345188">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>, bool>*</name>
            <content>
                <baseType ref="type.9345187"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343773" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9343752"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9343775">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9343773"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345537">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343773"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343774">
            <name>Pair&lt;HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9343773"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2873" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.2861"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9343435" specialization="true">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9343423"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.2875">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.2873"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343437">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>&amp;</name>
            <content>
                <baseType ref="type.9343435"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343436">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9343435"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2874">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.2873"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343436">
            <name>Pair&lt;HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>, bool>*</name>
            <content>
                <baseType ref="type.9343435"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980" specialization="true">
            <name>Pair&lt;K, T></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="9342940"/>
                <argumentType ref="9342941"/>
            </content>
        </type>
        <type derived="true" id="type.9344756">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345225">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344096">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345303">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344018">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344600">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345147">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345225">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344678">
            <name>Pair&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345224">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345302">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344677">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345302">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344755">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344017">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344599">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344095">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345146">
            <name>Pair&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183" specialization="true">
            <name>Pair&lt;Key, Value></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="9343010"/>
                <argumentType ref="9343011"/>
            </content>
        </type>
        <type derived="true" id="type.9345086">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344964">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344295">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344356">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343957">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343896">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344234">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344478">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345086">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345025">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344539">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344417">
            <name>Pair&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345085">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345024">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343956">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344294">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344355">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344477">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345024">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344538">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343895">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344963">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344233">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344416">
            <name>Pair&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345067" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9345059"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344276" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344268"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344337" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344329"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344398" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344390"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344459" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344451"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9345006" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344998"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344520" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344512"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9344581" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9344573"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9343938" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9343930"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9343999" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9343991"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type id="type.9345128" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9345120"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9344001">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9343999"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344278">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344276"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345130">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345128"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344400">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344398"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344339">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344337"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344583">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344581"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345069">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345067"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345008">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345006"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344522">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344520"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345069">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9345067"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344461">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9344459"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343940">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9343938"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344582">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344581"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345129">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9345128"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344521">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344520"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345007">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9345006"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344277">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344276"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344000">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9343999"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345129">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9345128"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344338">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344337"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345068">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9345067"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344399">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344398"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343939">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9343938"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344460">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>, bool>*</name>
            <content>
                <baseType ref="type.9344459"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343684" specialization="true">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>, bool></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9343676"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.9343686">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>, bool>&amp;</name>
            <content>
                <baseType ref="type.9343684"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345481">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>, bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343684"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343685">
            <name>Pair&lt;RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>, bool>*</name>
            <content>
                <baseType ref="type.9343684"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343641" specialization="true">
            <name>Pair&lt;String&lt;uchar>, JsonValue*></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9342875"/>
            </content>
        </type>
        <type derived="true" id="type.9343643">
            <name>Pair&lt;String&lt;uchar>, JsonValue*>&amp;</name>
            <content>
                <baseType ref="type.9343641"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345440">
            <name>Pair&lt;String&lt;uchar>, JsonValue*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343641"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343642">
            <name>Pair&lt;String&lt;uchar>, JsonValue*>*</name>
            <content>
                <baseType ref="type.9343641"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343732" specialization="true">
            <name>Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="9342920"/>
            </content>
        </type>
        <type derived="true" id="type.9343734">
            <name>Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;</name>
            <content>
                <baseType ref="type.9343732"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345513">
            <name>Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343732"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343733">
            <name>Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*</name>
            <content>
                <baseType ref="type.9343732"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9" specialization="true">
            <name>Pair&lt;T, U></name>
            <content>
                <primaryType ref="class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <argumentType ref="9329894"/>
                <argumentType ref="9329895"/>
            </content>
        </type>
        <type derived="true" id="type.9342836">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2496">
            <name>Parser&amp;</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342835">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2495">
            <name>Parser*</name>
            <content>
                <baseType ref="class_Parser_59591398FA427ADC5EC015FB52651571177DB77D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3121">
            <name>ParsingData&amp;&amp;</name>
            <content>
                <baseType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342838">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2498">
            <name>ParsingDomain&amp;</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342837">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2497">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9337419">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342837">
            <name>ParsingDomain*</name>
            <content>
                <baseType ref="class_ParsingDomain_DBADEDB24194482080D6E7112DE96AB5FCAD1A87"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3102">
            <name>Pointer&amp;&amp;</name>
            <content>
                <baseType ref="class_Pointer_37B1358240AF7AEA32F2A089E384F29AB860D4E6"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3111">
            <name>PositiveParser&amp;&amp;</name>
            <content>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3050">
            <name>PostfixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3047">
            <name>PostfixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3032">
            <name>PrefixDecrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3029">
            <name>PrefixIncrement&amp;&amp;</name>
            <content>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339081" specialization="true">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337276"/>
                <argumentType ref="type.9339079"/>
                <argumentType ref="type.9339080"/>
            </content>
        </type>
        <type derived="true" id="type.2893">
            <name>RandomAccessIter&lt;ActionParser*, const ActionParser*&amp;, const ActionParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339081"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333990" specialization="true">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330100"/>
                <argumentType ref="type.9333833"/>
                <argumentType ref="type.9333989"/>
            </content>
        </type>
        <type derived="true" id="type.2785">
            <name>RandomAccessIter&lt;Age*, const Age*&amp;, const Age**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335030" specialization="true">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330171"/>
                <argumentType ref="type.9334873"/>
                <argumentType ref="type.9335029"/>
            </content>
        </type>
        <type derived="true" id="type.2810">
            <name>RandomAccessIter&lt;AliasType*, const AliasType*&amp;, const AliasType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335030"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334614" specialization="true">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330145"/>
                <argumentType ref="type.9334457"/>
                <argumentType ref="type.9334613"/>
            </content>
        </type>
        <type derived="true" id="type.2800">
            <name>RandomAccessIter&lt;BidiClass*, const BidiClass*&amp;, const BidiClass**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334614"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334822" specialization="true">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330158"/>
                <argumentType ref="type.9334665"/>
                <argumentType ref="type.9334821"/>
            </content>
        </type>
        <type derived="true" id="type.2805">
            <name>RandomAccessIter&lt;BidiPairedBracketType*, const BidiPairedBracketType*&amp;, const BidiPairedBracketType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334822"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333353" specialization="true">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330070"/>
                <argumentType ref="type.9333182"/>
                <argumentType ref="type.9333352"/>
            </content>
        </type>
        <type derived="true" id="type.2770">
            <name>RandomAccessIter&lt;BinaryProperty*, const BinaryProperty*&amp;, const BinaryProperty**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333571" specialization="true">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330080"/>
                <argumentType ref="type.9333414"/>
                <argumentType ref="type.9333570"/>
            </content>
        </type>
        <type derived="true" id="type.2775">
            <name>RandomAccessIter&lt;Block*, const Block*&amp;, const Block**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333571"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338623" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338590"/>
                <argumentType ref="type.9338621"/>
                <argumentType ref="type.9338622"/>
            </content>
        </type>
        <type derived="true" id="type.2860">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, Bucket&lt;Grammar*>*&amp;, Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338623"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338614" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338590"/>
                <argumentType ref="type.9338612"/>
                <argumentType ref="type.9338613"/>
            </content>
        </type>
        <type derived="true" id="type.2859">
            <name>RandomAccessIter&lt;Bucket&lt;Grammar*>*, const Bucket&lt;Grammar*>*&amp;, const Bucket&lt;Grammar*>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338614"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9344738" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344704"/>
                <argumentType ref="type.9344736"/>
                <argumentType ref="type.9344737"/>
            </content>
        </type>
        <type id="type.9344660" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344626"/>
                <argumentType ref="type.9344658"/>
                <argumentType ref="type.9344659"/>
            </content>
        </type>
        <type id="type.9344078" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344044"/>
                <argumentType ref="type.9344076"/>
                <argumentType ref="type.9344077"/>
            </content>
        </type>
        <type id="type.9345363" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345329"/>
                <argumentType ref="type.9345361"/>
                <argumentType ref="type.9345362"/>
            </content>
        </type>
        <type id="type.9345207" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345173"/>
                <argumentType ref="type.9345205"/>
                <argumentType ref="type.9345206"/>
            </content>
        </type>
        <type id="type.9344156" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344122"/>
                <argumentType ref="type.9344154"/>
                <argumentType ref="type.9344155"/>
            </content>
        </type>
        <type id="type.9345285" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345251"/>
                <argumentType ref="type.9345283"/>
                <argumentType ref="type.9345284"/>
            </content>
        </type>
        <type id="type.9331121" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331086"/>
                <argumentType ref="type.9331119"/>
                <argumentType ref="type.9331120"/>
            </content>
        </type>
        <type id="type.9331199" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331165"/>
                <argumentType ref="type.9331197"/>
                <argumentType ref="type.9331198"/>
            </content>
        </type>
        <type id="type.9344816" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344782"/>
                <argumentType ref="type.9344814"/>
                <argumentType ref="type.9344815"/>
            </content>
        </type>
        <type derived="true" id="type.9345209">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345207"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344662">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344660"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344740">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344738"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345287">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345285"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344818">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344816"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344080">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344078"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345365">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345363"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344158">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344156"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2955">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344738"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2973">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345207"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2592">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331199"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2933">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344078"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2935">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344156"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2953">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344660"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2977">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345363"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2587">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331121"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2975">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345285"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2957">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344816"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344079">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344078"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344157">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344156"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344661">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344660"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344739">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344738"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345364">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345363"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344817">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344816"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345208">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345207"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345286">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345285"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345364">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345363"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345354" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345329"/>
                <argumentType ref="type.9345352"/>
                <argumentType ref="type.9345353"/>
            </content>
        </type>
        <type id="type.9345276" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345251"/>
                <argumentType ref="type.9345274"/>
                <argumentType ref="type.9345275"/>
            </content>
        </type>
        <type id="type.9344147" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344122"/>
                <argumentType ref="type.9344145"/>
                <argumentType ref="type.9344146"/>
            </content>
        </type>
        <type id="type.9331112" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331086"/>
                <argumentType ref="type.9331110"/>
                <argumentType ref="type.9331111"/>
            </content>
        </type>
        <type id="type.9345198" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345173"/>
                <argumentType ref="type.9345196"/>
                <argumentType ref="type.9345197"/>
            </content>
        </type>
        <type id="type.9344729" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344704"/>
                <argumentType ref="type.9344727"/>
                <argumentType ref="type.9344728"/>
            </content>
        </type>
        <type id="type.9344651" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344626"/>
                <argumentType ref="type.9344649"/>
                <argumentType ref="type.9344650"/>
            </content>
        </type>
        <type id="type.9345354" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9345329"/>
                <argumentType ref="type.9345352"/>
                <argumentType ref="type.9345353"/>
            </content>
        </type>
        <type id="type.9331190" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331165"/>
                <argumentType ref="type.9331188"/>
                <argumentType ref="type.9331189"/>
            </content>
        </type>
        <type id="type.9344807" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344782"/>
                <argumentType ref="type.9344805"/>
                <argumentType ref="type.9344806"/>
            </content>
        </type>
        <type id="type.9344069" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9344044"/>
                <argumentType ref="type.9344067"/>
                <argumentType ref="type.9344068"/>
            </content>
        </type>
        <type derived="true" id="type.9345200">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345198"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344809">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344807"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344731">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344729"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344149">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344147"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345278">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345276"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344071">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344069"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344653">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9344651"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345356">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <baseType ref="type.9345354"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2934">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344147"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2974">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345276"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2976">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345354"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2952">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344651"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2954">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344729"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2956">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344807"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2972">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345198"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2932">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344069"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2586">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331112"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2591">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331190"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344652">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344651"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344070">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344069"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344808">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344807"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345355">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345354"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345277">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345276"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344148">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344147"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344730">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9344729"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345199">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345198"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345355">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <baseType ref="type.9345354"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9333967" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333933"/>
                <argumentType ref="type.9333965"/>
                <argumentType ref="type.9333966"/>
            </content>
        </type>
        <type derived="true" id="type.2784">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333967"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333958" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333933"/>
                <argumentType ref="type.9333956"/>
                <argumentType ref="type.9333957"/>
            </content>
        </type>
        <type derived="true" id="type.2783">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Age*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333958"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335007" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334973"/>
                <argumentType ref="type.9335005"/>
                <argumentType ref="type.9335006"/>
            </content>
        </type>
        <type derived="true" id="type.2809">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335007"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334998" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334973"/>
                <argumentType ref="type.9334996"/>
                <argumentType ref="type.9334997"/>
            </content>
        </type>
        <type derived="true" id="type.2808">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334998"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334591" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334557"/>
                <argumentType ref="type.9334589"/>
                <argumentType ref="type.9334590"/>
            </content>
        </type>
        <type derived="true" id="type.2799">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334591"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334582" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334557"/>
                <argumentType ref="type.9334580"/>
                <argumentType ref="type.9334581"/>
            </content>
        </type>
        <type derived="true" id="type.2798">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334799" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334765"/>
                <argumentType ref="type.9334797"/>
                <argumentType ref="type.9334798"/>
            </content>
        </type>
        <type derived="true" id="type.2804">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334799"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334790" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334765"/>
                <argumentType ref="type.9334788"/>
                <argumentType ref="type.9334789"/>
            </content>
        </type>
        <type derived="true" id="type.2803">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334790"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333337" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333303"/>
                <argumentType ref="type.9333335"/>
                <argumentType ref="type.9333336"/>
            </content>
        </type>
        <type derived="true" id="type.2769">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333337"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333328" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333303"/>
                <argumentType ref="type.9333326"/>
                <argumentType ref="type.9333327"/>
            </content>
        </type>
        <type derived="true" id="type.2768">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333328"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333548" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333514"/>
                <argumentType ref="type.9333546"/>
                <argumentType ref="type.9333547"/>
            </content>
        </type>
        <type derived="true" id="type.2774">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333548"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333539" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333514"/>
                <argumentType ref="type.9333537"/>
                <argumentType ref="type.9333538"/>
            </content>
        </type>
        <type derived="true" id="type.2773">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Block*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333539"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333759" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333725"/>
                <argumentType ref="type.9333757"/>
                <argumentType ref="type.9333758"/>
            </content>
        </type>
        <type derived="true" id="type.2779">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333759"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333750" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333725"/>
                <argumentType ref="type.9333748"/>
                <argumentType ref="type.9333749"/>
            </content>
        </type>
        <type derived="true" id="type.2778">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334383" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334349"/>
                <argumentType ref="type.9334381"/>
                <argumentType ref="type.9334382"/>
            </content>
        </type>
        <type derived="true" id="type.2794">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334383"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334374" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334349"/>
                <argumentType ref="type.9334372"/>
                <argumentType ref="type.9334373"/>
            </content>
        </type>
        <type derived="true" id="type.2793">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334374"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334175" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334141"/>
                <argumentType ref="type.9334173"/>
                <argumentType ref="type.9334174"/>
            </content>
        </type>
        <type derived="true" id="type.2789">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334175"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334166" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334141"/>
                <argumentType ref="type.9334164"/>
                <argumentType ref="type.9334165"/>
            </content>
        </type>
        <type derived="true" id="type.2788">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;char>, Script*>>*, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;char>, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334166"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338869" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338835"/>
                <argumentType ref="type.9338867"/>
                <argumentType ref="type.9338868"/>
            </content>
        </type>
        <type derived="true" id="type.2884">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338869"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338860" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338835"/>
                <argumentType ref="type.9338858"/>
                <argumentType ref="type.9338859"/>
            </content>
        </type>
        <type derived="true" id="type.2883">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Grammar*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338860"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338945" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338911"/>
                <argumentType ref="type.9338943"/>
                <argumentType ref="type.9338944"/>
            </content>
        </type>
        <type derived="true" id="type.2886">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338945"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338936" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338911"/>
                <argumentType ref="type.9338934"/>
                <argumentType ref="type.9338935"/>
            </content>
        </type>
        <type derived="true" id="type.2885">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, Namespace*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338936"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339192" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9339158"/>
                <argumentType ref="type.9339190"/>
                <argumentType ref="type.9339191"/>
            </content>
        </type>
        <type derived="true" id="type.2896">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339192"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339183" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9339158"/>
                <argumentType ref="type.9339181"/>
                <argumentType ref="type.9339182"/>
            </content>
        </type>
        <type derived="true" id="type.2895">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, ParsingObject*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339183"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338435" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338401"/>
                <argumentType ref="type.9338433"/>
                <argumentType ref="type.9338434"/>
            </content>
        </type>
        <type derived="true" id="type.2855">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338435"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338426" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338401"/>
                <argumentType ref="type.9338424"/>
                <argumentType ref="type.9338425"/>
            </content>
        </type>
        <type derived="true" id="type.2854">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, String&lt;uchar>>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338426"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343793" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9343759"/>
                <argumentType ref="type.9343791"/>
                <argumentType ref="type.9343792"/>
            </content>
        </type>
        <type derived="true" id="type.9343795">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;</name>
            <content>
                <baseType ref="type.9343793"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2923">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343793"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343794">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>*</name>
            <content>
                <baseType ref="type.9343793"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343784" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9343759"/>
                <argumentType ref="type.9343782"/>
                <argumentType ref="type.9343783"/>
            </content>
        </type>
        <type derived="true" id="type.9343786">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;</name>
            <content>
                <baseType ref="type.9343784"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2922">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343784"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343785">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>*</name>
            <content>
                <baseType ref="type.9343784"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9333891" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333857"/>
                <argumentType ref="type.9333889"/>
                <argumentType ref="type.9333890"/>
            </content>
        </type>
        <type derived="true" id="type.2782">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333891"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333882" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333857"/>
                <argumentType ref="type.9333880"/>
                <argumentType ref="type.9333881"/>
            </content>
        </type>
        <type derived="true" id="type.2781">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AgeId, Age*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333882"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334931" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334897"/>
                <argumentType ref="type.9334929"/>
                <argumentType ref="type.9334930"/>
            </content>
        </type>
        <type derived="true" id="type.2807">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334931"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334922" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334897"/>
                <argumentType ref="type.9334920"/>
                <argumentType ref="type.9334921"/>
            </content>
        </type>
        <type derived="true" id="type.2806">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.AliasTypeId, AliasType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334922"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334515" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334481"/>
                <argumentType ref="type.9334513"/>
                <argumentType ref="type.9334514"/>
            </content>
        </type>
        <type derived="true" id="type.2797">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334515"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334506" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334481"/>
                <argumentType ref="type.9334504"/>
                <argumentType ref="type.9334505"/>
            </content>
        </type>
        <type derived="true" id="type.2796">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiClassId, BidiClass*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334506"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334723" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334689"/>
                <argumentType ref="type.9334721"/>
                <argumentType ref="type.9334722"/>
            </content>
        </type>
        <type derived="true" id="type.2802">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334723"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334714" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334689"/>
                <argumentType ref="type.9334712"/>
                <argumentType ref="type.9334713"/>
            </content>
        </type>
        <type derived="true" id="type.2801">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BidiPairedBracketTypeId, BidiPairedBracketType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334714"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333240" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333206"/>
                <argumentType ref="type.9333238"/>
                <argumentType ref="type.9333239"/>
            </content>
        </type>
        <type derived="true" id="type.2767">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333240"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333231" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333206"/>
                <argumentType ref="type.9333229"/>
                <argumentType ref="type.9333230"/>
            </content>
        </type>
        <type derived="true" id="type.2766">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BinaryPropertyId, BinaryProperty*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333231"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333472" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333438"/>
                <argumentType ref="type.9333470"/>
                <argumentType ref="type.9333471"/>
            </content>
        </type>
        <type derived="true" id="type.2772">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333463" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333438"/>
                <argumentType ref="type.9333461"/>
                <argumentType ref="type.9333462"/>
            </content>
        </type>
        <type derived="true" id="type.2771">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.BlockId, Block*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333463"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333683" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333649"/>
                <argumentType ref="type.9333681"/>
                <argumentType ref="type.9333682"/>
            </content>
        </type>
        <type derived="true" id="type.2777">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333683"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333674" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9333649"/>
                <argumentType ref="type.9333672"/>
                <argumentType ref="type.9333673"/>
            </content>
        </type>
        <type derived="true" id="type.2776">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.GeneralCategoryId, GeneralCategory*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333674"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334307" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334273"/>
                <argumentType ref="type.9334305"/>
                <argumentType ref="type.9334306"/>
            </content>
        </type>
        <type derived="true" id="type.2792">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334307"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334298" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334273"/>
                <argumentType ref="type.9334296"/>
                <argumentType ref="type.9334297"/>
            </content>
        </type>
        <type derived="true" id="type.2791">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.NumericTypeId, NumericType*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334298"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334099" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334065"/>
                <argumentType ref="type.9334097"/>
                <argumentType ref="type.9334098"/>
            </content>
        </type>
        <type derived="true" id="type.2787">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334099"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334090" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9334065"/>
                <argumentType ref="type.9334088"/>
                <argumentType ref="type.9334089"/>
            </content>
        </type>
        <type derived="true" id="type.2786">
            <name>RandomAccessIter&lt;Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>*&amp;, const Bucket&lt;Pair&lt;System.Unicode.ScriptId, Script*>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334090"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338707" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338675"/>
                <argumentType ref="type.9338705"/>
                <argumentType ref="type.9338706"/>
            </content>
        </type>
        <type derived="true" id="type.2877">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, Bucket&lt;String&lt;uchar>>*&amp;, Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338707"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338698" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338675"/>
                <argumentType ref="type.9338696"/>
                <argumentType ref="type.9338697"/>
            </content>
        </type>
        <type derived="true" id="type.2876">
            <name>RandomAccessIter&lt;Bucket&lt;String&lt;uchar>>*, const Bucket&lt;String&lt;uchar>>*&amp;, const Bucket&lt;String&lt;uchar>>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338698"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331348" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331314"/>
                <argumentType ref="type.9331346"/>
                <argumentType ref="type.9331347"/>
            </content>
        </type>
        <type id="type.9331274" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331240"/>
                <argumentType ref="type.9331272"/>
                <argumentType ref="type.9331273"/>
            </content>
        </type>
        <type id="type.9331348" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331314"/>
                <argumentType ref="type.9331346"/>
                <argumentType ref="type.9331347"/>
            </content>
        </type>
        <type derived="true" id="type.2599">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331348"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2595">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, Bucket&lt;T>*&amp;, Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331274"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331339" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331314"/>
                <argumentType ref="type.9331337"/>
                <argumentType ref="type.9331338"/>
            </content>
        </type>
        <type id="type.9331265" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331240"/>
                <argumentType ref="type.9331263"/>
                <argumentType ref="type.9331264"/>
            </content>
        </type>
        <type derived="true" id="type.2598">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331339"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2594">
            <name>RandomAccessIter&lt;Bucket&lt;T>*, const Bucket&lt;T>*&amp;, const Bucket&lt;T>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331265"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331459" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331423"/>
                <argumentType ref="type.9331457"/>
                <argumentType ref="type.9331458"/>
            </content>
        </type>
        <type derived="true" id="type.2608">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, Bucket&lt;ValueType>*&amp;, Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331459"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9331450" specialization="true">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9331423"/>
                <argumentType ref="type.9331448"/>
                <argumentType ref="type.9331449"/>
            </content>
        </type>
        <type derived="true" id="type.2607">
            <name>RandomAccessIter&lt;Bucket&lt;ValueType>*, const Bucket&lt;ValueType>*&amp;, const Bucket&lt;ValueType>**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331450"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF" specialization="true">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9330013"/>
                <argumentType ref="type.9333032"/>
                <argumentType ref="type.9333033"/>
            </content>
        </type>
        <type derived="true" id="type.2737">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2763">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2747">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2751">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2759">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2743">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2755">
            <name>RandomAccessIter&lt;CharT, CharT&amp;, CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_R_CharT_P_63BB87CDD92CFF56314A0A2EAC74B418ED0A20CF"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966" specialization="true">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9330013"/>
                <argumentType ref="type.9333018"/>
                <argumentType ref="type.9333016"/>
            </content>
        </type>
        <type derived="true" id="type.2762">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2736">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2746">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2758">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2750">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2754">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2742">
            <name>RandomAccessIter&lt;CharT, const CharT&amp;, const CharT*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_CharT_CharT_C_R_CharT_C_P_1961C3ADDE0BFA58BCD8EBBFF7E32D09B47B0966"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9333782" specialization="true">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330090"/>
                <argumentType ref="type.9333625"/>
                <argumentType ref="type.9333781"/>
            </content>
        </type>
        <type derived="true" id="type.2780">
            <name>RandomAccessIter&lt;GeneralCategory*, const GeneralCategory*&amp;, const GeneralCategory**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333782"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338972" specialization="true">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337381"/>
                <argumentType ref="type.9338887"/>
                <argumentType ref="type.9338968"/>
            </content>
        </type>
        <type derived="true" id="type.2887">
            <name>RandomAccessIter&lt;Namespace*, const Namespace*&amp;, const Namespace**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338972"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339107" specialization="true">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337389"/>
                <argumentType ref="type.9339105"/>
                <argumentType ref="type.9339106"/>
            </content>
        </type>
        <type derived="true" id="type.2894">
            <name>RandomAccessIter&lt;NonterminalParser*, const NonterminalParser*&amp;, const NonterminalParser**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339107"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334399" specialization="true">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330132"/>
                <argumentType ref="type.9334249"/>
                <argumentType ref="type.9334398"/>
            </content>
        </type>
        <type derived="true" id="type.2795">
            <name>RandomAccessIter&lt;NumericType*, const NumericType*&amp;, const NumericType**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334399"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338520" specialization="true">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337620"/>
                <argumentType ref="type.9338518"/>
                <argumentType ref="type.9338519"/>
            </content>
        </type>
        <type derived="true" id="type.2858">
            <name>RandomAccessIter&lt;RuleLink*, const RuleLink*&amp;, const RuleLink**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338520"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9334198" specialization="true">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330113"/>
                <argumentType ref="type.9334041"/>
                <argumentType ref="type.9334197"/>
            </content>
        </type>
        <type derived="true" id="type.2790">
            <name>RandomAccessIter&lt;Script*, const Script*&amp;, const Script**>&amp;&amp;</name>
            <content>
                <baseType ref="type.9334198"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332820" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332783"/>
                <argumentType ref="type.9332782"/>
            </content>
        </type>
        <type id="type.9332867" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332830"/>
                <argumentType ref="type.9332829"/>
            </content>
        </type>
        <type id="type.9333102" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333065"/>
                <argumentType ref="type.9333064"/>
            </content>
        </type>
        <type id="type.9332961" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332924"/>
                <argumentType ref="type.9332923"/>
            </content>
        </type>
        <type id="type.9332914" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332877"/>
                <argumentType ref="type.9332876"/>
            </content>
        </type>
        <type id="type.9333008" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332971"/>
                <argumentType ref="type.9332970"/>
            </content>
        </type>
        <type id="type.9333055" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333021"/>
                <argumentType ref="type.9333020"/>
            </content>
        </type>
        <type derived="true" id="type.2761">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333055"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2753">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332961"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2745">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332867"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2740">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332820"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2757">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333008"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2765">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333102"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2749">
            <name>RandomAccessIter&lt;String&lt;CharT>, String&lt;CharT>&amp;, String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332914"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332954" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332927"/>
                <argumentType ref="type.9332926"/>
            </content>
        </type>
        <type id="type.9332907" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332880"/>
                <argumentType ref="type.9332879"/>
            </content>
        </type>
        <type id="type.9332813" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332786"/>
                <argumentType ref="type.9332785"/>
            </content>
        </type>
        <type id="type.9333095" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333068"/>
                <argumentType ref="type.9333067"/>
            </content>
        </type>
        <type id="type.9333001" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332974"/>
                <argumentType ref="type.9332973"/>
            </content>
        </type>
        <type id="type.9332860" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332833"/>
                <argumentType ref="type.9332832"/>
            </content>
        </type>
        <type id="type.9333048" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9333024"/>
                <argumentType ref="type.9333023"/>
            </content>
        </type>
        <type id="type.9332813" specialization="true">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9332786"/>
                <argumentType ref="type.9332785"/>
            </content>
        </type>
        <type derived="true" id="type.2739">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332813"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2756">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333001"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2744">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332860"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2760">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333048"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2752">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332954"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2764">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9333095"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2748">
            <name>RandomAccessIter&lt;String&lt;CharT>, const String&lt;CharT>&amp;, const String&lt;CharT>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332907"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330353" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330318"/>
                <argumentType ref="type.9330320"/>
                <argumentType ref="type.9330319"/>
            </content>
        </type>
        <type derived="true" id="type.2509">
            <name>RandomAccessIter&lt;String&lt;char>, String&lt;char>&amp;, String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330353"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330346" specialization="true">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330318"/>
                <argumentType ref="type.9330323"/>
                <argumentType ref="type.9330322"/>
            </content>
        </type>
        <type derived="true" id="type.2508">
            <name>RandomAccessIter&lt;String&lt;char>, const String&lt;char>&amp;, const String&lt;char>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330346"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330443" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330408"/>
                <argumentType ref="type.9330407"/>
            </content>
        </type>
        <type derived="true" id="type.2528">
            <name>RandomAccessIter&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330443"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330436" specialization="true">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9330411"/>
                <argumentType ref="type.9330410"/>
            </content>
        </type>
        <type derived="true" id="type.2527">
            <name>RandomAccessIter&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330436"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330398" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330361"/>
                <argumentType ref="type.9330363"/>
                <argumentType ref="type.9330362"/>
            </content>
        </type>
        <type derived="true" id="type.2518">
            <name>RandomAccessIter&lt;String&lt;wchar>, String&lt;wchar>&amp;, String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330398"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330391" specialization="true">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9330361"/>
                <argumentType ref="type.9330366"/>
                <argumentType ref="type.9330365"/>
            </content>
        </type>
        <type derived="true" id="type.2517">
            <name>RandomAccessIter&lt;String&lt;wchar>, const String&lt;wchar>&amp;, const String&lt;wchar>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330391"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339057" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_AttrOrVar_50B6EF23E232C2A406B7F5C94499D4CC0CC6D353"/>
                <argumentType ref="type.9337612"/>
                <argumentType ref="type.9337611"/>
            </content>
        </type>
        <type derived="true" id="type.2892">
            <name>RandomAccessIter&lt;System.Text.Parsing.AttrOrVar, const AttrOrVar&amp;, const AttrOrVar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339057"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339043" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.9337447"/>
                <argumentType ref="type.9337446"/>
            </content>
        </type>
        <type derived="true" id="type.2891">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, CharRange&amp;, CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339043"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339036" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_CharRange_59BCB010C02C8EB081B9C5DB566155FFE78B44CC"/>
                <argumentType ref="type.9337450"/>
                <argumentType ref="type.9337449"/>
            </content>
        </type>
        <type derived="true" id="type.2890">
            <name>RandomAccessIter&lt;System.Text.Parsing.CharRange, const CharRange&amp;, const CharRange*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339036"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338794" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.9338776"/>
                <argumentType ref="type.9338775"/>
            </content>
        </type>
        <type derived="true" id="type.2882">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, RuleData&amp;, RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338794"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338787" specialization="true">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_RuleData_8D0490A7E12ED026B00D026E032926DF8F5F526A"/>
                <argumentType ref="type.9338784"/>
                <argumentType ref="type.9338785"/>
            </content>
        </type>
        <type derived="true" id="type.2881">
            <name>RandomAccessIter&lt;System.Text.Parsing.RuleData, const RuleData&amp;, const RuleData*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338787"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335060" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.9330184"/>
                <argumentType ref="type.9330183"/>
            </content>
        </type>
        <type derived="true" id="type.2812">
            <name>RandomAccessIter&lt;System.Unicode.Alias, Alias&amp;, Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335060"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335053" specialization="true">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="class_Alias_F5EF8FC9193282B25B9E84210775A55CF0A14DB2"/>
                <argumentType ref="type.9330187"/>
                <argumentType ref="type.9330186"/>
            </content>
        </type>
        <type derived="true" id="type.2811">
            <name>RandomAccessIter&lt;System.Unicode.Alias, const Alias&amp;, const Alias*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335053"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484" specialization="true">
            <name>RandomAccessIter&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329906"/>
                <argumentType ref="9329907"/>
                <argumentType ref="9329908"/>
            </content>
        </type>
        <type derived="true" id="type.2656">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2655">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2657">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2658">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2654">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2660">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2659">
            <name>RandomAccessIter&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7" specialization="true">
            <name>RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9343033"/>
                <argumentType ref="type.9344945"/>
                <argumentType ref="type.9344946"/>
            </content>
        </type>
        <type derived="true" id="type.9344949">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344219">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344895">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344192">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344922">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343881">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344949">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2937">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2616">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2734">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2927">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2620">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2939">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2652">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2961">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2963">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2965">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2622">
            <name>RandomAccessIter&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344948">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344218">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344894">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343880">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344191">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344921">
            <name>RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892" specialization="true">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="9329985"/>
                <argumentType ref="type.9332753"/>
                <argumentType ref="type.9332762"/>
            </content>
        </type>
        <type derived="true" id="type.9344210">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344913">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344940">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344183">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344886">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343872">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344913">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2936">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2926">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2651">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2960">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2621">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2962">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2615">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2964">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2938">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2733">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2619">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344209">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344912">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344885">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344939">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344182">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343871">
            <name>RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343708" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9343622"/>
                <argumentType ref="type.9343624"/>
                <argumentType ref="type.9343623"/>
            </content>
        </type>
        <type derived="true" id="type.9343710">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*>&amp;</name>
            <content>
                <baseType ref="type.9343708"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343714">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343708"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343709">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*>*</name>
            <content>
                <baseType ref="type.9343708"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343701" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9343622"/>
                <argumentType ref="type.9343627"/>
                <argumentType ref="type.9343626"/>
            </content>
        </type>
        <type derived="true" id="type.9343703">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*>&amp;</name>
            <content>
                <baseType ref="type.9343701"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2921">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343701"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343702">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*>*</name>
            <content>
                <baseType ref="type.9343701"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9337091" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337075"/>
                <argumentType ref="type.9337080"/>
                <argumentType ref="type.9337079"/>
            </content>
        </type>
        <type derived="true" id="type.2843">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.CaseStatement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337091"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9337151" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337135"/>
                <argumentType ref="type.9337140"/>
                <argumentType ref="type.9337139"/>
            </content>
        </type>
        <type derived="true" id="type.2844">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Catch>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337151"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9336990" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9336950"/>
                <argumentType ref="type.9336955"/>
                <argumentType ref="type.9336954"/>
            </content>
        </type>
        <type derived="true" id="type.2841">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.DomObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336990"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9337042" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9337029"/>
                <argumentType ref="type.9337034"/>
                <argumentType ref="type.9337033"/>
            </content>
        </type>
        <type derived="true" id="type.2842">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>&amp;, const UniquePtr&lt;System.Text.Parsing.CodeDom.Statement>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337042"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338760" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338738"/>
                <argumentType ref="type.9338743"/>
                <argumentType ref="type.9338742"/>
            </content>
        </type>
        <type derived="true" id="type.2880">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Context>, const UniquePtr&lt;System.Text.Parsing.Context>&amp;, const UniquePtr&lt;System.Text.Parsing.Context>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338760"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338333" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338311"/>
                <argumentType ref="type.9338316"/>
                <argumentType ref="type.9338315"/>
            </content>
        </type>
        <type derived="true" id="type.2853">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.Object>, const UniquePtr&lt;System.Text.Parsing.Object>&amp;, const UniquePtr&lt;System.Text.Parsing.Object>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338333"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339018" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338998"/>
                <argumentType ref="type.9339000"/>
                <argumentType ref="type.9338999"/>
            </content>
        </type>
        <type derived="true" id="type.2889">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339018"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339011" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338998"/>
                <argumentType ref="type.9339003"/>
                <argumentType ref="type.9339002"/>
            </content>
        </type>
        <type derived="true" id="type.2888">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingDomain>, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingDomain>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339011"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338302" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338282"/>
                <argumentType ref="type.9338284"/>
                <argumentType ref="type.9338283"/>
            </content>
        </type>
        <type derived="true" id="type.2852">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338302"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338295" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9338282"/>
                <argumentType ref="type.9338287"/>
                <argumentType ref="type.9338286"/>
            </content>
        </type>
        <type derived="true" id="type.2851">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Text.Parsing.ParsingObject>, const UniquePtr&lt;System.Text.Parsing.ParsingObject>&amp;, const UniquePtr&lt;System.Text.Parsing.ParsingObject>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338295"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335089" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335069"/>
                <argumentType ref="type.9335071"/>
                <argumentType ref="type.9335070"/>
            </content>
        </type>
        <type derived="true" id="type.2814">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335089"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335082" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335069"/>
                <argumentType ref="type.9335074"/>
                <argumentType ref="type.9335073"/>
            </content>
        </type>
        <type derived="true" id="type.2813">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfo>, const UniquePtr&lt;System.Unicode.CharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335082"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335185" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335165"/>
                <argumentType ref="type.9335167"/>
                <argumentType ref="type.9335166"/>
            </content>
        </type>
        <type derived="true" id="type.2830">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335185"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335178" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335165"/>
                <argumentType ref="type.9335170"/>
                <argumentType ref="type.9335169"/>
            </content>
        </type>
        <type derived="true" id="type.2829">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.CharacterInfoPage>, const UniquePtr&lt;System.Unicode.CharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.CharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335178"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335117" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335097"/>
                <argumentType ref="type.9335099"/>
                <argumentType ref="type.9335098"/>
            </content>
        </type>
        <type derived="true" id="type.2816">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335117"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335110" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335097"/>
                <argumentType ref="type.9335102"/>
                <argumentType ref="type.9335101"/>
            </content>
        </type>
        <type derived="true" id="type.2815">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfo>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335110"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335220" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335200"/>
                <argumentType ref="type.9335202"/>
                <argumentType ref="type.9335201"/>
            </content>
        </type>
        <type derived="true" id="type.2832">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335220"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335213" specialization="true">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9335200"/>
                <argumentType ref="type.9335205"/>
                <argumentType ref="type.9335204"/>
            </content>
        </type>
        <type derived="true" id="type.2831">
            <name>RandomAccessIter&lt;UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>&amp;, const UniquePtr&lt;System.Unicode.ExtendedCharacterInfoPage>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335213"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9336711" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9343191" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9337936" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9336711" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.9331808" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type id="type.2630" specialization="true">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329179"/>
                <argumentType ref="type.9329200"/>
                <argumentType ref="type.9329199"/>
            </content>
        </type>
        <type derived="true" id="type.2632">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.2630"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343193">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <baseType ref="type.9343191"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2637">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331808"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2919">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343191"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2839">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336711"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2849">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337936"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2636">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2630"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343192">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.9343191"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2631">
            <name>RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <baseType ref="type.2630"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343062" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.9337807" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.9343062" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.9336582" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type id="type.2501" specialization="true">
            <name>RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329188"/>
                <argumentType ref="type.9329227"/>
                <argumentType ref="type.9329226"/>
            </content>
        </type>
        <type derived="true" id="type.9343064">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.9343062"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2503">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.2501"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343064">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <baseType ref="type.9343062"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2835">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336582"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2917">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343062"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2845">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337807"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2507">
            <name>RandomAccessIter&lt;char, char&amp;, char*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2501"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2502">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.2501"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343063">
            <name>RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <baseType ref="type.9343062"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343081" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9330422" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9337826" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.2520" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9343081" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type id="type.9336601" specialization="true">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329190"/>
                <argumentType ref="type.9329233"/>
                <argumentType ref="type.9329232"/>
            </content>
        </type>
        <type derived="true" id="type.9343083">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.9343081"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2522">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <baseType ref="type.2520"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2847">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337826"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2837">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336601"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343087">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343081"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2529">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330422"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2526">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2520"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2521">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.2520"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343082">
            <name>RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <baseType ref="type.9343081"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9335134" specialization="true">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9335131"/>
                <argumentType ref="type.9335132"/>
            </content>
        </type>
        <type derived="true" id="type.2817">
            <name>RandomAccessIter&lt;uint, const uint&amp;, const uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335134"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.2818" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9338125" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9335141" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9336900" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9338125" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type id="type.9343380" specialization="true">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329183"/>
                <argumentType ref="type.9329212"/>
                <argumentType ref="type.9329211"/>
            </content>
        </type>
        <type derived="true" id="type.2820">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.2818"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343382">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <baseType ref="type.9343380"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2824">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2818"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2825">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335141"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2850">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338125"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2840">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336900"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2920">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343380"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343381">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.9343380"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2819">
            <name>RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <baseType ref="type.2818"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330465" specialization="true">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9330462"/>
                <argumentType ref="type.9330463"/>
            </content>
        </type>
        <type derived="true" id="type.2530">
            <name>RandomAccessIter&lt;ulong, const ulong&amp;, const ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330465"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343092" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.2531" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9336612" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9337837" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9330472" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type id="type.9343092" specialization="true">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329185"/>
                <argumentType ref="type.9329218"/>
                <argumentType ref="type.9329217"/>
            </content>
        </type>
        <type derived="true" id="type.2533">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.2531"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343094">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <baseType ref="type.9343092"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2848">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337837"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2537">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2531"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2918">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343092"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2538">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2838">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336612"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2532">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.2531"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343093">
            <name>RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <baseType ref="type.9343092"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.2510" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9343071" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9336591" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9343071" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9337816" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type id="type.9330377" specialization="true">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <primaryType ref="class_RandomAccessIter_T_R_P_E5BB3CAC7F9DBE190F290EC17E5DCE3406706484"/>
                <argumentType ref="type.9329189"/>
                <argumentType ref="type.9329230"/>
                <argumentType ref="type.9329229"/>
            </content>
        </type>
        <type derived="true" id="type.2512">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.2510"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343073">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <baseType ref="type.9343071"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343077">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343071"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2516">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.2510"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2846">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9337816"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2519">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330377"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343077">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343071"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2836">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9336591"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2511">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.2510"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343072">
            <name>RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <baseType ref="type.9343071"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047" specialization="true">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9343037"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <argumentType ref="9343039"/>
            </content>
        </type>
        <type derived="true" id="type.9345040">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344979">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344493">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345101">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344554">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344371">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344249">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343972">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344310">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343911">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345101">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344432">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345066">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345005">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344458">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344580">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2627">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344397">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345127">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344336">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343998">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343937">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345005">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344519">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344275">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344553">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345039">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344978">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344492">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344309">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344370">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343910">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345100">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344248">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343971">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344431">
            <name>RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329941"/>
                <argumentType ref="9329942"/>
                <argumentType ref="9329943"/>
                <argumentType ref="9329944"/>
            </content>
        </type>
        <type id="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2" specialization="true">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329941"/>
                <argumentType ref="9329942"/>
                <argumentType ref="9329943"/>
                <argumentType ref="9329944"/>
            </content>
        </type>
        <type derived="true" id="type.2669">
            <name>RedBlackTree&lt;KeyType, ValueType, KeyOfValue, Compare>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343655" specialization="true">
            <name>RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9343641"/>
                <argumentType ref="type.9343645"/>
                <argumentType ref="type.9343629"/>
            </content>
        </type>
        <type derived="true" id="type.9343657">
            <name>RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <baseType ref="type.9343655"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343683">
            <name>RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343655"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343656">
            <name>RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>>*</name>
            <content>
                <baseType ref="type.9343655"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3" specialization="true">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C></name>
            <content>
                <primaryType ref="class_RedBlackTree_KeyType_ValueType_KeyOfValue_Compare_DB6FC4C558699B41560FB59DF0566AE96A15B9A2"/>
                <argumentType ref="9329947"/>
                <argumentType ref="9329947"/>
                <argumentType ref="type.class_Identity_T_9DD2E12D3D49B8316EA22259EDBD89C3FE6A1C09"/>
                <argumentType ref="9329948"/>
            </content>
        </type>
        <type derived="true" id="type.2674">
            <name>RedBlackTree&lt;T, T, Identity&lt;T>, C>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTree_T_T_Identity_T_C_BC4C30A5A170B2B4B4BF9109198D17D5A1BD03D3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9344991" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344261" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9345052" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9345113" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344566" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344505" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344444" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344383" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9344322" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9343984" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type id="type.9343923" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344507">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344505"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344446">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344444"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345054">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9345052"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343986">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9343984"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344385">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344383"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343925">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9343923"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344568">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344566"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345115">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9345113"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344324">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344263">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344261"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344993">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <baseType ref="type.9344991"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345053">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9345052"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344445">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343924">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9343923"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344992">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344991"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344262">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344261"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343985">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9343984"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344506">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344505"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344384">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344383"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344323">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344322"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345114">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9345113"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344567">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9344566"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345053">
            <name>RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <baseType ref="type.9345052"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343669" specialization="true">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>></name>
            <content>
                <primaryType ref="class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
                <argumentType ref="type.9343641"/>
            </content>
        </type>
        <type derived="true" id="type.9343671">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>&amp;</name>
            <content>
                <baseType ref="type.9343669"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343670">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>*</name>
            <content>
                <baseType ref="type.9343669"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345455">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>*&amp;</name>
            <content>
                <baseType ref="type.9343669"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345456">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9343669"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345454">
            <name>RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>**</name>
            <content>
                <baseType ref="type.9343669"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2490">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342830">
            <name>RedBlackTreeNodeBase&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3003">
            <name>RedBlackTreeNodeBase&amp;&amp;</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342829">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2489">
            <name>RedBlackTreeNodeBase*</name>
            <content>
                <baseType ref="class_RedBlackTreeNodeBase_A9FEDD14E304295EC76EF56880DD6AAFCB6EC948"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345120" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9345086"/>
                <argumentType ref="type.9345085"/>
            </content>
        </type>
        <type id="type.9344573" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344539"/>
                <argumentType ref="type.9344538"/>
            </content>
        </type>
        <type id="type.9331772" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9331733"/>
                <argumentType ref="type.9331732"/>
            </content>
        </type>
        <type id="type.9344451" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344417"/>
                <argumentType ref="type.9344416"/>
            </content>
        </type>
        <type id="type.9345059" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9345025"/>
                <argumentType ref="type.9345024"/>
            </content>
        </type>
        <type id="type.9344512" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344478"/>
                <argumentType ref="type.9344477"/>
            </content>
        </type>
        <type id="type.9344998" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344964"/>
                <argumentType ref="type.9344963"/>
            </content>
        </type>
        <type id="type.9343991" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9343957"/>
                <argumentType ref="type.9343956"/>
            </content>
        </type>
        <type id="type.9344329" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344295"/>
                <argumentType ref="type.9344294"/>
            </content>
        </type>
        <type id="type.9344268" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344234"/>
                <argumentType ref="type.9344233"/>
            </content>
        </type>
        <type id="type.9344512" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344478"/>
                <argumentType ref="type.9344477"/>
            </content>
        </type>
        <type id="type.9343930" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9343896"/>
                <argumentType ref="type.9343895"/>
            </content>
        </type>
        <type id="type.9344390" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344356"/>
                <argumentType ref="type.9344355"/>
            </content>
        </type>
        <type derived="true" id="type.9345000">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344998"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345122">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9345120"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343932">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9343930"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343993">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9343991"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344453">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344451"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344331">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344329"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344270">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344268"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345061">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9345059"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344392">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344390"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345061">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9345059"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344514">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344512"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344575">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344573"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2943">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344329"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2947">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344451"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2969">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345059"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2941">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344268"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2945">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344390"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2626">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331772"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2967">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344998"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2931">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343991"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2951">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344573"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2929">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343930"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2949">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344512"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2971">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345120"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344452">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344451"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344330">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344329"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344999">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344998"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345060">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345059"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343931">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9343930"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343992">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9343991"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345121">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345120"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344269">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344268"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345121">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345120"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344513">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344512"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344574">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344573"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344391">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344390"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9344255" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344244"/>
                <argumentType ref="type.9344253"/>
            </content>
        </type>
        <type id="type.9343917" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9343906"/>
                <argumentType ref="type.9343915"/>
            </content>
        </type>
        <type id="type.9345107" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9345096"/>
                <argumentType ref="type.9345105"/>
            </content>
        </type>
        <type id="type.9344499" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344488"/>
                <argumentType ref="type.9344497"/>
            </content>
        </type>
        <type id="type.9331754" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9331743"/>
                <argumentType ref="type.9331752"/>
            </content>
        </type>
        <type id="type.9345046" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9345035"/>
                <argumentType ref="type.9345044"/>
            </content>
        </type>
        <type id="type.9344316" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344305"/>
                <argumentType ref="type.9344314"/>
            </content>
        </type>
        <type id="type.9343978" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9343967"/>
                <argumentType ref="type.9343976"/>
            </content>
        </type>
        <type id="type.9344560" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344549"/>
                <argumentType ref="type.9344558"/>
            </content>
        </type>
        <type id="type.9345046" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9345035"/>
                <argumentType ref="type.9345044"/>
            </content>
        </type>
        <type id="type.9344377" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344366"/>
                <argumentType ref="type.9344375"/>
            </content>
        </type>
        <type id="type.9344985" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344974"/>
                <argumentType ref="type.9344983"/>
            </content>
        </type>
        <type id="type.9344438" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="type.9344427"/>
                <argumentType ref="type.9344436"/>
            </content>
        </type>
        <type derived="true" id="type.9344440">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344438"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345048">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9345046"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343980">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9343978"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343919">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9343917"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344562">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344560"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344318">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344316"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344987">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344985"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345109">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9345107"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344379">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344377"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344257">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344255"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344501">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <baseType ref="type.9344499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2950">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344560"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2966">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344985"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2968">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345046"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2970">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345107"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2940">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344255"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2625">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331754"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2928">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343917"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2930">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343978"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2942">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344316"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2944">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344377"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2946">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344438"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2948">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344499"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344986">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344985"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345047">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345046"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344256">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344255"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344317">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344316"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344500">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344499"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343979">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9343978"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344439">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344438"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345108">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345107"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344561">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344560"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345108">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9345107"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344378">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9344377"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343918">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <baseType ref="type.9343917"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343676" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.9343641"/>
                <argumentType ref="type.9343643"/>
                <argumentType ref="type.9343642"/>
            </content>
        </type>
        <type derived="true" id="type.9343678">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;</name>
            <content>
                <baseType ref="type.9343676"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343682">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343676"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343677">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>*</name>
            <content>
                <baseType ref="type.9343676"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343663" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="type.9343641"/>
                <argumentType ref="type.9343652"/>
                <argumentType ref="type.9343661"/>
            </content>
        </type>
        <type derived="true" id="type.9343665">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;</name>
            <content>
                <baseType ref="type.9343663"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343675">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343663"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343664">
            <name>RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*>*</name>
            <content>
                <baseType ref="type.9343663"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, R, P></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329937"/>
                <argumentType ref="9329938"/>
                <argumentType ref="9329939"/>
            </content>
        </type>
        <type derived="true" id="type.2665">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2666">
            <name>RedBlackTreeNodeIterator&lt;T, R, P>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329949"/>
                <argumentType ref="type.9332141"/>
                <argumentType ref="type.9332143"/>
            </content>
        </type>
        <type derived="true" id="type.2673">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2679">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2677">
            <name>RedBlackTreeNodeIterator&lt;T, T&amp;, T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_R_T_P_728FC4CF206D7C209E9587642D7C4800A8A0E358"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329951"/>
                <argumentType ref="type.9332175"/>
                <argumentType ref="type.9332184"/>
            </content>
        </type>
        <type derived="true" id="type.2676">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2678">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2672">
            <name>RedBlackTreeNodeIterator&lt;T, const T&amp;, const T*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_T_T_C_R_T_C_P_A78787AB6B268B3C9F3B105203C2C0B1914EA603"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329942"/>
                <argumentType ref="type.9332025"/>
                <argumentType ref="type.9332027"/>
            </content>
        </type>
        <type derived="true" id="type.2668">
            <name>RedBlackTreeNodeIterator&lt;ValueType, ValueType&amp;, ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_R_ValueType_P_A72EE6DFD58F3068E8C768CB16BF71716048A80D"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11" specialization="true">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*></name>
            <content>
                <primaryType ref="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92"/>
                <argumentType ref="9329942"/>
                <argumentType ref="type.9332010"/>
                <argumentType ref="type.9332011"/>
            </content>
        </type>
        <type derived="true" id="type.2667">
            <name>RedBlackTreeNodeIterator&lt;ValueType, const ValueType&amp;, const ValueType*>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_RedBlackTreeNodeIterator_ValueType_ValueType_C_R_ValueType_C_P_62C8FF5559EB06AAFEDF99196CE7BD850F471D11"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3071">
            <name>ReturnStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3101">
            <name>RvalueRef&amp;&amp;</name>
            <content>
                <baseType ref="class_RvalueRef_5B7EBD5222D9942C4FCD5811F21EE1285E406229"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21" specialization="true">
            <name>SelectFirst&lt;K, T></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="9342936"/>
                <argumentType ref="9342937"/>
            </content>
        </type>
        <type derived="true" id="type.9344612">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344768">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345159">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345237">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345315">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344108">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344030">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344690">
            <name>SelectFirst&lt;K, T>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344029">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345314">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345158">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344107">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344611">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344767">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344689">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345236">
            <name>SelectFirst&lt;K, T>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7" specialization="true">
            <name>SelectFirst&lt;Key, Value></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="9342998"/>
                <argumentType ref="9342999"/>
            </content>
        </type>
        <type derived="true" id="type.9344246">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343969">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343908">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344368">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344490">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344551">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345098">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344976">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344307">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344429">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345098">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345037">
            <name>SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344428">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344367">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344975">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345097">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344306">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344550">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344245">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343907">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345036">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343968">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345097">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344489">
            <name>SelectFirst&lt;Key, Value>*</name>
            <content>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343645" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="type.9342875"/>
            </content>
        </type>
        <type derived="true" id="type.9343654">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*>&amp;</name>
            <content>
                <baseType ref="type.9343645"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345446">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343645"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343653">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*>*</name>
            <content>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345460">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*>*&amp;</name>
            <content>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345459">
            <name>SelectFirst&lt;String&lt;uchar>, JsonValue*>**</name>
            <content>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343736" specialization="true">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate></name>
            <content>
                <primaryType ref="class_SelectFirst_T_U_5C7DFA11E2AE3BB651846960A70B00A231DD5282"/>
                <argumentType ref="type.9330406"/>
                <argumentType ref="9342920"/>
            </content>
        </type>
        <type derived="true" id="type.9343745">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;</name>
            <content>
                <baseType ref="type.9343736"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345515">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343736"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343744">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*</name>
            <content>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345531">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*&amp;</name>
            <content>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345530">
            <name>SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>**</name>
            <content>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076" specialization="true">
            <name>SharedCount&lt;T></name>
            <content>
                <primaryType ref="class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <argumentType ref="9329962"/>
            </content>
        </type>
        <type derived="true" id="type.9343833">
            <name>SharedCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345396">
            <name>SharedCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344847">
            <name>SharedCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345396">
            <name>SharedCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2724">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2718">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343845">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345408">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2702">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2696">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2686">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345408">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344859">
            <name>SharedCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344846">
            <name>SharedCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343832">
            <name>SharedCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345395">
            <name>SharedCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F" specialization="true">
            <name>SharedPtr&lt;T></name>
            <content>
                <primaryType ref="class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <argumentType ref="9329972"/>
            </content>
        </type>
        <type derived="true" id="type.9345390">
            <name>SharedPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343827">
            <name>SharedPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344841">
            <name>SharedPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2719">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345416">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344867">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2704">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2726">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343853">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345416">
            <name>SharedPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345389">
            <name>SharedPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344840">
            <name>SharedPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343826">
            <name>SharedPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345389">
            <name>SharedPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3053">
            <name>SizeOf&amp;&amp;</name>
            <content>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3068">
            <name>Statement&amp;&amp;</name>
            <content>
                <baseType ref="class_Statement_4ACF6167B3C915EDAAFD3A91F4749E778C15A0C0"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2990">
            <name>StaticInitCriticalSection&amp;&amp;</name>
            <content>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC" specialization="true">
            <name>String&lt;CharT></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="9330008"/>
            </content>
        </type>
        <type derived="true" id="type.2738">
            <name>String&lt;CharT>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330318" specialization="true">
            <name>String&lt;char></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9329188"/>
            </content>
        </type>
        <type derived="true" id="type.9330320">
            <name>String&lt;char>&amp;</name>
            <content>
                <baseType ref="type.9330318"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.9330406" specialization="true">
            <name>String&lt;uchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9329190"/>
            </content>
        </type>
        <type derived="true" id="type.9330408">
            <name>String&lt;uchar>&amp;</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330407">
            <name>String&lt;uchar>*</name>
            <content>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330361" specialization="true">
            <name>String&lt;wchar></name>
            <content>
                <primaryType ref="class_String_CharT_CF8CFC76E94ACA12B05A3C1C384DFA2026CAADAC"/>
                <argumentType ref="type.9329189"/>
            </content>
        </type>
        <type derived="true" id="type.9330363">
            <name>String&lt;wchar>&amp;</name>
            <content>
                <baseType ref="type.9330361"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="class_StringRule_6A3C489F690184D3F17D7916567A6918B614FF1C">
            <name>StringRule</name>
        </type>
        <type derived="true" id="type.9342973">
            <name>StringRule&amp;</name>
            <content>
                <baseType ref="class_StringRule_6A3C489F690184D3F17D7916567A6918B614FF1C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342972">
            <name>StringRule*</name>
            <content>
                <baseType ref="class_StringRule_6A3C489F690184D3F17D7916567A6918B614FF1C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345618">
            <name>StringRule*&amp;</name>
            <content>
                <baseType ref="class_StringRule_6A3C489F690184D3F17D7916567A6918B614FF1C"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345617">
            <name>StringRule**</name>
            <content>
                <baseType ref="class_StringRule_6A3C489F690184D3F17D7916567A6918B614FF1C"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3086">
            <name>SwitchStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="9343057">
            <name>T</name>
        </type>
        <type derived="true" id="type.9344087">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342937"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345216">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343044"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2590">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329806"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343877">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342929"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2542">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344669">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343017"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2612">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2664">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2662">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329932"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344825">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343025"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344826">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343028"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2602">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329823"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2604">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343820">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342927"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345294">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343048"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344891">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343031"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344165">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344834">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343029"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345375">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343057"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344918">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343032"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345383">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343058"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343841">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342928"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344215">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342997"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344188">
            <name>T&amp;</name>
            <content>
                <baseType ref="9342996"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345372">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343052"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345375">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343057"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345373">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343055"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345404">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343059"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344945">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343033"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2540">
            <name>T&amp;</name>
            <content>
                <baseType ref="9329714"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344747">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343021"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345374">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343056"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344855">
            <name>T&amp;</name>
            <content>
                <baseType ref="9343030"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344225">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9342997"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344928">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9343032"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2732">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329985"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344955">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9343033"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344198">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9342996"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343887">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9342929"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344901">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9343031"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2650">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329901"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344955">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9343033"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2618">
            <name>T&amp;&amp;</name>
            <content>
                <baseType ref="9329855"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345403">
            <name>T*</name>
            <content>
                <baseType ref="9343059"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343840">
            <name>T*</name>
            <content>
                <baseType ref="9342928"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344919">
            <name>T*</name>
            <content>
                <baseType ref="9343032"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344833">
            <name>T*</name>
            <content>
                <baseType ref="9343029"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344216">
            <name>T*</name>
            <content>
                <baseType ref="9342997"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345382">
            <name>T*</name>
            <content>
                <baseType ref="9343058"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343819">
            <name>T*</name>
            <content>
                <baseType ref="9342927"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344946">
            <name>T*</name>
            <content>
                <baseType ref="9343033"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343878">
            <name>T*</name>
            <content>
                <baseType ref="9342929"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344189">
            <name>T*</name>
            <content>
                <baseType ref="9342996"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344854">
            <name>T*</name>
            <content>
                <baseType ref="9343030"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344892">
            <name>T*</name>
            <content>
                <baseType ref="9343031"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345403">
            <name>T*</name>
            <content>
                <baseType ref="9343059"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3064">
            <name>TemplateId&amp;&amp;</name>
            <content>
                <baseType ref="class_TemplateId_41C40DA2459C0E10492E8021082B1BF0421C15E5"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3092">
            <name>ThrowStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3120">
            <name>TokenParser&amp;&amp;</name>
            <content>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3095">
            <name>TryStatement&amp;&amp;</name>
            <content>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3016">
            <name>Type&amp;&amp;</name>
            <content>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3056">
            <name>TypeName&amp;&amp;</name>
            <content>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D" specialization="true">
            <name>UnaryFun&lt;Pair&lt;K, T>, K></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <argumentType ref="9343051"/>
            </content>
        </type>
        <type derived="true" id="type.9344027">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345312">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344687">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344609">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345234">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345156">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344105">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344765">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345311">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344608">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345155">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344026">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344686">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345311">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344104">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345233">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344764">
            <name>UnaryFun&lt;Pair&lt;K, T>, K>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_K_T_K_327B231FE743DBB2862CBDE0BAD45AC4472A2A9D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF" specialization="true">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <argumentType ref="9343034"/>
            </content>
        </type>
        <type derived="true" id="type.9344548">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345095">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344487">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343905">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344426">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344365">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344304">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345034">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344243">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343966">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344973">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345034">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>&amp;</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344547">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345033">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343965">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344972">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345094">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344486">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344425">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343904">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344364">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344303">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344242">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344486">
            <name>UnaryFun&lt;Pair&lt;Key, Value>, Key>*</name>
            <content>
                <baseType ref="type.class_UnaryFun_Pair_Key_Value_Key_F63A5FACD7A5192AB4A9B7309BC2954AFA6B45BF"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343649" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, JsonValue*>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.9343641"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.9343651">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, JsonValue*>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9343649"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345447">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, JsonValue*>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343649"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343650">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, JsonValue*>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9343649"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343740" specialization="true">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, String&lt;uchar>></name>
            <content>
                <primaryType ref="class_UnaryFun_Argument_Result_40A5782E1C44E354DC2704648D2CE25C6A226646"/>
                <argumentType ref="type.9343732"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.9343742">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, String&lt;uchar>>&amp;</name>
            <content>
                <baseType ref="type.9343740"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345516">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343740"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343741">
            <name>UnaryFun&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, String&lt;uchar>>*</name>
            <content>
                <baseType ref="type.9343740"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3038">
            <name>UnaryMinus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3035">
            <name>UnaryPlus&amp;&amp;</name>
            <content>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9344002" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9343984"/>
            </content>
        </type>
        <type id="type.9344279" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344261"/>
            </content>
        </type>
        <type id="type.9344584" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344566"/>
            </content>
        </type>
        <type id="type.9344462" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344444"/>
            </content>
        </type>
        <type id="type.9344523" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344505"/>
            </content>
        </type>
        <type id="type.9345131" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9345113"/>
            </content>
        </type>
        <type id="type.9331783" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9331760"/>
            </content>
        </type>
        <type id="type.9343941" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9343923"/>
            </content>
        </type>
        <type id="type.9345009" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344991"/>
            </content>
        </type>
        <type id="type.9345070" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9345052"/>
            </content>
        </type>
        <type id="type.9344401" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344383"/>
            </content>
        </type>
        <type id="type.9344340" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9344322"/>
            </content>
        </type>
        <type id="type.9345131" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9345113"/>
            </content>
        </type>
        <type derived="true" id="type.9344342">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344340"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345011">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9345009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344525">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344523"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344464">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344586">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344403">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344401"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344004">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344002"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343943">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9343941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345133">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345072">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9345070"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345133">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344281">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <baseType ref="type.9344279"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345137">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344346">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344340"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343947">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343941"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344008">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344002"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345015">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344285">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344279"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344468">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344462"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344529">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344523"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345076">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345070"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2628">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9331783"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344590">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344584"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344407">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9344401"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345137">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344463">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345010">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9345009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345132">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344003">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344002"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344341">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344340"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344524">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344523"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345071">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9345070"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344280">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344279"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345132">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9345131"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344402">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344401"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344585">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9344584"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343942">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <baseType ref="type.9343941"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343687" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.9343669"/>
            </content>
        </type>
        <type derived="true" id="type.9343689">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>>&amp;</name>
            <content>
                <baseType ref="type.9343687"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343693">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343687"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343688">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>>*</name>
            <content>
                <baseType ref="type.9343687"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9332098" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_T_BD43000C158FD97CD38A6569462D590033079629"/>
            </content>
        </type>
        <type derived="true" id="type.2675">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;T>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332098"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9332040" specialization="true">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="type.class_RedBlackTreeNode_ValueType_38B50DA62919A6E728F70DA36817024C5A9A8855"/>
            </content>
        </type>
        <type derived="true" id="type.2671">
            <name>UniquePtr&lt;RedBlackTreeNode&lt;ValueType>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9332040"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9335294" specialization="true">
            <name>UniquePtr&lt;System.Exception></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_Exception_02AEA5204AD1035A91C2D843597EACBE078C8989"/>
            </content>
        </type>
        <type derived="true" id="type.2834">
            <name>UniquePtr&lt;System.Exception>&amp;&amp;</name>
            <content>
                <baseType ref="type.9335294"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9343802" specialization="true">
            <name>UniquePtr&lt;System.Json.JsonClassFactory></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
            </content>
        </type>
        <type derived="true" id="type.9343804">
            <name>UniquePtr&lt;System.Json.JsonClassFactory>&amp;</name>
            <content>
                <baseType ref="type.9343802"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343808">
            <name>UniquePtr&lt;System.Json.JsonClassFactory>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343802"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343803">
            <name>UniquePtr&lt;System.Json.JsonClassFactory>*</name>
            <content>
                <baseType ref="type.9343802"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343716" specialization="true">
            <name>UniquePtr&lt;System.Json.JsonParser></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
            </content>
        </type>
        <type derived="true" id="type.9343718">
            <name>UniquePtr&lt;System.Json.JsonParser>&amp;</name>
            <content>
                <baseType ref="type.9343716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343722">
            <name>UniquePtr&lt;System.Json.JsonParser>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343716"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343717">
            <name>UniquePtr&lt;System.Json.JsonParser>*</name>
            <content>
                <baseType ref="type.9343716"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9343622" specialization="true">
            <name>UniquePtr&lt;System.Json.JsonValue></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
            </content>
        </type>
        <type derived="true" id="type.9343624">
            <name>UniquePtr&lt;System.Json.JsonValue>&amp;</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343628">
            <name>UniquePtr&lt;System.Json.JsonValue>&amp;&amp;</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343623">
            <name>UniquePtr&lt;System.Json.JsonValue>*</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345438">
            <name>UniquePtr&lt;System.Json.JsonValue>*&amp;</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345439">
            <name>UniquePtr&lt;System.Json.JsonValue>*&amp;&amp;</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345437">
            <name>UniquePtr&lt;System.Json.JsonValue>**</name>
            <content>
                <baseType ref="type.9343622"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9339268" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ExpectationFailure_EBDBB0FC1DDED5BE7E15008622BB34AFCA7E9A8C"/>
            </content>
        </type>
        <type derived="true" id="type.2897">
            <name>UniquePtr&lt;System.Text.Parsing.ExpectationFailure>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339268"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338472" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingData_9F05BA66DA13D9A55E1E7FF50B19E250484C3A7B"/>
            </content>
        </type>
        <type derived="true" id="type.2856">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingData>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338472"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339394" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_ParsingException_71361E1F1BFEB5E7F55F5F6E472A696283973396"/>
            </content>
        </type>
        <type derived="true" id="type.2898">
            <name>UniquePtr&lt;System.Text.Parsing.ParsingException>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339394"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9338479" specialization="true">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="class_XmlLog_8F1C6843100321A56502C0710D6A400B6E4C7704"/>
            </content>
        </type>
        <type derived="true" id="type.2857">
            <name>UniquePtr&lt;System.Text.Parsing.XmlLog>&amp;&amp;</name>
            <content>
                <baseType ref="type.9338479"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009" specialization="true">
            <name>UniquePtr&lt;T></name>
            <content>
                <primaryType ref="class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <argumentType ref="9343029"/>
            </content>
        </type>
        <type derived="true" id="type.9345378">
            <name>UniquePtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343815">
            <name>UniquePtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344829">
            <name>UniquePtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345378">
            <name>UniquePtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2833">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343821">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344835">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345384">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344835">
            <name>UniquePtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343814">
            <name>UniquePtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345377">
            <name>UniquePtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344828">
            <name>UniquePtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="9343041">
            <name>Value</name>
        </type>
        <type derived="true" id="type.9344347">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343002"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344009">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9342934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345016">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343035"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344469">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343008"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343948">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9342931"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344408">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343005"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344530">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343011"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344286">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9342999"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344591">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343014"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345138">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343041"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345077">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343038"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2629">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9329863"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344591">
            <name>Value&amp;</name>
            <content>
                <baseType ref="9343014"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type id="type.9345590" specialization="true">
            <name>ValueObject&lt;JsonArray*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9342909"/>
            </content>
        </type>
        <type derived="true" id="type.9345592">
            <name>ValueObject&lt;JsonArray*>&amp;</name>
            <content>
                <baseType ref="type.9345590"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2987">
            <name>ValueObject&lt;JsonArray*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345590"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345591">
            <name>ValueObject&lt;JsonArray*>*</name>
            <content>
                <baseType ref="type.9345590"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345571" specialization="true">
            <name>ValueObject&lt;JsonNumber*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9342885"/>
            </content>
        </type>
        <type derived="true" id="type.9345573">
            <name>ValueObject&lt;JsonNumber*>&amp;</name>
            <content>
                <baseType ref="type.9345571"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2984">
            <name>ValueObject&lt;JsonNumber*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345571"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345572">
            <name>ValueObject&lt;JsonNumber*>*</name>
            <content>
                <baseType ref="type.9345571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345580" specialization="true">
            <name>ValueObject&lt;JsonObject*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9342903"/>
            </content>
        </type>
        <type derived="true" id="type.9345582">
            <name>ValueObject&lt;JsonObject*>&amp;</name>
            <content>
                <baseType ref="type.9345580"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2985">
            <name>ValueObject&lt;JsonObject*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345580"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345581">
            <name>ValueObject&lt;JsonObject*>*</name>
            <content>
                <baseType ref="type.9345580"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345562" specialization="true">
            <name>ValueObject&lt;JsonString*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9342897"/>
            </content>
        </type>
        <type derived="true" id="type.9345564">
            <name>ValueObject&lt;JsonString*>&amp;</name>
            <content>
                <baseType ref="type.9345562"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2982">
            <name>ValueObject&lt;JsonString*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345562"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345563">
            <name>ValueObject&lt;JsonString*>*</name>
            <content>
                <baseType ref="type.9345562"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9345550" specialization="true">
            <name>ValueObject&lt;JsonValue*></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9342875"/>
            </content>
        </type>
        <type derived="true" id="type.9345552">
            <name>ValueObject&lt;JsonValue*>&amp;</name>
            <content>
                <baseType ref="type.9345550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2980">
            <name>ValueObject&lt;JsonValue*>&amp;&amp;</name>
            <content>
                <baseType ref="type.9345550"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345551">
            <name>ValueObject&lt;JsonValue*>*</name>
            <content>
                <baseType ref="type.9345550"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9339769" specialization="true">
            <name>ValueObject&lt;String&lt;uchar>></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9330406"/>
            </content>
        </type>
        <type derived="true" id="type.2915">
            <name>ValueObject&lt;String&lt;uchar>>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339769"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79" specialization="true">
            <name>ValueObject&lt;ValueType></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="9337398"/>
            </content>
        </type>
        <type id="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79" specialization="true">
            <name>ValueObject&lt;ValueType></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="9337398"/>
            </content>
        </type>
        <type derived="true" id="type.2879">
            <name>ValueObject&lt;ValueType>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339757" specialization="true">
            <name>ValueObject&lt;bool></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329177"/>
            </content>
        </type>
        <type derived="true" id="type.2914">
            <name>ValueObject&lt;bool>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339757"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339594" specialization="true">
            <name>ValueObject&lt;byte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329179"/>
            </content>
        </type>
        <type derived="true" id="type.2901">
            <name>ValueObject&lt;byte>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339594"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339733" specialization="true">
            <name>ValueObject&lt;double></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329187"/>
            </content>
        </type>
        <type derived="true" id="type.2913">
            <name>ValueObject&lt;double>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339733"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339719" specialization="true">
            <name>ValueObject&lt;float></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329186"/>
            </content>
        </type>
        <type derived="true" id="type.2911">
            <name>ValueObject&lt;float>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339719"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339635" specialization="true">
            <name>ValueObject&lt;int></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329182"/>
            </content>
        </type>
        <type derived="true" id="type.2906">
            <name>ValueObject&lt;int>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339635"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339660" specialization="true">
            <name>ValueObject&lt;long></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329184"/>
            </content>
        </type>
        <type derived="true" id="type.2908">
            <name>ValueObject&lt;long>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339660"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339577" specialization="true">
            <name>ValueObject&lt;sbyte></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329178"/>
            </content>
        </type>
        <type derived="true" id="type.2900">
            <name>ValueObject&lt;sbyte>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339577"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339607" specialization="true">
            <name>ValueObject&lt;short></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329180"/>
            </content>
        </type>
        <type derived="true" id="type.2903">
            <name>ValueObject&lt;short>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339607"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339786" specialization="true">
            <name>ValueObject&lt;uchar></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329190"/>
            </content>
        </type>
        <type derived="true" id="type.2916">
            <name>ValueObject&lt;uchar>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339786"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339647" specialization="true">
            <name>ValueObject&lt;uint></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329183"/>
            </content>
        </type>
        <type derived="true" id="type.2907">
            <name>ValueObject&lt;uint>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339647"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339672" specialization="true">
            <name>ValueObject&lt;ulong></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329185"/>
            </content>
        </type>
        <type derived="true" id="type.2909">
            <name>ValueObject&lt;ulong>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339672"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.9339621" specialization="true">
            <name>ValueObject&lt;ushort></name>
            <content>
                <primaryType ref="class_ValueObject_ValueType_0BB8B7C549DA9C8B2D2419DC6E4B8ECAA2834E79"/>
                <argumentType ref="type.9329181"/>
            </content>
        </type>
        <type derived="true" id="type.2905">
            <name>ValueObject&lt;ushort>&amp;&amp;</name>
            <content>
                <baseType ref="type.9339621"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="class_ValueRule_B33645C537AF028FF2E642F30FE36D99549C75E4">
            <name>ValueRule</name>
        </type>
        <type derived="true" id="type.9342949">
            <name>ValueRule&amp;</name>
            <content>
                <baseType ref="class_ValueRule_B33645C537AF028FF2E642F30FE36D99549C75E4"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342948">
            <name>ValueRule*</name>
            <content>
                <baseType ref="class_ValueRule_B33645C537AF028FF2E642F30FE36D99549C75E4"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345561">
            <name>ValueRule*&amp;</name>
            <content>
                <baseType ref="class_ValueRule_B33645C537AF028FF2E642F30FE36D99549C75E4"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345560">
            <name>ValueRule**</name>
            <content>
                <baseType ref="class_ValueRule_B33645C537AF028FF2E642F30FE36D99549C75E4"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F" specialization="true">
            <name>WeakCount&lt;T></name>
            <content>
                <primaryType ref="class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <argumentType ref="9343030"/>
            </content>
        </type>
        <type derived="true" id="type.9345411">
            <name>WeakCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344862">
            <name>WeakCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343848">
            <name>WeakCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345411">
            <name>WeakCount&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2695">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344866">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2725">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345415">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2687">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345415">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2717">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2703">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343852">
            <name>WeakCount&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344861">
            <name>WeakCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345410">
            <name>WeakCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343847">
            <name>WeakCount&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.9330308" specialization="true">
            <name>WeakPtr&lt;System.IO.ByteStream></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.2500">
            <name>WeakPtr&lt;System.IO.ByteStream>&amp;&amp;</name>
            <content>
                <baseType ref="type.9330308"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC" specialization="true">
            <name>WeakPtr&lt;T></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="9329974"/>
            </content>
        </type>
        <type derived="true" id="type.9345419">
            <name>WeakPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344870">
            <name>WeakPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343856">
            <name>WeakPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345419">
            <name>WeakPtr&lt;T>&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2707">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2711">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2709">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2705">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2720">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2730">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2727">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2959">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2979">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2925">
            <name>WeakPtr&lt;T>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345418">
            <name>WeakPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344869">
            <name>WeakPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343855">
            <name>WeakPtr&lt;T>*</name>
            <content>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type id="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021" specialization="true">
            <name>WeakPtr&lt;U></name>
            <content>
                <primaryType ref="class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <argumentType ref="9329975"/>
            </content>
        </type>
        <type derived="true" id="type.2713">
            <name>WeakPtr&lt;U>&amp;&amp;</name>
            <content>
                <baseType ref="type.class_WeakPtr_U_DC1FE0F847E4C954B399A783A0BC0307D485B021"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329177">
            <name>bool</name>
        </type>
        <type derived="true" id="type.9329194">
            <name>bool&amp;</name>
            <content>
                <baseType ref="type.9329177"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329179">
            <name>byte</name>
        </type>
        <type derived="true" id="type.9329200">
            <name>byte&amp;</name>
            <content>
                <baseType ref="type.9329179"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329199">
            <name>byte*</name>
            <content>
                <baseType ref="type.9329179"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329188">
            <name>char</name>
        </type>
        <type derived="true" id="type.9329227">
            <name>char&amp;</name>
            <content>
                <baseType ref="type.9329188"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329226">
            <name>char*</name>
            <content>
                <baseType ref="type.9329188"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3024">
            <name>const AddressOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
            </content>
        </type>
        <type derived="true" id="type.3025">
            <name>const AddressOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AddressOf_F9F594A9680E5BE9D427D963284931AEB8E52492"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3096">
            <name>const AssertStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
            </content>
        </type>
        <type derived="true" id="type.3097">
            <name>const AssertStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_AssertStatement_D3CF5F3C391681B790B0E9E570953DA4FA666696"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2991">
            <name>const BinaryReader</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
            </content>
        </type>
        <type derived="true" id="type.2992">
            <name>const BinaryReader&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2993">
            <name>const BinaryWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
            </content>
        </type>
        <type derived="true" id="type.2994">
            <name>const BinaryWriter&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345175">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
            </content>
        </type>
        <type derived="true" id="type.9344124">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344121"/>
            </content>
        </type>
        <type derived="true" id="type.9344046">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344043"/>
            </content>
        </type>
        <type derived="true" id="type.9345253">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
            </content>
        </type>
        <type derived="true" id="type.9344628">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344625"/>
            </content>
        </type>
        <type derived="true" id="type.9344706">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344703"/>
            </content>
        </type>
        <type derived="true" id="type.9345253">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
            </content>
        </type>
        <type derived="true" id="type.9345331">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
            </content>
        </type>
        <type derived="true" id="type.9344784">
            <name>const Bucket&lt;Pair&lt;K, T>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344781"/>
            </content>
        </type>
        <type derived="true" id="type.9344048">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344630">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344625"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345255">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344126">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344121"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345255">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344786">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344781"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345333">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344708">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344703"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345177">
            <name>const Bucket&lt;Pair&lt;K, T>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344047">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344125">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345254">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345176">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344629">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344707">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344785">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345176">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345332">
            <name>const Bucket&lt;Pair&lt;K, T>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345352">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345196">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345274">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344805">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344067">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345274">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344727">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344649">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344145">
            <name>const Bucket&lt;Pair&lt;K, T>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345353">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344728">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344703"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344806">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344781"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344146">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344121"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345275">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345250"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344068">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344043"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345353">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345328"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344650">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344625"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345197">
            <name>const Bucket&lt;Pair&lt;K, T>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345172"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343761">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343758"/>
            </content>
        </type>
        <type derived="true" id="type.9343763">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343758"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343762">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343782">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343783">
            <name>const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343758"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2995">
            <name>const BufferedByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_BufferedByteStream_E74639F265FCFA3F7A3E61DE9D92C703A46FD573"/>
            </content>
        </type>
        <type derived="true" id="type.2996">
            <name>const ByteStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ByteStream_3B7A2F3379612ADBD7E416487752A1935AA8B96F"/>
            </content>
        </type>
        <type derived="true" id="type.3103">
            <name>const CodeExpandingVisitor</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
            </content>
        </type>
        <type derived="true" id="type.3104">
            <name>const CodeExpandingVisitor&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_CodeExpandingVisitor_2D824580300CDC92F6A03DB335EE0BB590738E53"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3039">
            <name>const Complement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
            </content>
        </type>
        <type derived="true" id="type.3040">
            <name>const Complement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Complement_E9C39B44C265CC4D19B0EFE97BE0DDAAF5B39DB5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3005">
            <name>const ConditionVariable</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26"/>
            </content>
        </type>
        <type derived="true" id="type.3057">
            <name>const Construct</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
            </content>
        </type>
        <type derived="true" id="type.3058">
            <name>const Construct&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Construct_9E0CFFBA332AF77070D82685BD0B3B21F6BBDAB8"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3010">
            <name>const ConversionException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
            </content>
        </type>
        <type derived="true" id="type.3011">
            <name>const ConversionException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ConversionException_968EDA1D00534F82FF78F973855F91349977511B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2499">
            <name>const Counter&lt;System.IO.ByteStream></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330292"/>
            </content>
        </type>
        <type derived="true" id="type.2690">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2714">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2697">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2698">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2699">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2692">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2706">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2708">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2924">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2710">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2721">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2728">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2729">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2958">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2978">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2680">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2683">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2688">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2689">
            <name>const Counter&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
            </content>
        </type>
        <type derived="true" id="type.2715">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2684">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345406">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2722">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2681">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2693">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345406">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344857">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2700">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343843">
            <name>const Counter&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_T_38A7F42D0E20389A22B581B3FAAD0E018811DD30"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2712">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.2691">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.2731">
            <name>const Counter&lt;U></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Counter_U_1A33EEC8E50A71590577FF01DE575F6124D3F73A"/>
            </content>
        </type>
        <type derived="true" id="type.3075">
            <name>const DeleteStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
            </content>
        </type>
        <type derived="true" id="type.3076">
            <name>const DeleteStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DeleteStatement_CFF57A1EB43152DAED3E95873037A4F83E2AAF0A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3021">
            <name>const Deref</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
            </content>
        </type>
        <type derived="true" id="type.3022">
            <name>const Deref&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Deref_6825EB2BE00B35C10BF9F18A018CADC1F1F12594"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3078">
            <name>const DestroyStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
            </content>
        </type>
        <type derived="true" id="type.3079">
            <name>const DestroyStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_DestroyStatement_E2AF4A1B38D4AE66FCF9EF639F0D8309CE050550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3115">
            <name>const ExpectationParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
            </content>
        </type>
        <type derived="true" id="type.3116">
            <name>const ExpectationParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpectationParser_0DFEF78F7EA112E6F20DC00ECFD31592FD692CAB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3081">
            <name>const ExpressionStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
            </content>
        </type>
        <type derived="true" id="type.3082">
            <name>const ExpressionStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ExpressionStatement_F01731B3CB572136FE603DE87C8C465F5B79ED54"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2997">
            <name>const FileSystemException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
            </content>
        </type>
        <type derived="true" id="type.2998">
            <name>const FileSystemException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_FileSystemException_BB9552A6F8CD7166104BC90F55939797AA006B1A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3087">
            <name>const GotoCaseStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
            </content>
        </type>
        <type derived="true" id="type.3088">
            <name>const GotoCaseStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoCaseStatement_54B0F8581DE0382A086C8C1EC6A19E93889D566D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3072">
            <name>const GotoStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
            </content>
        </type>
        <type derived="true" id="type.3073">
            <name>const GotoStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_GotoStatement_423A80C64905BCD7885A3433F9FE33D8BB37DF7E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344673">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9344091">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9345298">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9344595">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9344013">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9345220">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9345142">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9344751">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9345220">
            <name>const HashMap&lt;K, T, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
            </content>
        </type>
        <type derived="true" id="type.9345300">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344597">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344015">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345222">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344093">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344753">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344675">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345300">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345144">
            <name>const HashMap&lt;K, T, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345143">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344014">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344752">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345299">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344674">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344092">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345221">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344596">
            <name>const HashMap&lt;K, T, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_HashMap_K_T_H_C_925D53DF947742545E7EC07D3487F3EA8C8D1D36"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343729">
            <name>const HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343726"/>
            </content>
        </type>
        <type derived="true" id="type.9343731">
            <name>const HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343726"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343730">
            <name>const HashMap&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343726"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344112">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344616">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344694">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344034">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9345163">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344616">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9345319">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9345241">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344772">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
            </content>
        </type>
        <type derived="true" id="type.9344774">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344036">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344114">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344696">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344618">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345165">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345243">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345321">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344113">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344035">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344773">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345242">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345320">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344617">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345164">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345242">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344695">
            <name>const Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Hashtable_K_Pair_K_T_SelectFirst_K_T_H_C_E80C21FB917653DE3CC462FC5CADEEA03F979E2B"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343749">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343746"/>
            </content>
        </type>
        <type derived="true" id="type.9343751">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343746"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343750">
            <name>const Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343746"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344700">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344697"/>
            </content>
        </type>
        <type derived="true" id="type.9345247">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345244"/>
            </content>
        </type>
        <type derived="true" id="type.9345325">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
            </content>
        </type>
        <type derived="true" id="type.9344622">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344619"/>
            </content>
        </type>
        <type derived="true" id="type.9345169">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345166"/>
            </content>
        </type>
        <type derived="true" id="type.9344118">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344115"/>
            </content>
        </type>
        <type derived="true" id="type.9344778">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344775"/>
            </content>
        </type>
        <type derived="true" id="type.9345325">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
            </content>
        </type>
        <type derived="true" id="type.9344040">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344037"/>
            </content>
        </type>
        <type derived="true" id="type.9344702">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344697"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344780">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344624">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344619"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345327">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344042">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344037"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344120">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344115"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345171">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345166"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345327">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345249">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345244"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344701">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344697"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345248">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345244"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344041">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344037"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344119">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344115"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345326">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345170">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345166"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344623">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344619"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345326">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345322"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344779">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, Pair&lt;K, T>&amp;, Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344775"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345261">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345258"/>
            </content>
        </type>
        <type derived="true" id="type.9344054">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344051"/>
            </content>
        </type>
        <type derived="true" id="type.9344792">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344789"/>
            </content>
        </type>
        <type derived="true" id="type.9344714">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344711"/>
            </content>
        </type>
        <type derived="true" id="type.9345183">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345180"/>
            </content>
        </type>
        <type derived="true" id="type.9345339">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345336"/>
            </content>
        </type>
        <type derived="true" id="type.9344636">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344633"/>
            </content>
        </type>
        <type derived="true" id="type.9345339">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345336"/>
            </content>
        </type>
        <type derived="true" id="type.9344132">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344129"/>
            </content>
        </type>
        <type derived="true" id="type.9345185">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345180"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344134">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344129"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344716">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344711"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344056">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344051"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344794">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344789"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345263">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345258"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345341">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345336"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344638">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344633"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344055">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344051"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344793">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344789"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345340">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345336"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345184">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345180"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344637">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344633"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344715">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344711"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345262">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345258"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344133">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344129"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345262">
            <name>const HashtableIterator&lt;Pair&lt;K, T>, const Pair&lt;K, T>&amp;, const Pair&lt;K, T>*, Hashtable&lt;K, Pair&lt;K, T>, SelectFirst&lt;K, T>, H, C>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345258"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343755">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343752"/>
            </content>
        </type>
        <type derived="true" id="type.9343757">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343752"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343756">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343752"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343769">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343766"/>
            </content>
        </type>
        <type derived="true" id="type.9343771">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343766"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343770">
            <name>const HashtableIterator&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;, const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*, Hashtable&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343766"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2864">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2861"/>
            </content>
        </type>
        <type derived="true" id="type.9343426">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343423"/>
            </content>
        </type>
        <type derived="true" id="type.9343428">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343423"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2866">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2861"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2865">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2861"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343427">
            <name>const HashtableIterator&lt;String&lt;uchar>, String&lt;uchar>&amp;, String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343423"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2870">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2867"/>
            </content>
        </type>
        <type derived="true" id="type.9343432">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343429"/>
            </content>
        </type>
        <type derived="true" id="type.9343434">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343429"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2872">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2867"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343433">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343429"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2871">
            <name>const HashtableIterator&lt;String&lt;uchar>, const String&lt;uchar>&amp;, const String&lt;uchar>*, Hashtable&lt;String&lt;uchar>, String&lt;uchar>, Identity&lt;String&lt;uchar>>, Hasher&lt;String&lt;uchar>>, EqualTo&lt;String&lt;uchar>>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2867"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2999">
            <name>const InvalidPathException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
            </content>
        </type>
        <type derived="true" id="type.3000">
            <name>const InvalidPathException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_InvalidPathException_B507BC7383A55580000E7A669FAAE1ABECF7FFBA"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3042">
            <name>const Invoke</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
            </content>
        </type>
        <type derived="true" id="type.3043">
            <name>const Invoke&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Invoke_D6527871DA9EA1727DFAC637E9FF17EF73B2DAF5"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342911">
            <name>const JsonArray</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
            </content>
        </type>
        <type derived="true" id="type.9342913">
            <name>const JsonArray&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342912">
            <name>const JsonArray*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2986">
            <name>const JsonArray*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonArray_595A35C98AB243A92CA1C39BB1B07E82AA246D18"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342893">
            <name>const JsonBool</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
            </content>
        </type>
        <type derived="true" id="type.9342895">
            <name>const JsonBool&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342894">
            <name>const JsonBool*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonBool_DECA0A9F59CE58DA61371982ADCFCD31F1497F79"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343735">
            <name>const JsonClassCreatorDelegate&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342920"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343810">
            <name>const JsonClassFactory</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
            </content>
        </type>
        <type derived="true" id="type.9343811">
            <name>const JsonClassFactory&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343809">
            <name>const JsonClassFactory*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonClassFactory_07F3FE1559307E1B17EEBEAFBAA8C9DBAA71924E"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3128">
            <name>const JsonGrammar</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
            </content>
        </type>
        <type derived="true" id="type.3129">
            <name>const JsonGrammar&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonGrammar_35AA9FF722AADCE4D0495A1DD9EF9B19479BF318"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3131">
            <name>const JsonImportException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723"/>
            </content>
        </type>
        <type derived="true" id="type.3132">
            <name>const JsonImportException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonImportException_B2C659772CC55BEE3DF2ECEA8C50121E3DA06723"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342881">
            <name>const JsonNull</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2"/>
            </content>
        </type>
        <type derived="true" id="type.9342883">
            <name>const JsonNull&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342882">
            <name>const JsonNull*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNull_E0746AE6880508740D5FFC8AF4E0FB0A7AE20ED2"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342887">
            <name>const JsonNumber</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
            </content>
        </type>
        <type derived="true" id="type.9342889">
            <name>const JsonNumber&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342888">
            <name>const JsonNumber*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2983">
            <name>const JsonNumber*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonNumber_BA94887A1742701B420D069040E7953026161429"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342905">
            <name>const JsonObject</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
            </content>
        </type>
        <type derived="true" id="type.9342907">
            <name>const JsonObject&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342906">
            <name>const JsonObject*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345491">
            <name>const JsonObject*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345490">
            <name>const JsonObject**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonObject_1ACA524ABF05C4E15B709275F66F3BF5C165B69D"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342917">
            <name>const JsonParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
            </content>
        </type>
        <type derived="true" id="type.9342919">
            <name>const JsonParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342918">
            <name>const JsonParser*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonParser_821F84FEBAE4D09942A9E5D6B178B8C8CB1D24E9"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342899">
            <name>const JsonString</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
            </content>
        </type>
        <type derived="true" id="type.9342901">
            <name>const JsonString&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342900">
            <name>const JsonString*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2981">
            <name>const JsonString*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonString_5806452F49D8C71DEDC42FCEB48EC3A2163F7516"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342877">
            <name>const JsonValue</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
            </content>
        </type>
        <type derived="true" id="type.9342879">
            <name>const JsonValue&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9342878">
            <name>const JsonValue*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343644">
            <name>const JsonValue*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345505">
            <name>const JsonValue**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345304">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343051"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345226">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344601">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343016"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344679">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343020"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345148">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343043"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344019">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342936"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2583">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329805"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344097">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342940"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345304">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343051"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344757">
            <name>const K&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343024"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343958">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342933"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344418">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343007"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345087">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343040"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344965">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343034"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344479">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343010"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344540">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343013"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344296">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343001"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344965">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343034"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343897">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342930"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345026">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343037"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344357">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343004"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2623">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329862"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344235">
            <name>const Key&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342998"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2670">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2606">
            <name>const KeyType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329834"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3112">
            <name>const KleeneStarParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
            </content>
        </type>
        <type derived="true" id="type.3113">
            <name>const KleeneStarParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_KleeneStarParser_8B553023A6E0AA98D08C756A40F526859BF46D2D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343630">
            <name>const Less&lt;String&lt;uchar>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343629"/>
            </content>
        </type>
        <type derived="true" id="type.9343632">
            <name>const Less&lt;String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343629"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343631">
            <name>const Less&lt;String&lt;uchar>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343629"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344142">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344139"/>
            </content>
        </type>
        <type derived="true" id="type.9345349">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345346"/>
            </content>
        </type>
        <type derived="true" id="type.9344802">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344799"/>
            </content>
        </type>
        <type derived="true" id="type.9345349">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345346"/>
            </content>
        </type>
        <type derived="true" id="type.9344064">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344061"/>
            </content>
        </type>
        <type derived="true" id="type.9344646">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344643"/>
            </content>
        </type>
        <type derived="true" id="type.9345271">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345268"/>
            </content>
        </type>
        <type derived="true" id="type.9344724">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344721"/>
            </content>
        </type>
        <type derived="true" id="type.9345193">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345190"/>
            </content>
        </type>
        <type derived="true" id="type.9344804">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344799"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345273">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345268"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345351">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345346"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344144">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344139"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344726">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344721"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344648">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344643"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344804">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344799"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344066">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344061"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345195">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344647">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344643"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344803">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344799"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344725">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344721"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345272">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345268"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344143">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344139"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345194">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345350">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345346"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345272">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345268"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344065">
            <name>const List&lt;Bucket&lt;Pair&lt;K, T>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344061"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343779">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343776"/>
            </content>
        </type>
        <type derived="true" id="type.9343781">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343776"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343780">
            <name>const List&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343776"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344905">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344878">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344905">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344202">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9343864">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344175">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344932">
            <name>const List&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
            </content>
        </type>
        <type derived="true" id="type.9344204">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344177">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344907">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344880">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343866">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344907">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344934">
            <name>const List&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344879">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344176">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344933">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344879">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344906">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343865">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344203">
            <name>const List&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_List_T_579A89BF19B54042190CDE2A7E54E1DFAAFDB31C"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343698">
            <name>const List&lt;UniquePtr&lt;System.Json.JsonValue>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343695"/>
            </content>
        </type>
        <type derived="true" id="type.9343700">
            <name>const List&lt;UniquePtr&lt;System.Json.JsonValue>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343695"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343699">
            <name>const List&lt;UniquePtr&lt;System.Json.JsonValue>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343695"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3065">
            <name>const Literal</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
            </content>
        </type>
        <type derived="true" id="type.3066">
            <name>const Literal&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Literal_2996038F9E8CCAE363F6BF2855F68961FFF05F77"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2639">
            <name>const LockGuard&lt;Mtx></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
            </content>
        </type>
        <type derived="true" id="type.2640">
            <name>const LockGuard&lt;Mtx>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_LockGuard_Mtx_F810C02E34A5A6A123C64A7E3F138A4D6473C5A1"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2826">
            <name>const LockGuard&lt;System.Threading.Mutex></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9335149"/>
            </content>
        </type>
        <type derived="true" id="type.2827">
            <name>const LockGuard&lt;System.Threading.Mutex>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9335149"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343891">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344412">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9345081">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344351">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344534">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344229">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344290">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344959">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344473">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9345020">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344959">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9343952">
            <name>const Map&lt;Key, Value, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
            </content>
        </type>
        <type derived="true" id="type.9344353">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344231">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344536">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344292">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345022">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343893">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344414">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343954">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345083">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344475">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344961">
            <name>const Map&lt;Key, Value, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344413">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345082">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343953">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344474">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345082">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344291">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345021">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343892">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344230">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344352">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344535">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344960">
            <name>const Map&lt;Key, Value, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Map_Key_Value_KeyCompare_530B43B96CDA5DBA8045A4DA0691BBB50DE2DB3D"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343638">
            <name>const Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343635"/>
            </content>
        </type>
        <type derived="true" id="type.9343640">
            <name>const Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343635"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343639">
            <name>const Map&lt;String&lt;uchar>, JsonValue*, Less&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343635"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3006">
            <name>const Mutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Mutex_CAF802A5F8A71934B07EA6C23937F60D9AECD650"/>
            </content>
        </type>
        <type derived="true" id="type.3060">
            <name>const New</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
            </content>
        </type>
        <type derived="true" id="type.3061">
            <name>const New&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_New_DC04D52C4D476FD919D770D43330D434B51E2D21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3018">
            <name>const Not</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
            </content>
        </type>
        <type derived="true" id="type.3019">
            <name>const Not&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Not_5E324445E5A5F8057BEBD48898C26110CD402187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3106">
            <name>const OptionalParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
            </content>
        </type>
        <type derived="true" id="type.3107">
            <name>const OptionalParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OptionalParser_F2758E0656F6FF0FCFAFB3BADC90975486CE943A"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3001">
            <name>const OutputStream</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_OutputStream_D306768ED83C9FB00EA54CD61D604CE2BF727452"/>
            </content>
        </type>
        <type derived="true" id="type.9345335">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9345257">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9345179">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9345257">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344050">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344632">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344128">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344710">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9344788">
            <name>const Pair&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
            </content>
        </type>
        <type derived="true" id="type.9345235">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344766">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344028">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345313">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344610">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345157">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344106">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344688">
            <name>const Pair&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345334">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344049">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345178">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345256">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345334">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344709">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344127">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344787">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344631">
            <name>const Pair&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_K_T_4F7B9E9D2CC63EB29C02900F65865A4DE329E980"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344437">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344984">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344376">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344254">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9345045">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344498">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344315">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9344559">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9343977">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9345106">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9343916">
            <name>const Pair&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
            </content>
        </type>
        <type derived="true" id="type.9343906">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344366">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343967">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344974">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345096">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344427">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344305">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345035">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344488">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344549">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344244">
            <name>const Pair&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344375">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344253">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344497">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345105">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343915">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343976">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345044">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344983">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344436">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345105">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344558">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344314">
            <name>const Pair&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_Key_Value_0B3780B2DBD20159FC18E9CD2405842E7C4C2183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343662">
            <name>const Pair&lt;String&lt;uchar>, JsonValue*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343641"/>
            </content>
        </type>
        <type derived="true" id="type.9343652">
            <name>const Pair&lt;String&lt;uchar>, JsonValue*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343641"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343661">
            <name>const Pair&lt;String&lt;uchar>, JsonValue*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343641"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343765">
            <name>const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343732"/>
            </content>
        </type>
        <type derived="true" id="type.9343743">
            <name>const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343732"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343764">
            <name>const Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343732"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2646">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2649">
            <name>const Pair&lt;T, U>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_Pair_T_U_449CEB7418A695807AFB84D22FA06A7C052670F9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3109">
            <name>const PositiveParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
            </content>
        </type>
        <type derived="true" id="type.3110">
            <name>const PositiveParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PositiveParser_773062827D5C6002110C7D897D790DAEEE06A502"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3048">
            <name>const PostfixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
            </content>
        </type>
        <type derived="true" id="type.3049">
            <name>const PostfixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixDecrement_D09AB7ACBA491B153051FDF9DE245E475C7F6392"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3045">
            <name>const PostfixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
            </content>
        </type>
        <type derived="true" id="type.3046">
            <name>const PostfixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PostfixIncrement_DDC6B0BA10308D23CE5F90EE4D6B95A60E196FE9"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3030">
            <name>const PrefixDecrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
            </content>
        </type>
        <type derived="true" id="type.3031">
            <name>const PrefixDecrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixDecrement_999D7C38861B7D6CED24609E18ACD9197FF478F0"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3027">
            <name>const PrefixIncrement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
            </content>
        </type>
        <type derived="true" id="type.3028">
            <name>const PrefixIncrement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_PrefixIncrement_8035645A064F2FF3F7808392B992A24FA56E9E9D"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345288">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345285"/>
            </content>
        </type>
        <type derived="true" id="type.9344159">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344156"/>
            </content>
        </type>
        <type derived="true" id="type.9344081">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344078"/>
            </content>
        </type>
        <type derived="true" id="type.9345288">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345285"/>
            </content>
        </type>
        <type derived="true" id="type.9344819">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344816"/>
            </content>
        </type>
        <type derived="true" id="type.9345210">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345207"/>
            </content>
        </type>
        <type derived="true" id="type.9344663">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344660"/>
            </content>
        </type>
        <type derived="true" id="type.9344741">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344738"/>
            </content>
        </type>
        <type derived="true" id="type.9345366">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345363"/>
            </content>
        </type>
        <type derived="true" id="type.9345212">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345207"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345290">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345285"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344161">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344156"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344665">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344660"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345368">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345363"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344821">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344816"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344743">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344738"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345290">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345285"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344083">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344078"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344664">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344660"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344082">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344078"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344820">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344816"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345367">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345363"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344820">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344816"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344742">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344738"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344160">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344156"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345211">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345207"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345289">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, Bucket&lt;Pair&lt;K, T>>*&amp;, Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345285"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344810">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344807"/>
            </content>
        </type>
        <type derived="true" id="type.9345279">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345276"/>
            </content>
        </type>
        <type derived="true" id="type.9345357">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
            </content>
        </type>
        <type derived="true" id="type.9344654">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344651"/>
            </content>
        </type>
        <type derived="true" id="type.9344732">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344729"/>
            </content>
        </type>
        <type derived="true" id="type.9344072">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344069"/>
            </content>
        </type>
        <type derived="true" id="type.9345201">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345198"/>
            </content>
        </type>
        <type derived="true" id="type.9345357">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
            </content>
        </type>
        <type derived="true" id="type.9344150">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344147"/>
            </content>
        </type>
        <type derived="true" id="type.9344074">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344069"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344656">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344651"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345359">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344734">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344729"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345203">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345198"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345281">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345276"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345359">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344812">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344807"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344152">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344147"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345358">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344073">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344069"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344655">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344651"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344733">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344729"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344151">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344147"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345202">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345198"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345280">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345276"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344811">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344807"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345358">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;K, T>>*, const Bucket&lt;Pair&lt;K, T>>*&amp;, const Bucket&lt;Pair&lt;K, T>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345354"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343796">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343793"/>
            </content>
        </type>
        <type derived="true" id="type.9343798">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343793"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343797">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343793"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343787">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343784"/>
            </content>
        </type>
        <type derived="true" id="type.9343789">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343784"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343788">
            <name>const RandomAccessIter&lt;Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>*&amp;, const Bucket&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>>**>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343784"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344923">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344950">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9343882">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344193">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344220">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344923">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344896">
            <name>const RandomAccessIter&lt;T, T&amp;, T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
            </content>
        </type>
        <type derived="true" id="type.9344898">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344925">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343884">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344952">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344195">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344925">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344222">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344951">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344924">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343883">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344194">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344221">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344897">
            <name>const RandomAccessIter&lt;T, T&amp;, T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_R_T_P_43C14701A8FE9992ACA08D3E43EA4149D07C25C7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344914">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9344941">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9344211">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9343873">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9344184">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9344887">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
            </content>
        </type>
        <type derived="true" id="type.9344889">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344916">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344186">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343875">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344213">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344943">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344185">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344915">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344888">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343874">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344212">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344942">
            <name>const RandomAccessIter&lt;T, const T&amp;, const T*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RandomAccessIter_T_T_C_R_T_C_P_AB1D26FEF8DAA99828EA69283FE1CAA01979C892"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343711">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343708"/>
            </content>
        </type>
        <type derived="true" id="type.9343713">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343708"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343712">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, UniquePtr&lt;System.Json.JsonValue>&amp;, UniquePtr&lt;System.Json.JsonValue>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343708"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343704">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343701"/>
            </content>
        </type>
        <type derived="true" id="type.9343706">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343701"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343705">
            <name>const RandomAccessIter&lt;UniquePtr&lt;System.Json.JsonValue>, const UniquePtr&lt;System.Json.JsonValue>&amp;, const UniquePtr&lt;System.Json.JsonValue>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343701"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343194">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343191"/>
            </content>
        </type>
        <type derived="true" id="type.2633">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2630"/>
            </content>
        </type>
        <type derived="true" id="type.2635">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2630"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343196">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343191"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343195">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343191"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2634">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2630"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343195">
            <name>const RandomAccessIter&lt;byte, byte&amp;, byte*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343191"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343065">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343062"/>
            </content>
        </type>
        <type derived="true" id="type.2504">
            <name>const RandomAccessIter&lt;char, char&amp;, char*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2501"/>
            </content>
        </type>
        <type derived="true" id="type.2506">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2501"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343067">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343062"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343066">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343062"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2505">
            <name>const RandomAccessIter&lt;char, char&amp;, char*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2501"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343084">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343081"/>
            </content>
        </type>
        <type derived="true" id="type.2523">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2520"/>
            </content>
        </type>
        <type derived="true" id="type.9343086">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343081"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2525">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2520"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343085">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343081"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2524">
            <name>const RandomAccessIter&lt;uchar, uchar&amp;, uchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2520"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343383">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343380"/>
            </content>
        </type>
        <type derived="true" id="type.2821">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2818"/>
            </content>
        </type>
        <type derived="true" id="type.2823">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2818"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343385">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343380"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2822">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2818"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343384">
            <name>const RandomAccessIter&lt;uint, uint&amp;, uint*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343380"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2534">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2531"/>
            </content>
        </type>
        <type derived="true" id="type.9343095">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343092"/>
            </content>
        </type>
        <type derived="true" id="type.2536">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2531"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343097">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343092"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2535">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2531"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343096">
            <name>const RandomAccessIter&lt;ulong, ulong&amp;, ulong*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343092"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343074">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343071"/>
            </content>
        </type>
        <type derived="true" id="type.2513">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2510"/>
            </content>
        </type>
        <type derived="true" id="type.9343074">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343071"/>
            </content>
        </type>
        <type derived="true" id="type.9343076">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343071"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2515">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2510"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343075">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343071"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2514">
            <name>const RandomAccessIter&lt;wchar, wchar&amp;, wchar*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.2510"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3007">
            <name>const RecursiveMutex</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82"/>
            </content>
        </type>
        <type derived="true" id="type.9343912">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9343973">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344250">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344555">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344980">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9345041">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344372">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344494">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9345041">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344311">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344433">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9345102">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
            </content>
        </type>
        <type derived="true" id="type.9344252">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343975">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344982">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344313">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345104">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344435">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343914">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344496">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344374">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344982">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344557">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345043">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345103">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343913">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345042">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344556">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344373">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344251">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343974">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344495">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344981">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344312">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344434">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345103">
            <name>const RedBlackTree&lt;Key, Pair&lt;Key, Value>, SelectFirst&lt;Key, Value>, KeyCompare>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_RedBlackTree_Key_Pair_Key_Value_SelectFirst_Key_Value_KeyCompare_0CD92BEDBC8318D391FF5E2EA2F015B6477DA047"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343658">
            <name>const RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343655"/>
            </content>
        </type>
        <type derived="true" id="type.9343660">
            <name>const RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343655"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343659">
            <name>const RedBlackTree&lt;String&lt;uchar>, Pair&lt;String&lt;uchar>, JsonValue*>, SelectFirst&lt;String&lt;uchar>, JsonValue*>, Less&lt;String&lt;uchar>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343655"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343987">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343984"/>
            </content>
        </type>
        <type derived="true" id="type.9344508">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344505"/>
            </content>
        </type>
        <type derived="true" id="type.9344994">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344991"/>
            </content>
        </type>
        <type derived="true" id="type.9344569">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344566"/>
            </content>
        </type>
        <type derived="true" id="type.9345116">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345113"/>
            </content>
        </type>
        <type derived="true" id="type.9344447">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344444"/>
            </content>
        </type>
        <type derived="true" id="type.9343926">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343923"/>
            </content>
        </type>
        <type derived="true" id="type.9345055">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345052"/>
            </content>
        </type>
        <type derived="true" id="type.9344264">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344261"/>
            </content>
        </type>
        <type derived="true" id="type.9345116">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345113"/>
            </content>
        </type>
        <type derived="true" id="type.9344386">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344383"/>
            </content>
        </type>
        <type derived="true" id="type.9344325">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344322"/>
            </content>
        </type>
        <type derived="true" id="type.9344571">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344566"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343989">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343984"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344510">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344505"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344388">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344383"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345057">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345052"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344266">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344261"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344996">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344991"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345118">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345113"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344449">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344444"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345118">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345113"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343928">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343923"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344327">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344322"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344326">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344322"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344265">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344261"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344387">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344383"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344995">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344991"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344570">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344566"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344995">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344991"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344448">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344444"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344509">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344505"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345056">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345052"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345117">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345113"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343988">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343984"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343927">
            <name>const RedBlackTreeNode&lt;Pair&lt;Key, Value>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343923"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343672">
            <name>const RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343669"/>
            </content>
        </type>
        <type derived="true" id="type.9343674">
            <name>const RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343669"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343673">
            <name>const RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343669"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344271">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344268"/>
            </content>
        </type>
        <type derived="true" id="type.9344576">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344573"/>
            </content>
        </type>
        <type derived="true" id="type.9344393">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344390"/>
            </content>
        </type>
        <type derived="true" id="type.9343994">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343991"/>
            </content>
        </type>
        <type derived="true" id="type.9344454">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344451"/>
            </content>
        </type>
        <type derived="true" id="type.9344515">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344512"/>
            </content>
        </type>
        <type derived="true" id="type.9345001">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344998"/>
            </content>
        </type>
        <type derived="true" id="type.9345123">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345120"/>
            </content>
        </type>
        <type derived="true" id="type.9344332">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344329"/>
            </content>
        </type>
        <type derived="true" id="type.9345062">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345059"/>
            </content>
        </type>
        <type derived="true" id="type.9343933">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343930"/>
            </content>
        </type>
        <type derived="true" id="type.9344273">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344268"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344395">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344390"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344517">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344512"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345125">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345120"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343935">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343930"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344456">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344451"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345064">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345059"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344334">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344329"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345003">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344998"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343996">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343991"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344578">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344573"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345003">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344998"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345063">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345059"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344394">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344390"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344577">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344573"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344333">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344329"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345124">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345120"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344272">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344268"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344455">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344451"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343995">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343991"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345124">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345120"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345002">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344998"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343934">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343930"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344516">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, Pair&lt;Key, Value>&amp;, Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344512"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345110">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345107"/>
            </content>
        </type>
        <type derived="true" id="type.9344380">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344377"/>
            </content>
        </type>
        <type derived="true" id="type.9343981">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343978"/>
            </content>
        </type>
        <type derived="true" id="type.9345049">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345046"/>
            </content>
        </type>
        <type derived="true" id="type.9344441">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344438"/>
            </content>
        </type>
        <type derived="true" id="type.9344502">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344499"/>
            </content>
        </type>
        <type derived="true" id="type.9345110">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345107"/>
            </content>
        </type>
        <type derived="true" id="type.9344988">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344985"/>
            </content>
        </type>
        <type derived="true" id="type.9344319">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344316"/>
            </content>
        </type>
        <type derived="true" id="type.9344563">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344560"/>
            </content>
        </type>
        <type derived="true" id="type.9343920">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343917"/>
            </content>
        </type>
        <type derived="true" id="type.9344258">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344255"/>
            </content>
        </type>
        <type derived="true" id="type.9344565">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344560"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344382">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344377"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344504">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344499"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344260">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344255"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345051">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345046"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344443">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344438"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345112">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345107"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343922">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343917"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344990">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344985"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343983">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343978"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345112">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345107"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344321">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344316"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344989">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344985"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343982">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343978"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344442">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344438"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344320">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344316"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343921">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343917"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345111">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345107"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345050">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345046"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344259">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344255"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344503">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344499"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344564">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344560"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344381">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344377"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345050">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;Key, Value>, const Pair&lt;Key, Value>&amp;, const Pair&lt;Key, Value>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345046"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343679">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343676"/>
            </content>
        </type>
        <type derived="true" id="type.9343681">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343676"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343680">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, Pair&lt;String&lt;uchar>, JsonValue*>&amp;, Pair&lt;String&lt;uchar>, JsonValue*>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343676"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343666">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343663"/>
            </content>
        </type>
        <type derived="true" id="type.9343668">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343663"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343667">
            <name>const RedBlackTreeNodeIterator&lt;Pair&lt;String&lt;uchar>, JsonValue*>, const Pair&lt;String&lt;uchar>, JsonValue*>&amp;, const Pair&lt;String&lt;uchar>, JsonValue*>*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343663"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3069">
            <name>const ReturnStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
            </content>
        </type>
        <type derived="true" id="type.3070">
            <name>const ReturnStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ReturnStatement_FEC70A987D7361EC167E7C772D29550ABF5D7750"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345307">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344100">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344604">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9345151">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344682">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344760">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344022">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9345229">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9345307">
            <name>const SelectFirst&lt;K, T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
            </content>
        </type>
        <type derived="true" id="type.9344024">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345231">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345153">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345309">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344102">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344684">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344762">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344606">
            <name>const SelectFirst&lt;K, T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344023">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345308">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345152">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344101">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344683">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345230">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344761">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344605">
            <name>const SelectFirst&lt;K, T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_K_T_6517CD3D344AC6593B068C4034F6235FDD661F21"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345029">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344482">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344299">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344238">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344543">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9343961">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9343900">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344421">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344360">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9345029">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9344968">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9345090">
            <name>const SelectFirst&lt;Key, Value></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
            </content>
        </type>
        <type derived="true" id="type.9343902">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345092">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344484">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344545">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345031">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344301">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344362">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344423">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345092">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344240">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343963">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344970">
            <name>const SelectFirst&lt;Key, Value>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344483">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344422">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344544">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344969">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345030">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344300">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345091">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344361">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343901">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344239">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343962">
            <name>const SelectFirst&lt;Key, Value>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SelectFirst_Key_Value_5B4B4F4395127EACE930C6095E956250FEB8E2B7"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343646">
            <name>const SelectFirst&lt;String&lt;uchar>, JsonValue*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343645"/>
            </content>
        </type>
        <type derived="true" id="type.9343648">
            <name>const SelectFirst&lt;String&lt;uchar>, JsonValue*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343645"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343647">
            <name>const SelectFirst&lt;String&lt;uchar>, JsonValue*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345458">
            <name>const SelectFirst&lt;String&lt;uchar>, JsonValue*>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345457">
            <name>const SelectFirst&lt;String&lt;uchar>, JsonValue*>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343645"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343737">
            <name>const SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343736"/>
            </content>
        </type>
        <type derived="true" id="type.9343739">
            <name>const SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343736"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343738">
            <name>const SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345529">
            <name>const SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>*&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345528">
            <name>const SelectFirst&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>**</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343736"/>
                <qualifier>*</qualifier>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345397">
            <name>const SharedCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
            </content>
        </type>
        <type derived="true" id="type.9343834">
            <name>const SharedCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
            </content>
        </type>
        <type derived="true" id="type.9344848">
            <name>const SharedCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
            </content>
        </type>
        <type derived="true" id="type.9345397">
            <name>const SharedCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
            </content>
        </type>
        <type derived="true" id="type.9345399">
            <name>const SharedCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344850">
            <name>const SharedCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345399">
            <name>const SharedCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343836">
            <name>const SharedCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344849">
            <name>const SharedCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345398">
            <name>const SharedCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343835">
            <name>const SharedCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345398">
            <name>const SharedCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedCount_T_9CD10E14AE3ED976890448663511E7CD78824076"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345391">
            <name>const SharedPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
            </content>
        </type>
        <type derived="true" id="type.9343828">
            <name>const SharedPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
            </content>
        </type>
        <type derived="true" id="type.9345391">
            <name>const SharedPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
            </content>
        </type>
        <type derived="true" id="type.9344842">
            <name>const SharedPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
            </content>
        </type>
        <type derived="true" id="type.9345393">
            <name>const SharedPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343830">
            <name>const SharedPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344844">
            <name>const SharedPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345393">
            <name>const SharedPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343829">
            <name>const SharedPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344843">
            <name>const SharedPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345392">
            <name>const SharedPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_SharedPtr_T_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3051">
            <name>const SizeOf</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
            </content>
        </type>
        <type derived="true" id="type.3052">
            <name>const SizeOf&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SizeOf_7E82BCAA3BF507459413C346B576D53CFCE5288B"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2988">
            <name>const StaticInitCriticalSection</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
            </content>
        </type>
        <type derived="true" id="type.2989">
            <name>const StaticInitCriticalSection&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StaticInitCriticalSection_39AB37625C7D8624475080E487A05114E48A9C6C"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3002">
            <name>const StreamWriter</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311"/>
            </content>
        </type>
        <type derived="true" id="type.9330323">
            <name>const String&lt;char>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330318"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330411">
            <name>const String&lt;uchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330410">
            <name>const String&lt;uchar>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330406"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330366">
            <name>const String&lt;wchar>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9330361"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3084">
            <name>const SwitchStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
            </content>
        </type>
        <type derived="true" id="type.3085">
            <name>const SwitchStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_SwitchStatement_18D2C0BB3BA2134D050B02EA375A462847662B6E"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344207">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342997"/>
            </content>
        </type>
        <type derived="true" id="type.9344910">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343032"/>
            </content>
        </type>
        <type derived="true" id="type.9343869">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342929"/>
            </content>
        </type>
        <type derived="true" id="type.9344910">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343032"/>
            </content>
        </type>
        <type derived="true" id="type.9345386">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343058"/>
            </content>
        </type>
        <type derived="true" id="type.9344837">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343029"/>
            </content>
        </type>
        <type derived="true" id="type.9343823">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342927"/>
            </content>
        </type>
        <type derived="true" id="type.9344180">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342996"/>
            </content>
        </type>
        <type derived="true" id="type.9344937">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343033"/>
            </content>
        </type>
        <type derived="true" id="type.9344883">
            <name>const T</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343031"/>
            </content>
        </type>
        <type derived="true" id="type.9344205">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342997"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344680">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343021"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343867">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342929"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2642">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329882"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345387">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343058"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344178">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342996"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345305">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343052"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343824">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342927"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343812">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342926"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2571">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329777"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345387">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343058"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344881">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343031"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345149">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343044"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344908">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343032"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344098">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2611">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329842"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344838">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343029"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344935">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343033"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344020">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342937"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344602">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343017"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2663">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2661">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329932"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2569">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329774"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2603">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329825"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2568">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329772"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2566">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329769"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2565">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329767"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2563">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329764"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2601">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329823"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2562">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329762"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2560">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329759"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2559">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329757"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2600">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329821"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2558">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329755"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2557">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329746"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2556">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329744"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2555">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329741"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2647">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329894"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344758">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343025"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2644">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329891"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2554">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329739"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2553">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329737"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2584">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329806"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2582">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329803"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2581">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329801"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2580">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329799"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2552">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329734"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2541">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2579">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329797"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2578">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329795"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2577">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329793"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2575">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329784"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2574">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329782"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2539">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329714"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2572">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329779"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345227">
            <name>const T&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343048"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345385">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343058"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344909">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343032"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344936">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343033"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344206">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342997"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344836">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343029"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344179">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342996"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343822">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342927"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343868">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342929"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345385">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343058"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344882">
            <name>const T*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343031"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3008">
            <name>const ThreadingException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
            </content>
        </type>
        <type derived="true" id="type.3009">
            <name>const ThreadingException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThreadingException_4952259FBBDB6BDFCF1A52EABE2C1A61BF601670"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3090">
            <name>const ThrowStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
            </content>
        </type>
        <type derived="true" id="type.3091">
            <name>const ThrowStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_ThrowStatement_6216EF486931E535CE6CDEE33F4D2E7A53BE76B7"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3118">
            <name>const TokenParser</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
            </content>
        </type>
        <type derived="true" id="type.3119">
            <name>const TokenParser&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TokenParser_319753BA62AEDA94D46A4D47AEE13AEC1B1F3B72"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3093">
            <name>const TryStatement</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
            </content>
        </type>
        <type derived="true" id="type.3094">
            <name>const TryStatement&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TryStatement_1132D26D95ED5027A0CFA7B5E46039A7A645EE96"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3014">
            <name>const Type</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
            </content>
        </type>
        <type derived="true" id="type.3015">
            <name>const Type&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_Type_8616C506F1B48B10568C6F4144C4A41FFB320CF3"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3054">
            <name>const TypeName</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
            </content>
        </type>
        <type derived="true" id="type.3055">
            <name>const TypeName&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_TypeName_BB4524B12FF73AADA611653B9DE399FFFCEC3BEB"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2567">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329770"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2576">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329785"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2573">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329780"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2564">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329765"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2648">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329895"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2643">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329883"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2645">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329892"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2570">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329775"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2561">
            <name>const U&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329760"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345449">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, JsonValue*>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343649"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345518">
            <name>const UnaryFun&lt;Pair&lt;String&lt;uchar>, System.Json.JsonClassCreatorDelegate>, String&lt;uchar>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343740"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3036">
            <name>const UnaryMinus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
            </content>
        </type>
        <type derived="true" id="type.3037">
            <name>const UnaryMinus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryMinus_04009179AAFCB4DEE000972E675D4198E1AF838F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3033">
            <name>const UnaryPlus</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
            </content>
        </type>
        <type derived="true" id="type.3034">
            <name>const UnaryPlus&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnaryPlus_65EA8B4AEC38C5A830F0C46A73800A840EFCF9C2"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3012">
            <name>const UnicodeException</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
            </content>
        </type>
        <type derived="true" id="type.3013">
            <name>const UnicodeException&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_UnicodeException_F535D36BB8009200467ACEA05819217182306079"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345134">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345131"/>
            </content>
        </type>
        <type derived="true" id="type.9344343">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344340"/>
            </content>
        </type>
        <type derived="true" id="type.9345134">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345131"/>
            </content>
        </type>
        <type derived="true" id="type.9344587">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344584"/>
            </content>
        </type>
        <type derived="true" id="type.9344465">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344462"/>
            </content>
        </type>
        <type derived="true" id="type.9345012">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345009"/>
            </content>
        </type>
        <type derived="true" id="type.9344282">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344279"/>
            </content>
        </type>
        <type derived="true" id="type.9343944">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343941"/>
            </content>
        </type>
        <type derived="true" id="type.9344005">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344002"/>
            </content>
        </type>
        <type derived="true" id="type.9345073">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345070"/>
            </content>
        </type>
        <type derived="true" id="type.9344404">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344401"/>
            </content>
        </type>
        <type derived="true" id="type.9344526">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344523"/>
            </content>
        </type>
        <type derived="true" id="type.9344528">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344523"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343946">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343941"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344406">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344401"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345075">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345070"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345136">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344007">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344002"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344284">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344279"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344467">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344462"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344345">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344340"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345014">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344589">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344584"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345136">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345131"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344527">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344523"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344283">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344279"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344405">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344401"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345074">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345070"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344588">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344584"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345013">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344344">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344340"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344006">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344002"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344466">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9344462"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345135">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345131"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343945">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;Key, Value>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343941"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343690">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343687"/>
            </content>
        </type>
        <type derived="true" id="type.9343692">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343687"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343691">
            <name>const UniquePtr&lt;RedBlackTreeNode&lt;Pair&lt;String&lt;uchar>, JsonValue*>>>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343687"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343805">
            <name>const UniquePtr&lt;System.Json.JsonClassFactory></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343802"/>
            </content>
        </type>
        <type derived="true" id="type.9343807">
            <name>const UniquePtr&lt;System.Json.JsonClassFactory>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343802"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343806">
            <name>const UniquePtr&lt;System.Json.JsonClassFactory>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343802"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343719">
            <name>const UniquePtr&lt;System.Json.JsonParser></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343716"/>
            </content>
        </type>
        <type derived="true" id="type.9343721">
            <name>const UniquePtr&lt;System.Json.JsonParser>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343716"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343720">
            <name>const UniquePtr&lt;System.Json.JsonParser>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343716"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343625">
            <name>const UniquePtr&lt;System.Json.JsonValue></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343622"/>
            </content>
        </type>
        <type derived="true" id="type.9343627">
            <name>const UniquePtr&lt;System.Json.JsonValue>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343622"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343626">
            <name>const UniquePtr&lt;System.Json.JsonValue>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9343622"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344830">
            <name>const UniquePtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
            </content>
        </type>
        <type derived="true" id="type.9345379">
            <name>const UniquePtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
            </content>
        </type>
        <type derived="true" id="type.9343816">
            <name>const UniquePtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
            </content>
        </type>
        <type derived="true" id="type.9345379">
            <name>const UniquePtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
            </content>
        </type>
        <type derived="true" id="type.9344832">
            <name>const UniquePtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345381">
            <name>const UniquePtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343818">
            <name>const UniquePtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344831">
            <name>const UniquePtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343817">
            <name>const UniquePtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345380">
            <name>const UniquePtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_UniquePtr_T_793F841C13E9DD3A6869243C74F1D948C0E04009"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345088">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343041"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343959">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342934"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343898">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342931"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344541">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343014"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344966">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343035"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344419">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343008"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345088">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343041"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344480">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343011"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2624">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9329863"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344236">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9342999"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345027">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343038"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344358">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343005"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344297">
            <name>const Value&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9343002"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345593">
            <name>const ValueObject&lt;JsonArray*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345590"/>
            </content>
        </type>
        <type derived="true" id="type.9345595">
            <name>const ValueObject&lt;JsonArray*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345590"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345594">
            <name>const ValueObject&lt;JsonArray*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345590"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345574">
            <name>const ValueObject&lt;JsonNumber*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345571"/>
            </content>
        </type>
        <type derived="true" id="type.9345576">
            <name>const ValueObject&lt;JsonNumber*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345571"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345575">
            <name>const ValueObject&lt;JsonNumber*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345571"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345583">
            <name>const ValueObject&lt;JsonObject*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345580"/>
            </content>
        </type>
        <type derived="true" id="type.9345585">
            <name>const ValueObject&lt;JsonObject*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345580"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345584">
            <name>const ValueObject&lt;JsonObject*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345580"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345565">
            <name>const ValueObject&lt;JsonString*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345562"/>
            </content>
        </type>
        <type derived="true" id="type.9345567">
            <name>const ValueObject&lt;JsonString*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345562"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345566">
            <name>const ValueObject&lt;JsonString*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345562"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345553">
            <name>const ValueObject&lt;JsonValue*></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345550"/>
            </content>
        </type>
        <type derived="true" id="type.9345555">
            <name>const ValueObject&lt;JsonValue*>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345550"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345554">
            <name>const ValueObject&lt;JsonValue*>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9345550"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2878">
            <name>const ValueType&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="9337398"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344863">
            <name>const WeakCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
            </content>
        </type>
        <type derived="true" id="type.9345412">
            <name>const WeakCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
            </content>
        </type>
        <type derived="true" id="type.9343849">
            <name>const WeakCount&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
            </content>
        </type>
        <type derived="true" id="type.9343851">
            <name>const WeakCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345414">
            <name>const WeakCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344865">
            <name>const WeakCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345414">
            <name>const WeakCount&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344864">
            <name>const WeakCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345413">
            <name>const WeakCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343850">
            <name>const WeakCount&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakCount_T_0D8387F035C5F8D80B30EA717671A4B77393C51F"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344871">
            <name>const WeakPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
            </content>
        </type>
        <type derived="true" id="type.9345420">
            <name>const WeakPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
            </content>
        </type>
        <type derived="true" id="type.9343857">
            <name>const WeakPtr&lt;T></name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
            </content>
        </type>
        <type derived="true" id="type.9344873">
            <name>const WeakPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345422">
            <name>const WeakPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343859">
            <name>const WeakPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345422">
            <name>const WeakPtr&lt;T>&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344872">
            <name>const WeakPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9343858">
            <name>const WeakPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345421">
            <name>const WeakPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9344872">
            <name>const WeakPtr&lt;T>*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.class_WeakPtr_T_D49C63E2DEDE836F0176506DCCB026745EADD5CC"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2912">
            <name>const double&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2910">
            <name>const float&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329186"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2899">
            <name>const sbyte&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329178"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2902">
            <name>const short&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329180"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.3123">
            <name>const stdlib</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
            </content>
        </type>
        <type derived="true" id="type.3124">
            <name>const stdlib&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9330413">
            <name>const uchar*</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.2904">
            <name>const ushort&amp;</name>
            <content>
                <qualifier>const</qualifier>
                <baseType ref="type.9329181"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329187">
            <name>double</name>
        </type>
        <type derived="true" id="type.9329224">
            <name>double&amp;</name>
            <content>
                <baseType ref="type.9329187"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329186">
            <name>float</name>
        </type>
        <type derived="true" id="type.9329209">
            <name>int&amp;</name>
            <content>
                <baseType ref="type.9329182"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329184">
            <name>long</name>
        </type>
        <type basic="true" id="type.9329178">
            <name>sbyte</name>
        </type>
        <type basic="true" id="type.9329180">
            <name>short</name>
        </type>
        <type derived="true" id="type.3125">
            <name>stdlib&amp;&amp;</name>
            <content>
                <baseType ref="class_stdlib_C45D8720A0EE8749F9E55E6402CA85D0B654A981"/>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329190">
            <name>uchar</name>
        </type>
        <type derived="true" id="type.9329233">
            <name>uchar&amp;</name>
            <content>
                <baseType ref="type.9329190"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329232">
            <name>uchar*</name>
            <content>
                <baseType ref="type.9329190"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329183">
            <name>uint</name>
        </type>
        <type derived="true" id="type.9329212">
            <name>uint&amp;</name>
            <content>
                <baseType ref="type.9329183"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329211">
            <name>uint*</name>
            <content>
                <baseType ref="type.9329183"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329185">
            <name>ulong</name>
        </type>
        <type derived="true" id="type.9329218">
            <name>ulong&amp;</name>
            <content>
                <baseType ref="type.9329185"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329217">
            <name>ulong*</name>
            <content>
                <baseType ref="type.9329185"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329181">
            <name>ushort</name>
        </type>
        <type derived="true" id="type.9329329">
            <name>void*</name>
            <content>
                <baseType ref="type.9329191"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type basic="true" id="type.9329189">
            <name>wchar</name>
        </type>
        <type derived="true" id="type.9329230">
            <name>wchar&amp;</name>
            <content>
                <baseType ref="type.9329189"/>
                <qualifier>&amp;</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9329229">
            <name>wchar*</name>
            <content>
                <baseType ref="type.9329189"/>
                <qualifier>*</qualifier>
            </content>
        </type>
        <type derived="true" id="type.9345426">
            <name>wchar*&amp;&amp;</name>
            <content>
                <baseType ref="type.9329189"/>
                <qualifier>*</qualifier>
                <qualifier>&amp;&amp;</qualifier>
            </content>
        </type>
    </types>
</library>
