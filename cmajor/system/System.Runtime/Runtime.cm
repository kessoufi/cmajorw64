// =================================
// Copyright (c) 2018 Seppo Laakko
// Distributed under the MIT license
// =================================

public extern cdecl nothrow void RtInit();
public extern cdecl nothrow void RtDone();
public extern cdecl nothrow int RtArgc();
public extern cdecl nothrow const char** RtArgv();
public extern cdecl nothrow void RtExit(int exitCode);
public extern cdecl nothrow void* RtMemAlloc(long size);
public extern cdecl nothrow void* RtMemAllocInfo(long size, const char* info);
public extern cdecl nothrow void RtDispose(void* ptr);
public extern cdecl nothrow void RtMemFree(void* ptr);
public extern cdecl nothrow void RtBeginStaticInitCriticalSection(uint staticClassId);
public extern cdecl nothrow void RtEndStaticInitCriticalSection(uint staticClassId);
public extern cdecl nothrow void RtEnqueueDestruction(void* destructor, void* arg);
public extern cdecl nothrow void RtFailAssertion(const char* assertion, const char* function, const char* sourceFilePath, int lineNumber);
public extern cdecl void RtThrowException(void* exception, uint exceptionTypeId);
public extern cdecl nothrow bool RtHandleException(uint exceptionTypeId);
public extern cdecl nothrow void* RtGetException();
public extern cdecl nothrow void RtCaptureException(void*& exception, ulong& exceptionClassId);
public extern cdecl nothrow void RtThrowCapturedException(void* exception, ulong exceptionClassId);
public extern cdecl nothrow const char* RtGetError(int errorId);
public extern cdecl nothrow void RtDisposeError(int errorId);
public extern cdecl nothrow const char* RtGetStackTrace();
public extern cdecl nothrow void RtDisposeStackTrace();
public extern cdecl nothrow int RtOpen(const char* filePath, byte openMode);
public extern cdecl nothrow int RtClose(int fileHandle);
public extern cdecl nothrow int RtWrite(int fileHandle, const void* buffer, long count);
public extern cdecl nothrow int RtWriteByte(int fileHandle, byte x);
public extern cdecl nothrow long RtRead(int fileHandle, void* buffer, long bufferSize);
public extern cdecl nothrow int RtReadByte(int fileHandle);
public extern cdecl nothrow int RtSeek(int fileHandle, long pos, byte origin);
public extern cdecl nothrow long RtTell(int fileHandle);
public extern cdecl nothrow bool RtFileExists(const char* filePath);
public extern cdecl nothrow bool RtLastWriteTimeLess(const char* filePath1, const char* filePath2);
public extern cdecl nothrow double RtPow(double x, int exponent);
public extern cdecl nothrow const char* RtGetEnvironmentVariable(const char* environmentVariableName);
public extern cdecl nothrow int RtGetCurrentWorkingDirectoryHandle();
public extern cdecl nothrow const char* RtGetCurrentWorkingDirectory(int currentWorkingDirectoryHandle);
public extern cdecl nothrow void RtFreeCurrentWorkingDirectoryHandle(int currentWorkingDirectoryHandle);
public extern cdecl nothrow int RtAllocateMutex();
public extern cdecl nothrow void RtFreeMutex(int mutexId);
public extern cdecl nothrow void RtLockMutex(int mutexId);
public extern cdecl nothrow void RtUnlockMutex(int mutexId);
public extern cdecl nothrow int RtAllocateRecursiveMutex();
public extern cdecl nothrow void RtFreeRecursiveMutex(int mutexId);
public extern cdecl nothrow void RtLockRecursiveMutex(int mutexId);
public extern cdecl nothrow void RtUnlockRecursiveMutex(int mutexId);
public extern cdecl nothrow int RtAllocateConditionVariable();
public extern cdecl nothrow int RtFreeConditionVariable(int conditionVariableId);
public extern cdecl nothrow int RtNotifyOne(int conditionVariableId);
public extern cdecl nothrow int RtNotifyAll(int conditionVariableId);
public extern cdecl nothrow int RtWaitConditionVariable(int conditionVariableId, void*);
public extern cdecl nothrow int RtWaitConditionVariableDuration(int conditionVariableId, void*, long duration);
public extern cdecl nothrow int RtCreateSocket();
public extern cdecl nothrow int RtBindSocket(int socketHandle, int port);
public extern cdecl nothrow int RtListenSocket(int socketHandle, int backLog);
public extern cdecl nothrow int RtAcceptSocket(int socketHandle);
public extern cdecl nothrow int RtCloseSocket(int socketHandle);
public extern cdecl nothrow int RtShutdownSocket(int socketHandle, int mode);
public extern cdecl nothrow int RtConnectSocket(const char* node, const char* service);
public extern cdecl nothrow int RtSendSocket(int socketHandle, byte* buf, int len, int flags);
public extern cdecl nothrow int RtReceiveSocket(int socketHandle, byte* buf, int len, int flags);
public extern cdecl nothrow long RtNow();
public extern cdecl nothrow void RtSleep(long nanoseconds);
public extern cdecl nothrow void RtInitRand(uint seed);
public extern cdecl nothrow uint RtRandom();
public extern cdecl nothrow ulong RtRandom64();
public extern cdecl nothrow void* RtCreateBigInt();
public extern cdecl nothrow void RtDestroyBigInt(void* bigInt);
public extern cdecl nothrow void RtAssignBigIntBigInt(void* left, void* right);
public extern cdecl nothrow void RtAssignBigIntInt(void* bigInt, int i);
public extern cdecl nothrow void RtAssignBigIntUInt(void* bigInt, uint ui);
public extern cdecl nothrow int RtAssignBigIntStr(void* bigInt, const char* str, int base_);
public extern cdecl nothrow int RtGetBigIntStrHandle(void* bigInt, int base_);
public extern cdecl nothrow const char* RtGetBigIntStr(int bigIntStrHandle);
public extern cdecl nothrow void RtFreeBigIntStr(int bigIntStrHandle);
public extern cdecl nothrow void RtNegBigInt(void* result, void* bigInt);
public extern cdecl nothrow void RtAbsBigInt(void* result, void* bigInt);
public extern cdecl nothrow void RtAddBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtSubBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtMulBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtDivBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtRemBigInt(void* result, void* left, void* right);
public extern cdecl nothrow int RtCmpBigInt(void* left, void* right);
public extern cdecl nothrow void RtAndBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtOrBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtXorBigInt(void* result, void* left, void* right);
public extern cdecl nothrow void RtCplBigInt(void* result, void* bigInt);
public extern cdecl nothrow void RtSetBitBigInt(void* bigInt, uint bitIndex);
public extern cdecl nothrow void RtClearBitBigInt(void* bigInt, uint bitIndex);
public extern cdecl nothrow void RtToggleBitBigInt(void* bigInt, uint bitIndex);
public extern cdecl nothrow int RtTestBitBigInt(void* bigInt, uint bitIndex);
public extern cdecl nothrow void* RtCreateBigRational();
public extern cdecl nothrow void RtDestroyBigRational(void* bigRational);
public extern cdecl nothrow void RtCanonicalizeBigRational(void* bigRational);
public extern cdecl nothrow void RtAssignBigRational(void* left, void* right);
public extern cdecl nothrow int RtAssignBigRationalStr(void* left, const char* str, int base_);
public extern cdecl nothrow void RtSetBigRationalInt(void* bigRational, int numerator, int denominator);
public extern cdecl nothrow void RtSetBigRationalUInt(void* bigRational, uint numerator, uint denominator);
public extern cdecl nothrow int RtGetBigRationalStrHandle(void* bigRational, int base_);
public extern cdecl nothrow const char* RtGetBigRationalStr(int bigRationalStrHandle);
public extern cdecl nothrow void RtFreeBigRationalStr(int bigRationalStrHandle);
public extern cdecl nothrow void RtSetBigRationalBigInt(void* bigRational, void* bigInt);
public extern cdecl nothrow void RtAddBigRational(void* target, void* left, void* right);
public extern cdecl nothrow void RtSubBigRational(void* target, void* left, void* right);
public extern cdecl nothrow void RtMulBigRational(void* target, void* left, void* right);
public extern cdecl nothrow void RtDivBigRational(void* target, void* left, void* right);
public extern cdecl nothrow void RtNegBigRational(void* left, void* right);
public extern cdecl nothrow void RtAbsBigRational(void* left, void* right);
public extern cdecl nothrow int RtCmpBigRational(void* left, void* right);
public extern cdecl nothrow int RtEqualBigRational(void* left, void* right);
public extern cdecl nothrow void RtGetNumeratorBigRational(void* numeratorBigInt, void* bigRational);
public extern cdecl nothrow void RtGetDenominatorBigRational(void* denominatorBigInt, void* bigRational);
public extern cdecl nothrow void RtBigFloatSetDefaultPrec(uint defaultPrec);
public extern cdecl nothrow uint RtBigFloatGetDefaultPrec();
public extern cdecl nothrow void* RtCreateBigFloat();
public extern cdecl nothrow void* RtCreateBitFloatPrec(uint prec);
public extern cdecl nothrow void RtDestroyBigFloat(void* bigFloat);
public extern cdecl nothrow int RtGetBigFloatPrec(void* bigFloat);
public extern cdecl nothrow void RtSetBigFloatPrec(void* bigFloat, uint prec);
public extern cdecl nothrow void RtSetBigFloat(void* left, void* right);
public extern cdecl nothrow void RtSetBigFloatUInt(void* left, uint right);
public extern cdecl nothrow void RtSetBigFloatInt(void* left, int right);
public extern cdecl nothrow void RtSetBigFloatDouble(void* left, double right);
public extern cdecl nothrow void RtSetBigFloatBigInt(void* left, void* right);
public extern cdecl nothrow void RtSetBigFloatBigRational(void* left, void* right);
public extern cdecl nothrow int RtSetBigFloatStr(void* left, const char* str, int base_);
public extern cdecl nothrow int RtGetBigFloatStrHandle(void* bigFloat, int base_, uint numDigits, long* exponent);
public extern cdecl nothrow const char* RtGetBigFloatStr(int bigFloatStrHandle);
public extern cdecl nothrow void RtFreeBigFloatStr(int bigFloatStrHandle);
public extern cdecl nothrow void RtAddBigFloat(void* target, void* left, void* right);
public extern cdecl nothrow void RtSubBigFloat(void* target, void* left, void* right);
public extern cdecl nothrow void RtMulBigFloat(void* target, void* left, void* right);
public extern cdecl nothrow void RtDivBigFloat(void* target, void* left, void* right);
public extern cdecl nothrow void RtSqrtBigFloat(void* target, void* subject);
public extern cdecl nothrow void RtNegBigFloat(void* target, void* subject);
public extern cdecl nothrow void RtAbsBigFloat(void* target, void* subject);
public extern cdecl nothrow int RtCmpBigFloat(void* left, void* right);
public extern cdecl nothrow void RtCeilBigFloat(void* target, void* subject);
public extern cdecl nothrow void RtFloorBigFloat(void* target, void* subject);
public extern cdecl nothrow void RtTruncBigFloat(void* target, void* subject);
public extern cdecl nothrow double RtGetBigFloatDouble(void* bigFloat);
