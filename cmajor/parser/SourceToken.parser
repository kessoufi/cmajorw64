// =================================
// Copyright (c) 2018 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <cmajor/ast/SourceToken.hpp>
[cpp]#include <cmajor/parser/Keyword.hpp>
[cpp]#include <cmajor/parser/Identifier.hpp>
[cpp]#include <cmajor/parser/Literal.hpp>

namespace cmajor.parser
{
    [hpp]using namespace cmajor::ast;

    grammar SourceTokenGrammar
    {
        using KeywordGrammar.Keyword;
        using IdentifierGrammar.QualifiedId;
        using LiteralGrammar.FloatingLiteral;
        using LiteralGrammar.IntegerLiteral;
        using LiteralGrammar.CharLiteral;
        using LiteralGrammar.StringLiteral;
        using stdlib.line_comment;
        using stdlib.block_comment;
        using stdlib.newline;

        SourceTokens(SourceTokenFormatter* formatter)
            ::= empty{ formatter->BeginFormat(); }
                SourceToken(formatter)*
                empty{ formatter->EndFormat(); }
            ;

        SourceToken(SourceTokenFormatter* formatter)
            ::= Keyword{ formatter->Keyword(std::u32string(matchBegin, matchEnd)); }
            |   QualifiedId{ formatter->Identifier(std::u32string(matchBegin, matchEnd)); }
            |   (FloatingLiteral | IntegerLiteral){ formatter->Number(std::u32string(matchBegin, matchEnd)); }
            |   CharLiteral{ formatter->Char(std::u32string(matchBegin, matchEnd)); }
            |   StringLiteral{ formatter->String(std::u32string(matchBegin, matchEnd)); }
            |   Spaces{ formatter->Spaces(Spaces); }
            |   line_comment{ formatter->Comment(std::u32string(matchBegin, matchEnd)); }
            |   block_comment{ formatter->Comment(std::u32string(matchBegin, matchEnd)); }
            |   newline{ formatter->NewLine(std::u32string(matchBegin, matchEnd)); }
            |   Other{ formatter->Other(Other); }
            ;

        Spaces : std::u32string
            ::= ([\t ]+){ value = std::u32string(matchBegin, matchEnd); }
            ;

        Other : std::u32string
            ::= [^\r\n]{ value = std::u32string(matchBegin, matchEnd); }
            ;
    }
}
