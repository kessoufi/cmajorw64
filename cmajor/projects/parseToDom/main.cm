using System;
using System.Text;
using System.Dom;
using System.XPath;

int main(int argc, const char** argv)
{
    try
    {
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            UniquePtr<DomDocument> doc = ParseXmlFileToDomDocument(arg);
            UniquePtr<XPathObject> object = Evaluate(u"//avoindata:katunimi", doc.Get());
            if (object.Get() is XPathNodeSet*)
            {
                XPathNodeSet* nodeSet = cast<XPathNodeSet*>(object.Get());
                long n = nodeSet->Length();
                Console.Out() << n << " nodes matched:" << endl();
                CodeFormatter formatter(Console.Out());
                for (long i = 0; i < n; ++i)
                {
                    DomNode* node = (*nodeSet)[i];
                    if (node is DomElement*)
                    {
                        DomElement* element = cast<DomElement*>(node);
                        DomNode* child = element->FirstChild();
                        child->Write(formatter);
                    }
                    formatter.WriteLine();
                }
            }
            else
            {
                throw Exception("node-set expected");
            }
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.ToString() << endl();
        return 1;
    }
    return 0;
}