<?xml version="1.0" encoding="utf-8"?>
<rules>
    <type source="string" sns="std" target="string" tns="System" members="string_members"/>
    <type source="basic_string&lt;CharT>" sns="std" target="String&lt;CharT>" tns="System" members="string_members"/>
    <type source="u16_string" sns="std" target="wstring" tns="System" members="string_members"/>
    <type source="u32_string" sns="std" target="ustring" tns="System" members="string_members"/>

    <members id="string_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="data" target="Chars"/>
        <member source="c_str" target="Chars"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Length"/>
        <member source="length" target="Length"/>
        <member source="append" target="Append"/>
        <member source="substr" target="Substring"/>
        <member source="find" target="Find"/>
    </members>

    <type source="vector&lt;T>" sns="std" target="List&lt;T>" tns="System.Collections" members="vector_members"/>

    <members id="vector_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="push_back" target="Add"/>
        <member source="pop_back" target="RemoveLast"/>
        <member source="push_front" target="InsertFront"/>
        <member source="pop_front" target="RemoveFront"/>
        <member source="front" target="Front"/>
        <member source="back" target="Back"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Count"/>
        <member source="reserve" target="Reserve"/>
        <member source="resize" target="Resize"/>
        <member source="capacity" target="Capacity"/>
        <member source="clear" target="Clear"/>
    </members>

    <type source="set&lt;T, C=std::less&lt;T>>" sns="std" target="Set&lt;T, C=Less&lt;T>>" tns="System.Collections" members="set_members"/>

    <members id="set_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Count"/>
        <member source="clear" target="Clear"/>
        <member source="insert" target="Insert"/>
        <member source="find" target="Find"/>
    </members>

    <type source="map&lt;Key, T, C=std::less&lt;Key>>" sns="std" target="Map&lt;Key, T, C=Less&lt;Key>>" tns="System.Collections" members="map_members"/>

    <members id="map_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Count"/>
        <member source="clear" target="Clear"/>
        <member source="insert" target="Insert"/>
        <member source="find" target="Find"/>
    </members>

    <type source="unordered_set&lt;Key, Hash=std::hash&lt;Key>, KeyEqual=std::equal_to&lt;Key>>"
        sns="std" target="HashSet&lt;Key, Hash=Hasher&lt;Key>, KeyEqual=EqualTo&lt;Key>>"
        tns="System.Collections" members="unordered_set_members"/>

    <members id="unordered_set_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Count"/>
        <member source="clear" target="Clear"/>
        <member source="insert" target="Insert"/>
        <member source="find" target="Find"/>
    </members>

    <type source="unordered_map&lt;Key>, T, Hash=std::hash&lt;Key>, KeyEqual=std::equal_to&lt;Key>>"
          sns="std" target="HashMap&lt;Key>, T, Hash=Hasher&lt;Key>, KeyEqual=EqualTo&lt;Key>>"
          tns="System.Collections" members="unordered_map_members"/>

    <members id="unordered_map_members">
        <member source="iterator" target="Iterator"/>
        <member source="const_iterator" target="ConstIterator"/>
        <member source="begin" target="Begin"/>
        <member source="cbegin" target="CBegin"/>
        <member source="end" target="End"/>
        <member source="cend" target="CEnd"/>
        <member source="empty" target="IsEmpty"/>
        <member source="size" target="Count"/>
        <member source="clear" target="Clear"/>
        <member source="insert" target="Insert"/>
        <member source="find" target="Find"/>
    </members>
</rules>
