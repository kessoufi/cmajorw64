using System;
using Span = System.Text.Parsing.Span;

namespace symbols
{
    public enum SymbolFlags
    {
        none = 0, export = 1 << 0
    }
    
    public abstract class Symbol
    {
        public nothrow Symbol(const Span& span_, const ustring& name_) : flags(SymbolFlags.none), span(span_), name(name_), parent(null)
        {
        }
        public default virtual ~Symbol();
        public nothrow inline void SetParent(ContainerSymbol* parent_) 
        {
            parent = parent_;
        }
        public ustring FullName() const
        {
            ustring fullName;
            if (parent != null)
            {
                fullName = parent->FullName();
            }
            if (!fullName.IsEmpty())
            {
                fullName.Append('.').Append(name);
                return fullName;
            }
            else
            {
                return name;
            }
        }
        public SymbolFlags flags;
        public Span span;
        public ustring name;
        public ContainerSymbol* parent;
    }
}
